// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DayMetadata.proto

package co.viewfinder.proto;

public final class DayMetadataPB {
  private DayMetadataPB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface DayContributorOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 user_id = 1;
    /**
     * <code>optional int64 user_id = 1;</code>
     */
    boolean hasUserId();
    /**
     * <code>optional int64 user_id = 1;</code>
     */
    long getUserId();

    // optional .DayContributor.ContributorType type = 2;
    /**
     * <code>optional .DayContributor.ContributorType type = 2;</code>
     */
    boolean hasType();
    /**
     * <code>optional .DayContributor.ContributorType type = 2;</code>
     */
    co.viewfinder.proto.DayMetadataPB.DayContributor.ContributorType getType();

    // optional string identity = 3;
    /**
     * <code>optional string identity = 3;</code>
     *
     * <pre>
     * Identity is set only for contributors without user ids, i.e. prospective users after they are added
     * to the conversation and before we have recieved their user id from the server.
     * </pre>
     */
    boolean hasIdentity();
    /**
     * <code>optional string identity = 3;</code>
     *
     * <pre>
     * Identity is set only for contributors without user ids, i.e. prospective users after they are added
     * to the conversation and before we have recieved their user id from the server.
     * </pre>
     */
    java.lang.String getIdentity();
    /**
     * <code>optional string identity = 3;</code>
     *
     * <pre>
     * Identity is set only for contributors without user ids, i.e. prospective users after they are added
     * to the conversation and before we have recieved their user id from the server.
     * </pre>
     */
    com.google.protobuf.ByteString
        getIdentityBytes();
  }
  /**
   * Protobuf type {@code DayContributor}
   */
  public static final class DayContributor extends
      com.google.protobuf.GeneratedMessage
      implements DayContributorOrBuilder {
    // Use DayContributor.newBuilder() to construct.
    private DayContributor(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DayContributor(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DayContributor defaultInstance;
    public static DayContributor getDefaultInstance() {
      return defaultInstance;
    }

    public DayContributor getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DayContributor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              userId_ = input.readInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              co.viewfinder.proto.DayMetadataPB.DayContributor.ContributorType value = co.viewfinder.proto.DayMetadataPB.DayContributor.ContributorType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                type_ = value;
              }
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              identity_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return co.viewfinder.proto.DayMetadataPB.internal_static_DayContributor_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return co.viewfinder.proto.DayMetadataPB.internal_static_DayContributor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              co.viewfinder.proto.DayMetadataPB.DayContributor.class, co.viewfinder.proto.DayMetadataPB.DayContributor.Builder.class);
    }

    public static com.google.protobuf.Parser<DayContributor> PARSER =
        new com.google.protobuf.AbstractParser<DayContributor>() {
      public DayContributor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DayContributor(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DayContributor> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code DayContributor.ContributorType}
     */
    public enum ContributorType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNVIEWED_CONTENT = 1;</code>
       *
       * <pre>
       * unviewed content
       * </pre>
       */
      UNVIEWED_CONTENT(0, 1),
      /**
       * <code>VIEWED_CONTENT = 2;</code>
       *
       * <pre>
       * already-viewed content
       * </pre>
       */
      VIEWED_CONTENT(1, 2),
      /**
       * <code>NO_CONTENT = 4;</code>
       *
       * <pre>
       * just a follower; no content ever added
       * </pre>
       */
      NO_CONTENT(2, 4),
      ;

      /**
       * <code>UNVIEWED_CONTENT = 1;</code>
       *
       * <pre>
       * unviewed content
       * </pre>
       */
      public static final int UNVIEWED_CONTENT_VALUE = 1;
      /**
       * <code>VIEWED_CONTENT = 2;</code>
       *
       * <pre>
       * already-viewed content
       * </pre>
       */
      public static final int VIEWED_CONTENT_VALUE = 2;
      /**
       * <code>NO_CONTENT = 4;</code>
       *
       * <pre>
       * just a follower; no content ever added
       * </pre>
       */
      public static final int NO_CONTENT_VALUE = 4;


      public final int getNumber() { return value; }

      public static ContributorType valueOf(int value) {
        switch (value) {
          case 1: return UNVIEWED_CONTENT;
          case 2: return VIEWED_CONTENT;
          case 4: return NO_CONTENT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ContributorType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ContributorType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ContributorType>() {
              public ContributorType findValueByNumber(int number) {
                return ContributorType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return co.viewfinder.proto.DayMetadataPB.DayContributor.getDescriptor().getEnumTypes().get(0);
      }

      private static final ContributorType[] VALUES = values();

      public static ContributorType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private ContributorType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:DayContributor.ContributorType)
    }

    private int bitField0_;
    // optional int64 user_id = 1;
    public static final int USER_ID_FIELD_NUMBER = 1;
    private long userId_;
    /**
     * <code>optional int64 user_id = 1;</code>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 user_id = 1;</code>
     */
    public long getUserId() {
      return userId_;
    }

    // optional .DayContributor.ContributorType type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private co.viewfinder.proto.DayMetadataPB.DayContributor.ContributorType type_;
    /**
     * <code>optional .DayContributor.ContributorType type = 2;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .DayContributor.ContributorType type = 2;</code>
     */
    public co.viewfinder.proto.DayMetadataPB.DayContributor.ContributorType getType() {
      return type_;
    }

    // optional string identity = 3;
    public static final int IDENTITY_FIELD_NUMBER = 3;
    private java.lang.Object identity_;
    /**
     * <code>optional string identity = 3;</code>
     *
     * <pre>
     * Identity is set only for contributors without user ids, i.e. prospective users after they are added
     * to the conversation and before we have recieved their user id from the server.
     * </pre>
     */
    public boolean hasIdentity() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string identity = 3;</code>
     *
     * <pre>
     * Identity is set only for contributors without user ids, i.e. prospective users after they are added
     * to the conversation and before we have recieved their user id from the server.
     * </pre>
     */
    public java.lang.String getIdentity() {
      java.lang.Object ref = identity_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          identity_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string identity = 3;</code>
     *
     * <pre>
     * Identity is set only for contributors without user ids, i.e. prospective users after they are added
     * to the conversation and before we have recieved their user id from the server.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIdentityBytes() {
      java.lang.Object ref = identity_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        identity_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      userId_ = 0L;
      type_ = co.viewfinder.proto.DayMetadataPB.DayContributor.ContributorType.UNVIEWED_CONTENT;
      identity_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, userId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, type_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getIdentityBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, userId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getIdentityBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static co.viewfinder.proto.DayMetadataPB.DayContributor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayContributor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayContributor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayContributor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayContributor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayContributor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayContributor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayContributor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayContributor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayContributor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(co.viewfinder.proto.DayMetadataPB.DayContributor prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DayContributor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements co.viewfinder.proto.DayMetadataPB.DayContributorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_DayContributor_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_DayContributor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                co.viewfinder.proto.DayMetadataPB.DayContributor.class, co.viewfinder.proto.DayMetadataPB.DayContributor.Builder.class);
      }

      // Construct using co.viewfinder.proto.DayMetadataPB.DayContributor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = co.viewfinder.proto.DayMetadataPB.DayContributor.ContributorType.UNVIEWED_CONTENT;
        bitField0_ = (bitField0_ & ~0x00000002);
        identity_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_DayContributor_descriptor;
      }

      public co.viewfinder.proto.DayMetadataPB.DayContributor getDefaultInstanceForType() {
        return co.viewfinder.proto.DayMetadataPB.DayContributor.getDefaultInstance();
      }

      public co.viewfinder.proto.DayMetadataPB.DayContributor build() {
        co.viewfinder.proto.DayMetadataPB.DayContributor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public co.viewfinder.proto.DayMetadataPB.DayContributor buildPartial() {
        co.viewfinder.proto.DayMetadataPB.DayContributor result = new co.viewfinder.proto.DayMetadataPB.DayContributor(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.identity_ = identity_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof co.viewfinder.proto.DayMetadataPB.DayContributor) {
          return mergeFrom((co.viewfinder.proto.DayMetadataPB.DayContributor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(co.viewfinder.proto.DayMetadataPB.DayContributor other) {
        if (other == co.viewfinder.proto.DayMetadataPB.DayContributor.getDefaultInstance()) return this;
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasIdentity()) {
          bitField0_ |= 0x00000004;
          identity_ = other.identity_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        co.viewfinder.proto.DayMetadataPB.DayContributor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (co.viewfinder.proto.DayMetadataPB.DayContributor) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 user_id = 1;
      private long userId_ ;
      /**
       * <code>optional int64 user_id = 1;</code>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 user_id = 1;</code>
       */
      public long getUserId() {
        return userId_;
      }
      /**
       * <code>optional int64 user_id = 1;</code>
       */
      public Builder setUserId(long value) {
        bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 user_id = 1;</code>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = 0L;
        onChanged();
        return this;
      }

      // optional .DayContributor.ContributorType type = 2;
      private co.viewfinder.proto.DayMetadataPB.DayContributor.ContributorType type_ = co.viewfinder.proto.DayMetadataPB.DayContributor.ContributorType.UNVIEWED_CONTENT;
      /**
       * <code>optional .DayContributor.ContributorType type = 2;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .DayContributor.ContributorType type = 2;</code>
       */
      public co.viewfinder.proto.DayMetadataPB.DayContributor.ContributorType getType() {
        return type_;
      }
      /**
       * <code>optional .DayContributor.ContributorType type = 2;</code>
       */
      public Builder setType(co.viewfinder.proto.DayMetadataPB.DayContributor.ContributorType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .DayContributor.ContributorType type = 2;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = co.viewfinder.proto.DayMetadataPB.DayContributor.ContributorType.UNVIEWED_CONTENT;
        onChanged();
        return this;
      }

      // optional string identity = 3;
      private java.lang.Object identity_ = "";
      /**
       * <code>optional string identity = 3;</code>
       *
       * <pre>
       * Identity is set only for contributors without user ids, i.e. prospective users after they are added
       * to the conversation and before we have recieved their user id from the server.
       * </pre>
       */
      public boolean hasIdentity() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string identity = 3;</code>
       *
       * <pre>
       * Identity is set only for contributors without user ids, i.e. prospective users after they are added
       * to the conversation and before we have recieved their user id from the server.
       * </pre>
       */
      public java.lang.String getIdentity() {
        java.lang.Object ref = identity_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          identity_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string identity = 3;</code>
       *
       * <pre>
       * Identity is set only for contributors without user ids, i.e. prospective users after they are added
       * to the conversation and before we have recieved their user id from the server.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIdentityBytes() {
        java.lang.Object ref = identity_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          identity_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string identity = 3;</code>
       *
       * <pre>
       * Identity is set only for contributors without user ids, i.e. prospective users after they are added
       * to the conversation and before we have recieved their user id from the server.
       * </pre>
       */
      public Builder setIdentity(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        identity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string identity = 3;</code>
       *
       * <pre>
       * Identity is set only for contributors without user ids, i.e. prospective users after they are added
       * to the conversation and before we have recieved their user id from the server.
       * </pre>
       */
      public Builder clearIdentity() {
        bitField0_ = (bitField0_ & ~0x00000004);
        identity_ = getDefaultInstance().getIdentity();
        onChanged();
        return this;
      }
      /**
       * <code>optional string identity = 3;</code>
       *
       * <pre>
       * Identity is set only for contributors without user ids, i.e. prospective users after they are added
       * to the conversation and before we have recieved their user id from the server.
       * </pre>
       */
      public Builder setIdentityBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        identity_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DayContributor)
    }

    static {
      defaultInstance = new DayContributor(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DayContributor)
  }

  public interface DayPhotoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 photo_id = 1;
    /**
     * <code>optional int64 photo_id = 1;</code>
     */
    boolean hasPhotoId();
    /**
     * <code>optional int64 photo_id = 1;</code>
     */
    long getPhotoId();

    // optional int64 episode_id = 2;
    /**
     * <code>optional int64 episode_id = 2;</code>
     */
    boolean hasEpisodeId();
    /**
     * <code>optional int64 episode_id = 2;</code>
     */
    long getEpisodeId();

    // optional double aspect_ratio = 3;
    /**
     * <code>optional double aspect_ratio = 3;</code>
     */
    boolean hasAspectRatio();
    /**
     * <code>optional double aspect_ratio = 3;</code>
     */
    double getAspectRatio();

    // optional double timestamp = 4;
    /**
     * <code>optional double timestamp = 4;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional double timestamp = 4;</code>
     */
    double getTimestamp();
  }
  /**
   * Protobuf type {@code DayPhoto}
   */
  public static final class DayPhoto extends
      com.google.protobuf.GeneratedMessage
      implements DayPhotoOrBuilder {
    // Use DayPhoto.newBuilder() to construct.
    private DayPhoto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DayPhoto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DayPhoto defaultInstance;
    public static DayPhoto getDefaultInstance() {
      return defaultInstance;
    }

    public DayPhoto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DayPhoto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              photoId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              episodeId_ = input.readInt64();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              aspectRatio_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              timestamp_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return co.viewfinder.proto.DayMetadataPB.internal_static_DayPhoto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return co.viewfinder.proto.DayMetadataPB.internal_static_DayPhoto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              co.viewfinder.proto.DayMetadataPB.DayPhoto.class, co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder.class);
    }

    public static com.google.protobuf.Parser<DayPhoto> PARSER =
        new com.google.protobuf.AbstractParser<DayPhoto>() {
      public DayPhoto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DayPhoto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DayPhoto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 photo_id = 1;
    public static final int PHOTO_ID_FIELD_NUMBER = 1;
    private long photoId_;
    /**
     * <code>optional int64 photo_id = 1;</code>
     */
    public boolean hasPhotoId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 photo_id = 1;</code>
     */
    public long getPhotoId() {
      return photoId_;
    }

    // optional int64 episode_id = 2;
    public static final int EPISODE_ID_FIELD_NUMBER = 2;
    private long episodeId_;
    /**
     * <code>optional int64 episode_id = 2;</code>
     */
    public boolean hasEpisodeId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 episode_id = 2;</code>
     */
    public long getEpisodeId() {
      return episodeId_;
    }

    // optional double aspect_ratio = 3;
    public static final int ASPECT_RATIO_FIELD_NUMBER = 3;
    private double aspectRatio_;
    /**
     * <code>optional double aspect_ratio = 3;</code>
     */
    public boolean hasAspectRatio() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional double aspect_ratio = 3;</code>
     */
    public double getAspectRatio() {
      return aspectRatio_;
    }

    // optional double timestamp = 4;
    public static final int TIMESTAMP_FIELD_NUMBER = 4;
    private double timestamp_;
    /**
     * <code>optional double timestamp = 4;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional double timestamp = 4;</code>
     */
    public double getTimestamp() {
      return timestamp_;
    }

    private void initFields() {
      photoId_ = 0L;
      episodeId_ = 0L;
      aspectRatio_ = 0D;
      timestamp_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, photoId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, episodeId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, aspectRatio_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, timestamp_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, photoId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, episodeId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, aspectRatio_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, timestamp_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static co.viewfinder.proto.DayMetadataPB.DayPhoto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayPhoto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayPhoto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayPhoto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayPhoto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayPhoto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayPhoto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayPhoto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayPhoto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayPhoto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(co.viewfinder.proto.DayMetadataPB.DayPhoto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DayPhoto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_DayPhoto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_DayPhoto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                co.viewfinder.proto.DayMetadataPB.DayPhoto.class, co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder.class);
      }

      // Construct using co.viewfinder.proto.DayMetadataPB.DayPhoto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        photoId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        episodeId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        aspectRatio_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        timestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_DayPhoto_descriptor;
      }

      public co.viewfinder.proto.DayMetadataPB.DayPhoto getDefaultInstanceForType() {
        return co.viewfinder.proto.DayMetadataPB.DayPhoto.getDefaultInstance();
      }

      public co.viewfinder.proto.DayMetadataPB.DayPhoto build() {
        co.viewfinder.proto.DayMetadataPB.DayPhoto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public co.viewfinder.proto.DayMetadataPB.DayPhoto buildPartial() {
        co.viewfinder.proto.DayMetadataPB.DayPhoto result = new co.viewfinder.proto.DayMetadataPB.DayPhoto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.photoId_ = photoId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.episodeId_ = episodeId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.aspectRatio_ = aspectRatio_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.timestamp_ = timestamp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof co.viewfinder.proto.DayMetadataPB.DayPhoto) {
          return mergeFrom((co.viewfinder.proto.DayMetadataPB.DayPhoto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(co.viewfinder.proto.DayMetadataPB.DayPhoto other) {
        if (other == co.viewfinder.proto.DayMetadataPB.DayPhoto.getDefaultInstance()) return this;
        if (other.hasPhotoId()) {
          setPhotoId(other.getPhotoId());
        }
        if (other.hasEpisodeId()) {
          setEpisodeId(other.getEpisodeId());
        }
        if (other.hasAspectRatio()) {
          setAspectRatio(other.getAspectRatio());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        co.viewfinder.proto.DayMetadataPB.DayPhoto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (co.viewfinder.proto.DayMetadataPB.DayPhoto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 photo_id = 1;
      private long photoId_ ;
      /**
       * <code>optional int64 photo_id = 1;</code>
       */
      public boolean hasPhotoId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 photo_id = 1;</code>
       */
      public long getPhotoId() {
        return photoId_;
      }
      /**
       * <code>optional int64 photo_id = 1;</code>
       */
      public Builder setPhotoId(long value) {
        bitField0_ |= 0x00000001;
        photoId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 photo_id = 1;</code>
       */
      public Builder clearPhotoId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        photoId_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 episode_id = 2;
      private long episodeId_ ;
      /**
       * <code>optional int64 episode_id = 2;</code>
       */
      public boolean hasEpisodeId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 episode_id = 2;</code>
       */
      public long getEpisodeId() {
        return episodeId_;
      }
      /**
       * <code>optional int64 episode_id = 2;</code>
       */
      public Builder setEpisodeId(long value) {
        bitField0_ |= 0x00000002;
        episodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 episode_id = 2;</code>
       */
      public Builder clearEpisodeId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        episodeId_ = 0L;
        onChanged();
        return this;
      }

      // optional double aspect_ratio = 3;
      private double aspectRatio_ ;
      /**
       * <code>optional double aspect_ratio = 3;</code>
       */
      public boolean hasAspectRatio() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional double aspect_ratio = 3;</code>
       */
      public double getAspectRatio() {
        return aspectRatio_;
      }
      /**
       * <code>optional double aspect_ratio = 3;</code>
       */
      public Builder setAspectRatio(double value) {
        bitField0_ |= 0x00000004;
        aspectRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double aspect_ratio = 3;</code>
       */
      public Builder clearAspectRatio() {
        bitField0_ = (bitField0_ & ~0x00000004);
        aspectRatio_ = 0D;
        onChanged();
        return this;
      }

      // optional double timestamp = 4;
      private double timestamp_ ;
      /**
       * <code>optional double timestamp = 4;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional double timestamp = 4;</code>
       */
      public double getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional double timestamp = 4;</code>
       */
      public Builder setTimestamp(double value) {
        bitField0_ |= 0x00000008;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double timestamp = 4;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        timestamp_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DayPhoto)
    }

    static {
      defaultInstance = new DayPhoto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DayPhoto)
  }

  public interface FilteredEpisodeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 episode_id = 1;
    /**
     * <code>optional int64 episode_id = 1;</code>
     */
    boolean hasEpisodeId();
    /**
     * <code>optional int64 episode_id = 1;</code>
     */
    long getEpisodeId();

    // repeated int64 photo_ids = 2;
    /**
     * <code>repeated int64 photo_ids = 2;</code>
     */
    java.util.List<java.lang.Long> getPhotoIdsList();
    /**
     * <code>repeated int64 photo_ids = 2;</code>
     */
    int getPhotoIdsCount();
    /**
     * <code>repeated int64 photo_ids = 2;</code>
     */
    long getPhotoIds(int index);
  }
  /**
   * Protobuf type {@code FilteredEpisode}
   *
   * <pre>
   * A [possibly] pared-down subset of an episode which
   * lists only photo ids which are not already part of
   * an earlier episode also occurring in this event.
   * </pre>
   */
  public static final class FilteredEpisode extends
      com.google.protobuf.GeneratedMessage
      implements FilteredEpisodeOrBuilder {
    // Use FilteredEpisode.newBuilder() to construct.
    private FilteredEpisode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FilteredEpisode(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FilteredEpisode defaultInstance;
    public static FilteredEpisode getDefaultInstance() {
      return defaultInstance;
    }

    public FilteredEpisode getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FilteredEpisode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              episodeId_ = input.readInt64();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                photoIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              photoIds_.add(input.readInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                photoIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                photoIds_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          photoIds_ = java.util.Collections.unmodifiableList(photoIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return co.viewfinder.proto.DayMetadataPB.internal_static_FilteredEpisode_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return co.viewfinder.proto.DayMetadataPB.internal_static_FilteredEpisode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              co.viewfinder.proto.DayMetadataPB.FilteredEpisode.class, co.viewfinder.proto.DayMetadataPB.FilteredEpisode.Builder.class);
    }

    public static com.google.protobuf.Parser<FilteredEpisode> PARSER =
        new com.google.protobuf.AbstractParser<FilteredEpisode>() {
      public FilteredEpisode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FilteredEpisode(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FilteredEpisode> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 episode_id = 1;
    public static final int EPISODE_ID_FIELD_NUMBER = 1;
    private long episodeId_;
    /**
     * <code>optional int64 episode_id = 1;</code>
     */
    public boolean hasEpisodeId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 episode_id = 1;</code>
     */
    public long getEpisodeId() {
      return episodeId_;
    }

    // repeated int64 photo_ids = 2;
    public static final int PHOTO_IDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> photoIds_;
    /**
     * <code>repeated int64 photo_ids = 2;</code>
     */
    public java.util.List<java.lang.Long>
        getPhotoIdsList() {
      return photoIds_;
    }
    /**
     * <code>repeated int64 photo_ids = 2;</code>
     */
    public int getPhotoIdsCount() {
      return photoIds_.size();
    }
    /**
     * <code>repeated int64 photo_ids = 2;</code>
     */
    public long getPhotoIds(int index) {
      return photoIds_.get(index);
    }

    private void initFields() {
      episodeId_ = 0L;
      photoIds_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, episodeId_);
      }
      for (int i = 0; i < photoIds_.size(); i++) {
        output.writeInt64(2, photoIds_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, episodeId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < photoIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(photoIds_.get(i));
        }
        size += dataSize;
        size += 1 * getPhotoIdsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static co.viewfinder.proto.DayMetadataPB.FilteredEpisode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static co.viewfinder.proto.DayMetadataPB.FilteredEpisode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.FilteredEpisode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static co.viewfinder.proto.DayMetadataPB.FilteredEpisode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.FilteredEpisode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.FilteredEpisode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.FilteredEpisode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.FilteredEpisode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.FilteredEpisode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.FilteredEpisode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(co.viewfinder.proto.DayMetadataPB.FilteredEpisode prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FilteredEpisode}
     *
     * <pre>
     * A [possibly] pared-down subset of an episode which
     * lists only photo ids which are not already part of
     * an earlier episode also occurring in this event.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements co.viewfinder.proto.DayMetadataPB.FilteredEpisodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_FilteredEpisode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_FilteredEpisode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                co.viewfinder.proto.DayMetadataPB.FilteredEpisode.class, co.viewfinder.proto.DayMetadataPB.FilteredEpisode.Builder.class);
      }

      // Construct using co.viewfinder.proto.DayMetadataPB.FilteredEpisode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        episodeId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        photoIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_FilteredEpisode_descriptor;
      }

      public co.viewfinder.proto.DayMetadataPB.FilteredEpisode getDefaultInstanceForType() {
        return co.viewfinder.proto.DayMetadataPB.FilteredEpisode.getDefaultInstance();
      }

      public co.viewfinder.proto.DayMetadataPB.FilteredEpisode build() {
        co.viewfinder.proto.DayMetadataPB.FilteredEpisode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public co.viewfinder.proto.DayMetadataPB.FilteredEpisode buildPartial() {
        co.viewfinder.proto.DayMetadataPB.FilteredEpisode result = new co.viewfinder.proto.DayMetadataPB.FilteredEpisode(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.episodeId_ = episodeId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          photoIds_ = java.util.Collections.unmodifiableList(photoIds_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.photoIds_ = photoIds_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof co.viewfinder.proto.DayMetadataPB.FilteredEpisode) {
          return mergeFrom((co.viewfinder.proto.DayMetadataPB.FilteredEpisode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(co.viewfinder.proto.DayMetadataPB.FilteredEpisode other) {
        if (other == co.viewfinder.proto.DayMetadataPB.FilteredEpisode.getDefaultInstance()) return this;
        if (other.hasEpisodeId()) {
          setEpisodeId(other.getEpisodeId());
        }
        if (!other.photoIds_.isEmpty()) {
          if (photoIds_.isEmpty()) {
            photoIds_ = other.photoIds_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePhotoIdsIsMutable();
            photoIds_.addAll(other.photoIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        co.viewfinder.proto.DayMetadataPB.FilteredEpisode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (co.viewfinder.proto.DayMetadataPB.FilteredEpisode) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 episode_id = 1;
      private long episodeId_ ;
      /**
       * <code>optional int64 episode_id = 1;</code>
       */
      public boolean hasEpisodeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 episode_id = 1;</code>
       */
      public long getEpisodeId() {
        return episodeId_;
      }
      /**
       * <code>optional int64 episode_id = 1;</code>
       */
      public Builder setEpisodeId(long value) {
        bitField0_ |= 0x00000001;
        episodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 episode_id = 1;</code>
       */
      public Builder clearEpisodeId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        episodeId_ = 0L;
        onChanged();
        return this;
      }

      // repeated int64 photo_ids = 2;
      private java.util.List<java.lang.Long> photoIds_ = java.util.Collections.emptyList();
      private void ensurePhotoIdsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          photoIds_ = new java.util.ArrayList<java.lang.Long>(photoIds_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int64 photo_ids = 2;</code>
       */
      public java.util.List<java.lang.Long>
          getPhotoIdsList() {
        return java.util.Collections.unmodifiableList(photoIds_);
      }
      /**
       * <code>repeated int64 photo_ids = 2;</code>
       */
      public int getPhotoIdsCount() {
        return photoIds_.size();
      }
      /**
       * <code>repeated int64 photo_ids = 2;</code>
       */
      public long getPhotoIds(int index) {
        return photoIds_.get(index);
      }
      /**
       * <code>repeated int64 photo_ids = 2;</code>
       */
      public Builder setPhotoIds(
          int index, long value) {
        ensurePhotoIdsIsMutable();
        photoIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 photo_ids = 2;</code>
       */
      public Builder addPhotoIds(long value) {
        ensurePhotoIdsIsMutable();
        photoIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 photo_ids = 2;</code>
       */
      public Builder addAllPhotoIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensurePhotoIdsIsMutable();
        super.addAll(values, photoIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 photo_ids = 2;</code>
       */
      public Builder clearPhotoIds() {
        photoIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FilteredEpisode)
    }

    static {
      defaultInstance = new FilteredEpisode(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FilteredEpisode)
  }

  public interface TrapdoorMetadataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 viewpoint_id = 1;
    /**
     * <code>optional int64 viewpoint_id = 1;</code>
     *
     * <pre>
     * The viewpoint.
     * </pre>
     */
    boolean hasViewpointId();
    /**
     * <code>optional int64 viewpoint_id = 1;</code>
     *
     * <pre>
     * The viewpoint.
     * </pre>
     */
    long getViewpointId();

    // optional .TrapdoorMetadata.Type type = 2;
    /**
     * <code>optional .TrapdoorMetadata.Type type = 2;</code>
     *
     * <pre>
     * The type of trapdoor.
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional .TrapdoorMetadata.Type type = 2;</code>
     *
     * <pre>
     * The type of trapdoor.
     * </pre>
     */
    co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Type getType();

    // optional .DayPhoto cover_photo = 3;
    /**
     * <code>optional .DayPhoto cover_photo = 3;</code>
     *
     * <pre>
     * Cover photo id.
     * </pre>
     */
    boolean hasCoverPhoto();
    /**
     * <code>optional .DayPhoto cover_photo = 3;</code>
     *
     * <pre>
     * Cover photo id.
     * </pre>
     */
    co.viewfinder.proto.DayMetadataPB.DayPhoto getCoverPhoto();
    /**
     * <code>optional .DayPhoto cover_photo = 3;</code>
     *
     * <pre>
     * Cover photo id.
     * </pre>
     */
    co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder getCoverPhotoOrBuilder();

    // optional double earliest_timestamp = 4;
    /**
     * <code>optional double earliest_timestamp = 4;</code>
     *
     * <pre>
     * Initial activity timestamp.
     * </pre>
     */
    boolean hasEarliestTimestamp();
    /**
     * <code>optional double earliest_timestamp = 4;</code>
     *
     * <pre>
     * Initial activity timestamp.
     * </pre>
     */
    double getEarliestTimestamp();

    // optional double latest_timestamp = 5;
    /**
     * <code>optional double latest_timestamp = 5;</code>
     *
     * <pre>
     * Latest activity timestamp.
     * </pre>
     */
    boolean hasLatestTimestamp();
    /**
     * <code>optional double latest_timestamp = 5;</code>
     *
     * <pre>
     * Latest activity timestamp.
     * </pre>
     */
    double getLatestTimestamp();

    // optional int32 event_index = 6;
    /**
     * <code>optional int32 event_index = 6;</code>
     *
     * <pre>
     * The event index if this trapdoor is anchored to an
     * event on the same day.
     * </pre>
     */
    boolean hasEventIndex();
    /**
     * <code>optional int32 event_index = 6;</code>
     *
     * <pre>
     * The event index if this trapdoor is anchored to an
     * event on the same day.
     * </pre>
     */
    int getEventIndex();

    // repeated .DayContributor contributors = 7;
    /**
     * <code>repeated .DayContributor contributors = 7;</code>
     *
     * <pre>
     * All contributors, sorted by most recent activity.
     * </pre>
     */
    java.util.List<co.viewfinder.proto.DayMetadataPB.DayContributor> 
        getContributorsList();
    /**
     * <code>repeated .DayContributor contributors = 7;</code>
     *
     * <pre>
     * All contributors, sorted by most recent activity.
     * </pre>
     */
    co.viewfinder.proto.DayMetadataPB.DayContributor getContributors(int index);
    /**
     * <code>repeated .DayContributor contributors = 7;</code>
     *
     * <pre>
     * All contributors, sorted by most recent activity.
     * </pre>
     */
    int getContributorsCount();
    /**
     * <code>repeated .DayContributor contributors = 7;</code>
     *
     * <pre>
     * All contributors, sorted by most recent activity.
     * </pre>
     */
    java.util.List<? extends co.viewfinder.proto.DayMetadataPB.DayContributorOrBuilder> 
        getContributorsOrBuilderList();
    /**
     * <code>repeated .DayContributor contributors = 7;</code>
     *
     * <pre>
     * All contributors, sorted by most recent activity.
     * </pre>
     */
    co.viewfinder.proto.DayMetadataPB.DayContributorOrBuilder getContributorsOrBuilder(
        int index);

    // repeated .DayPhoto photos = 8;
    /**
     * <code>repeated .DayPhoto photos = 8;</code>
     *
     * <pre>
     * Sampled photos.
     * </pre>
     */
    java.util.List<co.viewfinder.proto.DayMetadataPB.DayPhoto> 
        getPhotosList();
    /**
     * <code>repeated .DayPhoto photos = 8;</code>
     *
     * <pre>
     * Sampled photos.
     * </pre>
     */
    co.viewfinder.proto.DayMetadataPB.DayPhoto getPhotos(int index);
    /**
     * <code>repeated .DayPhoto photos = 8;</code>
     *
     * <pre>
     * Sampled photos.
     * </pre>
     */
    int getPhotosCount();
    /**
     * <code>repeated .DayPhoto photos = 8;</code>
     *
     * <pre>
     * Sampled photos.
     * </pre>
     */
    java.util.List<? extends co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder> 
        getPhotosOrBuilderList();
    /**
     * <code>repeated .DayPhoto photos = 8;</code>
     *
     * <pre>
     * Sampled photos.
     * </pre>
     */
    co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder getPhotosOrBuilder(
        int index);

    // optional bool sub_sampled = 9;
    /**
     * <code>optional bool sub_sampled = 9;</code>
     *
     * <pre>
     * True if photos is a sampling of total.
     * </pre>
     */
    boolean hasSubSampled();
    /**
     * <code>optional bool sub_sampled = 9;</code>
     *
     * <pre>
     * True if photos is a sampling of total.
     * </pre>
     */
    boolean getSubSampled();

    // optional int32 photo_count = 10;
    /**
     * <code>optional int32 photo_count = 10;</code>
     *
     * <pre>
     * Count of photos shared to viewpoint.
     * </pre>
     */
    boolean hasPhotoCount();
    /**
     * <code>optional int32 photo_count = 10;</code>
     *
     * <pre>
     * Count of photos shared to viewpoint.
     * </pre>
     */
    int getPhotoCount();

    // optional int32 comment_count = 11;
    /**
     * <code>optional int32 comment_count = 11;</code>
     *
     * <pre>
     * Count of comments posted to viewpoint.
     * </pre>
     */
    boolean hasCommentCount();
    /**
     * <code>optional int32 comment_count = 11;</code>
     *
     * <pre>
     * Count of comments posted to viewpoint.
     * </pre>
     */
    int getCommentCount();

    // optional int32 new_photo_count = 12;
    /**
     * <code>optional int32 new_photo_count = 12;</code>
     *
     * <pre>
     * Maximum update sequence of photos.
     * </pre>
     */
    boolean hasNewPhotoCount();
    /**
     * <code>optional int32 new_photo_count = 12;</code>
     *
     * <pre>
     * Maximum update sequence of photos.
     * </pre>
     */
    int getNewPhotoCount();

    // optional int32 new_comment_count = 13;
    /**
     * <code>optional int32 new_comment_count = 13;</code>
     *
     * <pre>
     * Maximum updates sequence of comments.
     * </pre>
     */
    boolean hasNewCommentCount();
    /**
     * <code>optional int32 new_comment_count = 13;</code>
     *
     * <pre>
     * Maximum updates sequence of comments.
     * </pre>
     */
    int getNewCommentCount();

    // optional bool unviewed_content = 14;
    /**
     * <code>optional bool unviewed_content = 14;</code>
     *
     * <pre>
     * True if there are any unviewed photos, comments or updates.
     * </pre>
     */
    boolean hasUnviewedContent();
    /**
     * <code>optional bool unviewed_content = 14;</code>
     *
     * <pre>
     * True if there are any unviewed photos, comments or updates.
     * </pre>
     */
    boolean getUnviewedContent();

    // optional bool pending_content = 15;
    /**
     * <code>optional bool pending_content = 15;</code>
     *
     * <pre>
     * True if there are any activities still pending upload.
     * </pre>
     */
    boolean hasPendingContent();
    /**
     * <code>optional bool pending_content = 15;</code>
     *
     * <pre>
     * True if there are any activities still pending upload.
     * </pre>
     */
    boolean getPendingContent();

    // optional bool muted = 16;
    /**
     * <code>optional bool muted = 16;</code>
     *
     * <pre>
     * True if the viewpoint is muted.
     * </pre>
     */
    boolean hasMuted();
    /**
     * <code>optional bool muted = 16;</code>
     *
     * <pre>
     * True if the viewpoint is muted.
     * </pre>
     */
    boolean getMuted();

    // optional bool autosave = 17;
    /**
     * <code>optional bool autosave = 17;</code>
     *
     * <pre>
     * True if the viewpoint is autosaved.
     * </pre>
     */
    boolean hasAutosave();
    /**
     * <code>optional bool autosave = 17;</code>
     *
     * <pre>
     * True if the viewpoint is autosaved.
     * </pre>
     */
    boolean getAutosave();
  }
  /**
   * Protobuf type {@code TrapdoorMetadata}
   */
  public static final class TrapdoorMetadata extends
      com.google.protobuf.GeneratedMessage
      implements TrapdoorMetadataOrBuilder {
    // Use TrapdoorMetadata.newBuilder() to construct.
    private TrapdoorMetadata(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TrapdoorMetadata(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TrapdoorMetadata defaultInstance;
    public static TrapdoorMetadata getDefaultInstance() {
      return defaultInstance;
    }

    public TrapdoorMetadata getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TrapdoorMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              viewpointId_ = input.readInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Type value = co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                type_ = value;
              }
              break;
            }
            case 26: {
              co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = coverPhoto_.toBuilder();
              }
              coverPhoto_ = input.readMessage(co.viewfinder.proto.DayMetadataPB.DayPhoto.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(coverPhoto_);
                coverPhoto_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              earliestTimestamp_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              latestTimestamp_ = input.readDouble();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              eventIndex_ = input.readInt32();
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                contributors_ = new java.util.ArrayList<co.viewfinder.proto.DayMetadataPB.DayContributor>();
                mutable_bitField0_ |= 0x00000040;
              }
              contributors_.add(input.readMessage(co.viewfinder.proto.DayMetadataPB.DayContributor.PARSER, extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                photos_ = new java.util.ArrayList<co.viewfinder.proto.DayMetadataPB.DayPhoto>();
                mutable_bitField0_ |= 0x00000080;
              }
              photos_.add(input.readMessage(co.viewfinder.proto.DayMetadataPB.DayPhoto.PARSER, extensionRegistry));
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              subSampled_ = input.readBool();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000080;
              photoCount_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000100;
              commentCount_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000200;
              newPhotoCount_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000400;
              newCommentCount_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000800;
              unviewedContent_ = input.readBool();
              break;
            }
            case 120: {
              bitField0_ |= 0x00001000;
              pendingContent_ = input.readBool();
              break;
            }
            case 128: {
              bitField0_ |= 0x00002000;
              muted_ = input.readBool();
              break;
            }
            case 136: {
              bitField0_ |= 0x00004000;
              autosave_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          contributors_ = java.util.Collections.unmodifiableList(contributors_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          photos_ = java.util.Collections.unmodifiableList(photos_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return co.viewfinder.proto.DayMetadataPB.internal_static_TrapdoorMetadata_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return co.viewfinder.proto.DayMetadataPB.internal_static_TrapdoorMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.class, co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Builder.class);
    }

    public static com.google.protobuf.Parser<TrapdoorMetadata> PARSER =
        new com.google.protobuf.AbstractParser<TrapdoorMetadata>() {
      public TrapdoorMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TrapdoorMetadata(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TrapdoorMetadata> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code TrapdoorMetadata.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>INBOX = 1;</code>
       */
      INBOX(0, 1),
      /**
       * <code>EVENT = 2;</code>
       */
      EVENT(1, 2),
      ;

      /**
       * <code>INBOX = 1;</code>
       */
      public static final int INBOX_VALUE = 1;
      /**
       * <code>EVENT = 2;</code>
       */
      public static final int EVENT_VALUE = 2;


      public final int getNumber() { return value; }

      public static Type valueOf(int value) {
        switch (value) {
          case 1: return INBOX;
          case 2: return EVENT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:TrapdoorMetadata.Type)
    }

    private int bitField0_;
    // optional int64 viewpoint_id = 1;
    public static final int VIEWPOINT_ID_FIELD_NUMBER = 1;
    private long viewpointId_;
    /**
     * <code>optional int64 viewpoint_id = 1;</code>
     *
     * <pre>
     * The viewpoint.
     * </pre>
     */
    public boolean hasViewpointId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 viewpoint_id = 1;</code>
     *
     * <pre>
     * The viewpoint.
     * </pre>
     */
    public long getViewpointId() {
      return viewpointId_;
    }

    // optional .TrapdoorMetadata.Type type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Type type_;
    /**
     * <code>optional .TrapdoorMetadata.Type type = 2;</code>
     *
     * <pre>
     * The type of trapdoor.
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .TrapdoorMetadata.Type type = 2;</code>
     *
     * <pre>
     * The type of trapdoor.
     * </pre>
     */
    public co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Type getType() {
      return type_;
    }

    // optional .DayPhoto cover_photo = 3;
    public static final int COVER_PHOTO_FIELD_NUMBER = 3;
    private co.viewfinder.proto.DayMetadataPB.DayPhoto coverPhoto_;
    /**
     * <code>optional .DayPhoto cover_photo = 3;</code>
     *
     * <pre>
     * Cover photo id.
     * </pre>
     */
    public boolean hasCoverPhoto() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .DayPhoto cover_photo = 3;</code>
     *
     * <pre>
     * Cover photo id.
     * </pre>
     */
    public co.viewfinder.proto.DayMetadataPB.DayPhoto getCoverPhoto() {
      return coverPhoto_;
    }
    /**
     * <code>optional .DayPhoto cover_photo = 3;</code>
     *
     * <pre>
     * Cover photo id.
     * </pre>
     */
    public co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder getCoverPhotoOrBuilder() {
      return coverPhoto_;
    }

    // optional double earliest_timestamp = 4;
    public static final int EARLIEST_TIMESTAMP_FIELD_NUMBER = 4;
    private double earliestTimestamp_;
    /**
     * <code>optional double earliest_timestamp = 4;</code>
     *
     * <pre>
     * Initial activity timestamp.
     * </pre>
     */
    public boolean hasEarliestTimestamp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional double earliest_timestamp = 4;</code>
     *
     * <pre>
     * Initial activity timestamp.
     * </pre>
     */
    public double getEarliestTimestamp() {
      return earliestTimestamp_;
    }

    // optional double latest_timestamp = 5;
    public static final int LATEST_TIMESTAMP_FIELD_NUMBER = 5;
    private double latestTimestamp_;
    /**
     * <code>optional double latest_timestamp = 5;</code>
     *
     * <pre>
     * Latest activity timestamp.
     * </pre>
     */
    public boolean hasLatestTimestamp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional double latest_timestamp = 5;</code>
     *
     * <pre>
     * Latest activity timestamp.
     * </pre>
     */
    public double getLatestTimestamp() {
      return latestTimestamp_;
    }

    // optional int32 event_index = 6;
    public static final int EVENT_INDEX_FIELD_NUMBER = 6;
    private int eventIndex_;
    /**
     * <code>optional int32 event_index = 6;</code>
     *
     * <pre>
     * The event index if this trapdoor is anchored to an
     * event on the same day.
     * </pre>
     */
    public boolean hasEventIndex() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 event_index = 6;</code>
     *
     * <pre>
     * The event index if this trapdoor is anchored to an
     * event on the same day.
     * </pre>
     */
    public int getEventIndex() {
      return eventIndex_;
    }

    // repeated .DayContributor contributors = 7;
    public static final int CONTRIBUTORS_FIELD_NUMBER = 7;
    private java.util.List<co.viewfinder.proto.DayMetadataPB.DayContributor> contributors_;
    /**
     * <code>repeated .DayContributor contributors = 7;</code>
     *
     * <pre>
     * All contributors, sorted by most recent activity.
     * </pre>
     */
    public java.util.List<co.viewfinder.proto.DayMetadataPB.DayContributor> getContributorsList() {
      return contributors_;
    }
    /**
     * <code>repeated .DayContributor contributors = 7;</code>
     *
     * <pre>
     * All contributors, sorted by most recent activity.
     * </pre>
     */
    public java.util.List<? extends co.viewfinder.proto.DayMetadataPB.DayContributorOrBuilder> 
        getContributorsOrBuilderList() {
      return contributors_;
    }
    /**
     * <code>repeated .DayContributor contributors = 7;</code>
     *
     * <pre>
     * All contributors, sorted by most recent activity.
     * </pre>
     */
    public int getContributorsCount() {
      return contributors_.size();
    }
    /**
     * <code>repeated .DayContributor contributors = 7;</code>
     *
     * <pre>
     * All contributors, sorted by most recent activity.
     * </pre>
     */
    public co.viewfinder.proto.DayMetadataPB.DayContributor getContributors(int index) {
      return contributors_.get(index);
    }
    /**
     * <code>repeated .DayContributor contributors = 7;</code>
     *
     * <pre>
     * All contributors, sorted by most recent activity.
     * </pre>
     */
    public co.viewfinder.proto.DayMetadataPB.DayContributorOrBuilder getContributorsOrBuilder(
        int index) {
      return contributors_.get(index);
    }

    // repeated .DayPhoto photos = 8;
    public static final int PHOTOS_FIELD_NUMBER = 8;
    private java.util.List<co.viewfinder.proto.DayMetadataPB.DayPhoto> photos_;
    /**
     * <code>repeated .DayPhoto photos = 8;</code>
     *
     * <pre>
     * Sampled photos.
     * </pre>
     */
    public java.util.List<co.viewfinder.proto.DayMetadataPB.DayPhoto> getPhotosList() {
      return photos_;
    }
    /**
     * <code>repeated .DayPhoto photos = 8;</code>
     *
     * <pre>
     * Sampled photos.
     * </pre>
     */
    public java.util.List<? extends co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder> 
        getPhotosOrBuilderList() {
      return photos_;
    }
    /**
     * <code>repeated .DayPhoto photos = 8;</code>
     *
     * <pre>
     * Sampled photos.
     * </pre>
     */
    public int getPhotosCount() {
      return photos_.size();
    }
    /**
     * <code>repeated .DayPhoto photos = 8;</code>
     *
     * <pre>
     * Sampled photos.
     * </pre>
     */
    public co.viewfinder.proto.DayMetadataPB.DayPhoto getPhotos(int index) {
      return photos_.get(index);
    }
    /**
     * <code>repeated .DayPhoto photos = 8;</code>
     *
     * <pre>
     * Sampled photos.
     * </pre>
     */
    public co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder getPhotosOrBuilder(
        int index) {
      return photos_.get(index);
    }

    // optional bool sub_sampled = 9;
    public static final int SUB_SAMPLED_FIELD_NUMBER = 9;
    private boolean subSampled_;
    /**
     * <code>optional bool sub_sampled = 9;</code>
     *
     * <pre>
     * True if photos is a sampling of total.
     * </pre>
     */
    public boolean hasSubSampled() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool sub_sampled = 9;</code>
     *
     * <pre>
     * True if photos is a sampling of total.
     * </pre>
     */
    public boolean getSubSampled() {
      return subSampled_;
    }

    // optional int32 photo_count = 10;
    public static final int PHOTO_COUNT_FIELD_NUMBER = 10;
    private int photoCount_;
    /**
     * <code>optional int32 photo_count = 10;</code>
     *
     * <pre>
     * Count of photos shared to viewpoint.
     * </pre>
     */
    public boolean hasPhotoCount() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 photo_count = 10;</code>
     *
     * <pre>
     * Count of photos shared to viewpoint.
     * </pre>
     */
    public int getPhotoCount() {
      return photoCount_;
    }

    // optional int32 comment_count = 11;
    public static final int COMMENT_COUNT_FIELD_NUMBER = 11;
    private int commentCount_;
    /**
     * <code>optional int32 comment_count = 11;</code>
     *
     * <pre>
     * Count of comments posted to viewpoint.
     * </pre>
     */
    public boolean hasCommentCount() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 comment_count = 11;</code>
     *
     * <pre>
     * Count of comments posted to viewpoint.
     * </pre>
     */
    public int getCommentCount() {
      return commentCount_;
    }

    // optional int32 new_photo_count = 12;
    public static final int NEW_PHOTO_COUNT_FIELD_NUMBER = 12;
    private int newPhotoCount_;
    /**
     * <code>optional int32 new_photo_count = 12;</code>
     *
     * <pre>
     * Maximum update sequence of photos.
     * </pre>
     */
    public boolean hasNewPhotoCount() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 new_photo_count = 12;</code>
     *
     * <pre>
     * Maximum update sequence of photos.
     * </pre>
     */
    public int getNewPhotoCount() {
      return newPhotoCount_;
    }

    // optional int32 new_comment_count = 13;
    public static final int NEW_COMMENT_COUNT_FIELD_NUMBER = 13;
    private int newCommentCount_;
    /**
     * <code>optional int32 new_comment_count = 13;</code>
     *
     * <pre>
     * Maximum updates sequence of comments.
     * </pre>
     */
    public boolean hasNewCommentCount() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 new_comment_count = 13;</code>
     *
     * <pre>
     * Maximum updates sequence of comments.
     * </pre>
     */
    public int getNewCommentCount() {
      return newCommentCount_;
    }

    // optional bool unviewed_content = 14;
    public static final int UNVIEWED_CONTENT_FIELD_NUMBER = 14;
    private boolean unviewedContent_;
    /**
     * <code>optional bool unviewed_content = 14;</code>
     *
     * <pre>
     * True if there are any unviewed photos, comments or updates.
     * </pre>
     */
    public boolean hasUnviewedContent() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool unviewed_content = 14;</code>
     *
     * <pre>
     * True if there are any unviewed photos, comments or updates.
     * </pre>
     */
    public boolean getUnviewedContent() {
      return unviewedContent_;
    }

    // optional bool pending_content = 15;
    public static final int PENDING_CONTENT_FIELD_NUMBER = 15;
    private boolean pendingContent_;
    /**
     * <code>optional bool pending_content = 15;</code>
     *
     * <pre>
     * True if there are any activities still pending upload.
     * </pre>
     */
    public boolean hasPendingContent() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bool pending_content = 15;</code>
     *
     * <pre>
     * True if there are any activities still pending upload.
     * </pre>
     */
    public boolean getPendingContent() {
      return pendingContent_;
    }

    // optional bool muted = 16;
    public static final int MUTED_FIELD_NUMBER = 16;
    private boolean muted_;
    /**
     * <code>optional bool muted = 16;</code>
     *
     * <pre>
     * True if the viewpoint is muted.
     * </pre>
     */
    public boolean hasMuted() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional bool muted = 16;</code>
     *
     * <pre>
     * True if the viewpoint is muted.
     * </pre>
     */
    public boolean getMuted() {
      return muted_;
    }

    // optional bool autosave = 17;
    public static final int AUTOSAVE_FIELD_NUMBER = 17;
    private boolean autosave_;
    /**
     * <code>optional bool autosave = 17;</code>
     *
     * <pre>
     * True if the viewpoint is autosaved.
     * </pre>
     */
    public boolean hasAutosave() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional bool autosave = 17;</code>
     *
     * <pre>
     * True if the viewpoint is autosaved.
     * </pre>
     */
    public boolean getAutosave() {
      return autosave_;
    }

    private void initFields() {
      viewpointId_ = 0L;
      type_ = co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Type.INBOX;
      coverPhoto_ = co.viewfinder.proto.DayMetadataPB.DayPhoto.getDefaultInstance();
      earliestTimestamp_ = 0D;
      latestTimestamp_ = 0D;
      eventIndex_ = 0;
      contributors_ = java.util.Collections.emptyList();
      photos_ = java.util.Collections.emptyList();
      subSampled_ = false;
      photoCount_ = 0;
      commentCount_ = 0;
      newPhotoCount_ = 0;
      newCommentCount_ = 0;
      unviewedContent_ = false;
      pendingContent_ = false;
      muted_ = false;
      autosave_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, viewpointId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, type_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, coverPhoto_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, earliestTimestamp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, latestTimestamp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, eventIndex_);
      }
      for (int i = 0; i < contributors_.size(); i++) {
        output.writeMessage(7, contributors_.get(i));
      }
      for (int i = 0; i < photos_.size(); i++) {
        output.writeMessage(8, photos_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(9, subSampled_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(10, photoCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(11, commentCount_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(12, newPhotoCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(13, newCommentCount_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(14, unviewedContent_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(15, pendingContent_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBool(16, muted_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBool(17, autosave_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, viewpointId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, coverPhoto_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, earliestTimestamp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, latestTimestamp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, eventIndex_);
      }
      for (int i = 0; i < contributors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, contributors_.get(i));
      }
      for (int i = 0; i < photos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, photos_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, subSampled_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, photoCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, commentCount_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, newPhotoCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, newCommentCount_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, unviewedContent_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, pendingContent_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, muted_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(17, autosave_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TrapdoorMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements co.viewfinder.proto.DayMetadataPB.TrapdoorMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_TrapdoorMetadata_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_TrapdoorMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.class, co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Builder.class);
      }

      // Construct using co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCoverPhotoFieldBuilder();
          getContributorsFieldBuilder();
          getPhotosFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        viewpointId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Type.INBOX;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (coverPhotoBuilder_ == null) {
          coverPhoto_ = co.viewfinder.proto.DayMetadataPB.DayPhoto.getDefaultInstance();
        } else {
          coverPhotoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        earliestTimestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        latestTimestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        eventIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (contributorsBuilder_ == null) {
          contributors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          contributorsBuilder_.clear();
        }
        if (photosBuilder_ == null) {
          photos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          photosBuilder_.clear();
        }
        subSampled_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        photoCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        commentCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        newPhotoCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        newCommentCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        unviewedContent_ = false;
        bitField0_ = (bitField0_ & ~0x00002000);
        pendingContent_ = false;
        bitField0_ = (bitField0_ & ~0x00004000);
        muted_ = false;
        bitField0_ = (bitField0_ & ~0x00008000);
        autosave_ = false;
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_TrapdoorMetadata_descriptor;
      }

      public co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata getDefaultInstanceForType() {
        return co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.getDefaultInstance();
      }

      public co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata build() {
        co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata buildPartial() {
        co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata result = new co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.viewpointId_ = viewpointId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (coverPhotoBuilder_ == null) {
          result.coverPhoto_ = coverPhoto_;
        } else {
          result.coverPhoto_ = coverPhotoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.earliestTimestamp_ = earliestTimestamp_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.latestTimestamp_ = latestTimestamp_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.eventIndex_ = eventIndex_;
        if (contributorsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            contributors_ = java.util.Collections.unmodifiableList(contributors_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.contributors_ = contributors_;
        } else {
          result.contributors_ = contributorsBuilder_.build();
        }
        if (photosBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            photos_ = java.util.Collections.unmodifiableList(photos_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.photos_ = photos_;
        } else {
          result.photos_ = photosBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.subSampled_ = subSampled_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        result.photoCount_ = photoCount_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000100;
        }
        result.commentCount_ = commentCount_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000200;
        }
        result.newPhotoCount_ = newPhotoCount_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.newCommentCount_ = newCommentCount_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.unviewedContent_ = unviewedContent_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.pendingContent_ = pendingContent_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.muted_ = muted_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.autosave_ = autosave_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata) {
          return mergeFrom((co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata other) {
        if (other == co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.getDefaultInstance()) return this;
        if (other.hasViewpointId()) {
          setViewpointId(other.getViewpointId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasCoverPhoto()) {
          mergeCoverPhoto(other.getCoverPhoto());
        }
        if (other.hasEarliestTimestamp()) {
          setEarliestTimestamp(other.getEarliestTimestamp());
        }
        if (other.hasLatestTimestamp()) {
          setLatestTimestamp(other.getLatestTimestamp());
        }
        if (other.hasEventIndex()) {
          setEventIndex(other.getEventIndex());
        }
        if (contributorsBuilder_ == null) {
          if (!other.contributors_.isEmpty()) {
            if (contributors_.isEmpty()) {
              contributors_ = other.contributors_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureContributorsIsMutable();
              contributors_.addAll(other.contributors_);
            }
            onChanged();
          }
        } else {
          if (!other.contributors_.isEmpty()) {
            if (contributorsBuilder_.isEmpty()) {
              contributorsBuilder_.dispose();
              contributorsBuilder_ = null;
              contributors_ = other.contributors_;
              bitField0_ = (bitField0_ & ~0x00000040);
              contributorsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getContributorsFieldBuilder() : null;
            } else {
              contributorsBuilder_.addAllMessages(other.contributors_);
            }
          }
        }
        if (photosBuilder_ == null) {
          if (!other.photos_.isEmpty()) {
            if (photos_.isEmpty()) {
              photos_ = other.photos_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensurePhotosIsMutable();
              photos_.addAll(other.photos_);
            }
            onChanged();
          }
        } else {
          if (!other.photos_.isEmpty()) {
            if (photosBuilder_.isEmpty()) {
              photosBuilder_.dispose();
              photosBuilder_ = null;
              photos_ = other.photos_;
              bitField0_ = (bitField0_ & ~0x00000080);
              photosBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPhotosFieldBuilder() : null;
            } else {
              photosBuilder_.addAllMessages(other.photos_);
            }
          }
        }
        if (other.hasSubSampled()) {
          setSubSampled(other.getSubSampled());
        }
        if (other.hasPhotoCount()) {
          setPhotoCount(other.getPhotoCount());
        }
        if (other.hasCommentCount()) {
          setCommentCount(other.getCommentCount());
        }
        if (other.hasNewPhotoCount()) {
          setNewPhotoCount(other.getNewPhotoCount());
        }
        if (other.hasNewCommentCount()) {
          setNewCommentCount(other.getNewCommentCount());
        }
        if (other.hasUnviewedContent()) {
          setUnviewedContent(other.getUnviewedContent());
        }
        if (other.hasPendingContent()) {
          setPendingContent(other.getPendingContent());
        }
        if (other.hasMuted()) {
          setMuted(other.getMuted());
        }
        if (other.hasAutosave()) {
          setAutosave(other.getAutosave());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 viewpoint_id = 1;
      private long viewpointId_ ;
      /**
       * <code>optional int64 viewpoint_id = 1;</code>
       *
       * <pre>
       * The viewpoint.
       * </pre>
       */
      public boolean hasViewpointId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 viewpoint_id = 1;</code>
       *
       * <pre>
       * The viewpoint.
       * </pre>
       */
      public long getViewpointId() {
        return viewpointId_;
      }
      /**
       * <code>optional int64 viewpoint_id = 1;</code>
       *
       * <pre>
       * The viewpoint.
       * </pre>
       */
      public Builder setViewpointId(long value) {
        bitField0_ |= 0x00000001;
        viewpointId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 viewpoint_id = 1;</code>
       *
       * <pre>
       * The viewpoint.
       * </pre>
       */
      public Builder clearViewpointId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        viewpointId_ = 0L;
        onChanged();
        return this;
      }

      // optional .TrapdoorMetadata.Type type = 2;
      private co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Type type_ = co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Type.INBOX;
      /**
       * <code>optional .TrapdoorMetadata.Type type = 2;</code>
       *
       * <pre>
       * The type of trapdoor.
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .TrapdoorMetadata.Type type = 2;</code>
       *
       * <pre>
       * The type of trapdoor.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Type getType() {
        return type_;
      }
      /**
       * <code>optional .TrapdoorMetadata.Type type = 2;</code>
       *
       * <pre>
       * The type of trapdoor.
       * </pre>
       */
      public Builder setType(co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .TrapdoorMetadata.Type type = 2;</code>
       *
       * <pre>
       * The type of trapdoor.
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Type.INBOX;
        onChanged();
        return this;
      }

      // optional .DayPhoto cover_photo = 3;
      private co.viewfinder.proto.DayMetadataPB.DayPhoto coverPhoto_ = co.viewfinder.proto.DayMetadataPB.DayPhoto.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.DayPhoto, co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder, co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder> coverPhotoBuilder_;
      /**
       * <code>optional .DayPhoto cover_photo = 3;</code>
       *
       * <pre>
       * Cover photo id.
       * </pre>
       */
      public boolean hasCoverPhoto() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .DayPhoto cover_photo = 3;</code>
       *
       * <pre>
       * Cover photo id.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.DayPhoto getCoverPhoto() {
        if (coverPhotoBuilder_ == null) {
          return coverPhoto_;
        } else {
          return coverPhotoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .DayPhoto cover_photo = 3;</code>
       *
       * <pre>
       * Cover photo id.
       * </pre>
       */
      public Builder setCoverPhoto(co.viewfinder.proto.DayMetadataPB.DayPhoto value) {
        if (coverPhotoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          coverPhoto_ = value;
          onChanged();
        } else {
          coverPhotoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .DayPhoto cover_photo = 3;</code>
       *
       * <pre>
       * Cover photo id.
       * </pre>
       */
      public Builder setCoverPhoto(
          co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder builderForValue) {
        if (coverPhotoBuilder_ == null) {
          coverPhoto_ = builderForValue.build();
          onChanged();
        } else {
          coverPhotoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .DayPhoto cover_photo = 3;</code>
       *
       * <pre>
       * Cover photo id.
       * </pre>
       */
      public Builder mergeCoverPhoto(co.viewfinder.proto.DayMetadataPB.DayPhoto value) {
        if (coverPhotoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              coverPhoto_ != co.viewfinder.proto.DayMetadataPB.DayPhoto.getDefaultInstance()) {
            coverPhoto_ =
              co.viewfinder.proto.DayMetadataPB.DayPhoto.newBuilder(coverPhoto_).mergeFrom(value).buildPartial();
          } else {
            coverPhoto_ = value;
          }
          onChanged();
        } else {
          coverPhotoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .DayPhoto cover_photo = 3;</code>
       *
       * <pre>
       * Cover photo id.
       * </pre>
       */
      public Builder clearCoverPhoto() {
        if (coverPhotoBuilder_ == null) {
          coverPhoto_ = co.viewfinder.proto.DayMetadataPB.DayPhoto.getDefaultInstance();
          onChanged();
        } else {
          coverPhotoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .DayPhoto cover_photo = 3;</code>
       *
       * <pre>
       * Cover photo id.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder getCoverPhotoBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getCoverPhotoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .DayPhoto cover_photo = 3;</code>
       *
       * <pre>
       * Cover photo id.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder getCoverPhotoOrBuilder() {
        if (coverPhotoBuilder_ != null) {
          return coverPhotoBuilder_.getMessageOrBuilder();
        } else {
          return coverPhoto_;
        }
      }
      /**
       * <code>optional .DayPhoto cover_photo = 3;</code>
       *
       * <pre>
       * Cover photo id.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.DayPhoto, co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder, co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder> 
          getCoverPhotoFieldBuilder() {
        if (coverPhotoBuilder_ == null) {
          coverPhotoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              co.viewfinder.proto.DayMetadataPB.DayPhoto, co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder, co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder>(
                  coverPhoto_,
                  getParentForChildren(),
                  isClean());
          coverPhoto_ = null;
        }
        return coverPhotoBuilder_;
      }

      // optional double earliest_timestamp = 4;
      private double earliestTimestamp_ ;
      /**
       * <code>optional double earliest_timestamp = 4;</code>
       *
       * <pre>
       * Initial activity timestamp.
       * </pre>
       */
      public boolean hasEarliestTimestamp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional double earliest_timestamp = 4;</code>
       *
       * <pre>
       * Initial activity timestamp.
       * </pre>
       */
      public double getEarliestTimestamp() {
        return earliestTimestamp_;
      }
      /**
       * <code>optional double earliest_timestamp = 4;</code>
       *
       * <pre>
       * Initial activity timestamp.
       * </pre>
       */
      public Builder setEarliestTimestamp(double value) {
        bitField0_ |= 0x00000008;
        earliestTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double earliest_timestamp = 4;</code>
       *
       * <pre>
       * Initial activity timestamp.
       * </pre>
       */
      public Builder clearEarliestTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        earliestTimestamp_ = 0D;
        onChanged();
        return this;
      }

      // optional double latest_timestamp = 5;
      private double latestTimestamp_ ;
      /**
       * <code>optional double latest_timestamp = 5;</code>
       *
       * <pre>
       * Latest activity timestamp.
       * </pre>
       */
      public boolean hasLatestTimestamp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional double latest_timestamp = 5;</code>
       *
       * <pre>
       * Latest activity timestamp.
       * </pre>
       */
      public double getLatestTimestamp() {
        return latestTimestamp_;
      }
      /**
       * <code>optional double latest_timestamp = 5;</code>
       *
       * <pre>
       * Latest activity timestamp.
       * </pre>
       */
      public Builder setLatestTimestamp(double value) {
        bitField0_ |= 0x00000010;
        latestTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double latest_timestamp = 5;</code>
       *
       * <pre>
       * Latest activity timestamp.
       * </pre>
       */
      public Builder clearLatestTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        latestTimestamp_ = 0D;
        onChanged();
        return this;
      }

      // optional int32 event_index = 6;
      private int eventIndex_ ;
      /**
       * <code>optional int32 event_index = 6;</code>
       *
       * <pre>
       * The event index if this trapdoor is anchored to an
       * event on the same day.
       * </pre>
       */
      public boolean hasEventIndex() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 event_index = 6;</code>
       *
       * <pre>
       * The event index if this trapdoor is anchored to an
       * event on the same day.
       * </pre>
       */
      public int getEventIndex() {
        return eventIndex_;
      }
      /**
       * <code>optional int32 event_index = 6;</code>
       *
       * <pre>
       * The event index if this trapdoor is anchored to an
       * event on the same day.
       * </pre>
       */
      public Builder setEventIndex(int value) {
        bitField0_ |= 0x00000020;
        eventIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 event_index = 6;</code>
       *
       * <pre>
       * The event index if this trapdoor is anchored to an
       * event on the same day.
       * </pre>
       */
      public Builder clearEventIndex() {
        bitField0_ = (bitField0_ & ~0x00000020);
        eventIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated .DayContributor contributors = 7;
      private java.util.List<co.viewfinder.proto.DayMetadataPB.DayContributor> contributors_ =
        java.util.Collections.emptyList();
      private void ensureContributorsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          contributors_ = new java.util.ArrayList<co.viewfinder.proto.DayMetadataPB.DayContributor>(contributors_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.DayContributor, co.viewfinder.proto.DayMetadataPB.DayContributor.Builder, co.viewfinder.proto.DayMetadataPB.DayContributorOrBuilder> contributorsBuilder_;

      /**
       * <code>repeated .DayContributor contributors = 7;</code>
       *
       * <pre>
       * All contributors, sorted by most recent activity.
       * </pre>
       */
      public java.util.List<co.viewfinder.proto.DayMetadataPB.DayContributor> getContributorsList() {
        if (contributorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(contributors_);
        } else {
          return contributorsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .DayContributor contributors = 7;</code>
       *
       * <pre>
       * All contributors, sorted by most recent activity.
       * </pre>
       */
      public int getContributorsCount() {
        if (contributorsBuilder_ == null) {
          return contributors_.size();
        } else {
          return contributorsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .DayContributor contributors = 7;</code>
       *
       * <pre>
       * All contributors, sorted by most recent activity.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.DayContributor getContributors(int index) {
        if (contributorsBuilder_ == null) {
          return contributors_.get(index);
        } else {
          return contributorsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .DayContributor contributors = 7;</code>
       *
       * <pre>
       * All contributors, sorted by most recent activity.
       * </pre>
       */
      public Builder setContributors(
          int index, co.viewfinder.proto.DayMetadataPB.DayContributor value) {
        if (contributorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContributorsIsMutable();
          contributors_.set(index, value);
          onChanged();
        } else {
          contributorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DayContributor contributors = 7;</code>
       *
       * <pre>
       * All contributors, sorted by most recent activity.
       * </pre>
       */
      public Builder setContributors(
          int index, co.viewfinder.proto.DayMetadataPB.DayContributor.Builder builderForValue) {
        if (contributorsBuilder_ == null) {
          ensureContributorsIsMutable();
          contributors_.set(index, builderForValue.build());
          onChanged();
        } else {
          contributorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DayContributor contributors = 7;</code>
       *
       * <pre>
       * All contributors, sorted by most recent activity.
       * </pre>
       */
      public Builder addContributors(co.viewfinder.proto.DayMetadataPB.DayContributor value) {
        if (contributorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContributorsIsMutable();
          contributors_.add(value);
          onChanged();
        } else {
          contributorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .DayContributor contributors = 7;</code>
       *
       * <pre>
       * All contributors, sorted by most recent activity.
       * </pre>
       */
      public Builder addContributors(
          int index, co.viewfinder.proto.DayMetadataPB.DayContributor value) {
        if (contributorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContributorsIsMutable();
          contributors_.add(index, value);
          onChanged();
        } else {
          contributorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DayContributor contributors = 7;</code>
       *
       * <pre>
       * All contributors, sorted by most recent activity.
       * </pre>
       */
      public Builder addContributors(
          co.viewfinder.proto.DayMetadataPB.DayContributor.Builder builderForValue) {
        if (contributorsBuilder_ == null) {
          ensureContributorsIsMutable();
          contributors_.add(builderForValue.build());
          onChanged();
        } else {
          contributorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DayContributor contributors = 7;</code>
       *
       * <pre>
       * All contributors, sorted by most recent activity.
       * </pre>
       */
      public Builder addContributors(
          int index, co.viewfinder.proto.DayMetadataPB.DayContributor.Builder builderForValue) {
        if (contributorsBuilder_ == null) {
          ensureContributorsIsMutable();
          contributors_.add(index, builderForValue.build());
          onChanged();
        } else {
          contributorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DayContributor contributors = 7;</code>
       *
       * <pre>
       * All contributors, sorted by most recent activity.
       * </pre>
       */
      public Builder addAllContributors(
          java.lang.Iterable<? extends co.viewfinder.proto.DayMetadataPB.DayContributor> values) {
        if (contributorsBuilder_ == null) {
          ensureContributorsIsMutable();
          super.addAll(values, contributors_);
          onChanged();
        } else {
          contributorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .DayContributor contributors = 7;</code>
       *
       * <pre>
       * All contributors, sorted by most recent activity.
       * </pre>
       */
      public Builder clearContributors() {
        if (contributorsBuilder_ == null) {
          contributors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          contributorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .DayContributor contributors = 7;</code>
       *
       * <pre>
       * All contributors, sorted by most recent activity.
       * </pre>
       */
      public Builder removeContributors(int index) {
        if (contributorsBuilder_ == null) {
          ensureContributorsIsMutable();
          contributors_.remove(index);
          onChanged();
        } else {
          contributorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .DayContributor contributors = 7;</code>
       *
       * <pre>
       * All contributors, sorted by most recent activity.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.DayContributor.Builder getContributorsBuilder(
          int index) {
        return getContributorsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .DayContributor contributors = 7;</code>
       *
       * <pre>
       * All contributors, sorted by most recent activity.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.DayContributorOrBuilder getContributorsOrBuilder(
          int index) {
        if (contributorsBuilder_ == null) {
          return contributors_.get(index);  } else {
          return contributorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .DayContributor contributors = 7;</code>
       *
       * <pre>
       * All contributors, sorted by most recent activity.
       * </pre>
       */
      public java.util.List<? extends co.viewfinder.proto.DayMetadataPB.DayContributorOrBuilder> 
           getContributorsOrBuilderList() {
        if (contributorsBuilder_ != null) {
          return contributorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(contributors_);
        }
      }
      /**
       * <code>repeated .DayContributor contributors = 7;</code>
       *
       * <pre>
       * All contributors, sorted by most recent activity.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.DayContributor.Builder addContributorsBuilder() {
        return getContributorsFieldBuilder().addBuilder(
            co.viewfinder.proto.DayMetadataPB.DayContributor.getDefaultInstance());
      }
      /**
       * <code>repeated .DayContributor contributors = 7;</code>
       *
       * <pre>
       * All contributors, sorted by most recent activity.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.DayContributor.Builder addContributorsBuilder(
          int index) {
        return getContributorsFieldBuilder().addBuilder(
            index, co.viewfinder.proto.DayMetadataPB.DayContributor.getDefaultInstance());
      }
      /**
       * <code>repeated .DayContributor contributors = 7;</code>
       *
       * <pre>
       * All contributors, sorted by most recent activity.
       * </pre>
       */
      public java.util.List<co.viewfinder.proto.DayMetadataPB.DayContributor.Builder> 
           getContributorsBuilderList() {
        return getContributorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.DayContributor, co.viewfinder.proto.DayMetadataPB.DayContributor.Builder, co.viewfinder.proto.DayMetadataPB.DayContributorOrBuilder> 
          getContributorsFieldBuilder() {
        if (contributorsBuilder_ == null) {
          contributorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              co.viewfinder.proto.DayMetadataPB.DayContributor, co.viewfinder.proto.DayMetadataPB.DayContributor.Builder, co.viewfinder.proto.DayMetadataPB.DayContributorOrBuilder>(
                  contributors_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          contributors_ = null;
        }
        return contributorsBuilder_;
      }

      // repeated .DayPhoto photos = 8;
      private java.util.List<co.viewfinder.proto.DayMetadataPB.DayPhoto> photos_ =
        java.util.Collections.emptyList();
      private void ensurePhotosIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          photos_ = new java.util.ArrayList<co.viewfinder.proto.DayMetadataPB.DayPhoto>(photos_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.DayPhoto, co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder, co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder> photosBuilder_;

      /**
       * <code>repeated .DayPhoto photos = 8;</code>
       *
       * <pre>
       * Sampled photos.
       * </pre>
       */
      public java.util.List<co.viewfinder.proto.DayMetadataPB.DayPhoto> getPhotosList() {
        if (photosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(photos_);
        } else {
          return photosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .DayPhoto photos = 8;</code>
       *
       * <pre>
       * Sampled photos.
       * </pre>
       */
      public int getPhotosCount() {
        if (photosBuilder_ == null) {
          return photos_.size();
        } else {
          return photosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .DayPhoto photos = 8;</code>
       *
       * <pre>
       * Sampled photos.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.DayPhoto getPhotos(int index) {
        if (photosBuilder_ == null) {
          return photos_.get(index);
        } else {
          return photosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .DayPhoto photos = 8;</code>
       *
       * <pre>
       * Sampled photos.
       * </pre>
       */
      public Builder setPhotos(
          int index, co.viewfinder.proto.DayMetadataPB.DayPhoto value) {
        if (photosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhotosIsMutable();
          photos_.set(index, value);
          onChanged();
        } else {
          photosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DayPhoto photos = 8;</code>
       *
       * <pre>
       * Sampled photos.
       * </pre>
       */
      public Builder setPhotos(
          int index, co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder builderForValue) {
        if (photosBuilder_ == null) {
          ensurePhotosIsMutable();
          photos_.set(index, builderForValue.build());
          onChanged();
        } else {
          photosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DayPhoto photos = 8;</code>
       *
       * <pre>
       * Sampled photos.
       * </pre>
       */
      public Builder addPhotos(co.viewfinder.proto.DayMetadataPB.DayPhoto value) {
        if (photosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhotosIsMutable();
          photos_.add(value);
          onChanged();
        } else {
          photosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .DayPhoto photos = 8;</code>
       *
       * <pre>
       * Sampled photos.
       * </pre>
       */
      public Builder addPhotos(
          int index, co.viewfinder.proto.DayMetadataPB.DayPhoto value) {
        if (photosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhotosIsMutable();
          photos_.add(index, value);
          onChanged();
        } else {
          photosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DayPhoto photos = 8;</code>
       *
       * <pre>
       * Sampled photos.
       * </pre>
       */
      public Builder addPhotos(
          co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder builderForValue) {
        if (photosBuilder_ == null) {
          ensurePhotosIsMutable();
          photos_.add(builderForValue.build());
          onChanged();
        } else {
          photosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DayPhoto photos = 8;</code>
       *
       * <pre>
       * Sampled photos.
       * </pre>
       */
      public Builder addPhotos(
          int index, co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder builderForValue) {
        if (photosBuilder_ == null) {
          ensurePhotosIsMutable();
          photos_.add(index, builderForValue.build());
          onChanged();
        } else {
          photosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DayPhoto photos = 8;</code>
       *
       * <pre>
       * Sampled photos.
       * </pre>
       */
      public Builder addAllPhotos(
          java.lang.Iterable<? extends co.viewfinder.proto.DayMetadataPB.DayPhoto> values) {
        if (photosBuilder_ == null) {
          ensurePhotosIsMutable();
          super.addAll(values, photos_);
          onChanged();
        } else {
          photosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .DayPhoto photos = 8;</code>
       *
       * <pre>
       * Sampled photos.
       * </pre>
       */
      public Builder clearPhotos() {
        if (photosBuilder_ == null) {
          photos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          photosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .DayPhoto photos = 8;</code>
       *
       * <pre>
       * Sampled photos.
       * </pre>
       */
      public Builder removePhotos(int index) {
        if (photosBuilder_ == null) {
          ensurePhotosIsMutable();
          photos_.remove(index);
          onChanged();
        } else {
          photosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .DayPhoto photos = 8;</code>
       *
       * <pre>
       * Sampled photos.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder getPhotosBuilder(
          int index) {
        return getPhotosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .DayPhoto photos = 8;</code>
       *
       * <pre>
       * Sampled photos.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder getPhotosOrBuilder(
          int index) {
        if (photosBuilder_ == null) {
          return photos_.get(index);  } else {
          return photosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .DayPhoto photos = 8;</code>
       *
       * <pre>
       * Sampled photos.
       * </pre>
       */
      public java.util.List<? extends co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder> 
           getPhotosOrBuilderList() {
        if (photosBuilder_ != null) {
          return photosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(photos_);
        }
      }
      /**
       * <code>repeated .DayPhoto photos = 8;</code>
       *
       * <pre>
       * Sampled photos.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder addPhotosBuilder() {
        return getPhotosFieldBuilder().addBuilder(
            co.viewfinder.proto.DayMetadataPB.DayPhoto.getDefaultInstance());
      }
      /**
       * <code>repeated .DayPhoto photos = 8;</code>
       *
       * <pre>
       * Sampled photos.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder addPhotosBuilder(
          int index) {
        return getPhotosFieldBuilder().addBuilder(
            index, co.viewfinder.proto.DayMetadataPB.DayPhoto.getDefaultInstance());
      }
      /**
       * <code>repeated .DayPhoto photos = 8;</code>
       *
       * <pre>
       * Sampled photos.
       * </pre>
       */
      public java.util.List<co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder> 
           getPhotosBuilderList() {
        return getPhotosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.DayPhoto, co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder, co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder> 
          getPhotosFieldBuilder() {
        if (photosBuilder_ == null) {
          photosBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              co.viewfinder.proto.DayMetadataPB.DayPhoto, co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder, co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder>(
                  photos_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          photos_ = null;
        }
        return photosBuilder_;
      }

      // optional bool sub_sampled = 9;
      private boolean subSampled_ ;
      /**
       * <code>optional bool sub_sampled = 9;</code>
       *
       * <pre>
       * True if photos is a sampling of total.
       * </pre>
       */
      public boolean hasSubSampled() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool sub_sampled = 9;</code>
       *
       * <pre>
       * True if photos is a sampling of total.
       * </pre>
       */
      public boolean getSubSampled() {
        return subSampled_;
      }
      /**
       * <code>optional bool sub_sampled = 9;</code>
       *
       * <pre>
       * True if photos is a sampling of total.
       * </pre>
       */
      public Builder setSubSampled(boolean value) {
        bitField0_ |= 0x00000100;
        subSampled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool sub_sampled = 9;</code>
       *
       * <pre>
       * True if photos is a sampling of total.
       * </pre>
       */
      public Builder clearSubSampled() {
        bitField0_ = (bitField0_ & ~0x00000100);
        subSampled_ = false;
        onChanged();
        return this;
      }

      // optional int32 photo_count = 10;
      private int photoCount_ ;
      /**
       * <code>optional int32 photo_count = 10;</code>
       *
       * <pre>
       * Count of photos shared to viewpoint.
       * </pre>
       */
      public boolean hasPhotoCount() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 photo_count = 10;</code>
       *
       * <pre>
       * Count of photos shared to viewpoint.
       * </pre>
       */
      public int getPhotoCount() {
        return photoCount_;
      }
      /**
       * <code>optional int32 photo_count = 10;</code>
       *
       * <pre>
       * Count of photos shared to viewpoint.
       * </pre>
       */
      public Builder setPhotoCount(int value) {
        bitField0_ |= 0x00000200;
        photoCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 photo_count = 10;</code>
       *
       * <pre>
       * Count of photos shared to viewpoint.
       * </pre>
       */
      public Builder clearPhotoCount() {
        bitField0_ = (bitField0_ & ~0x00000200);
        photoCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 comment_count = 11;
      private int commentCount_ ;
      /**
       * <code>optional int32 comment_count = 11;</code>
       *
       * <pre>
       * Count of comments posted to viewpoint.
       * </pre>
       */
      public boolean hasCommentCount() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 comment_count = 11;</code>
       *
       * <pre>
       * Count of comments posted to viewpoint.
       * </pre>
       */
      public int getCommentCount() {
        return commentCount_;
      }
      /**
       * <code>optional int32 comment_count = 11;</code>
       *
       * <pre>
       * Count of comments posted to viewpoint.
       * </pre>
       */
      public Builder setCommentCount(int value) {
        bitField0_ |= 0x00000400;
        commentCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 comment_count = 11;</code>
       *
       * <pre>
       * Count of comments posted to viewpoint.
       * </pre>
       */
      public Builder clearCommentCount() {
        bitField0_ = (bitField0_ & ~0x00000400);
        commentCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 new_photo_count = 12;
      private int newPhotoCount_ ;
      /**
       * <code>optional int32 new_photo_count = 12;</code>
       *
       * <pre>
       * Maximum update sequence of photos.
       * </pre>
       */
      public boolean hasNewPhotoCount() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 new_photo_count = 12;</code>
       *
       * <pre>
       * Maximum update sequence of photos.
       * </pre>
       */
      public int getNewPhotoCount() {
        return newPhotoCount_;
      }
      /**
       * <code>optional int32 new_photo_count = 12;</code>
       *
       * <pre>
       * Maximum update sequence of photos.
       * </pre>
       */
      public Builder setNewPhotoCount(int value) {
        bitField0_ |= 0x00000800;
        newPhotoCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 new_photo_count = 12;</code>
       *
       * <pre>
       * Maximum update sequence of photos.
       * </pre>
       */
      public Builder clearNewPhotoCount() {
        bitField0_ = (bitField0_ & ~0x00000800);
        newPhotoCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 new_comment_count = 13;
      private int newCommentCount_ ;
      /**
       * <code>optional int32 new_comment_count = 13;</code>
       *
       * <pre>
       * Maximum updates sequence of comments.
       * </pre>
       */
      public boolean hasNewCommentCount() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 new_comment_count = 13;</code>
       *
       * <pre>
       * Maximum updates sequence of comments.
       * </pre>
       */
      public int getNewCommentCount() {
        return newCommentCount_;
      }
      /**
       * <code>optional int32 new_comment_count = 13;</code>
       *
       * <pre>
       * Maximum updates sequence of comments.
       * </pre>
       */
      public Builder setNewCommentCount(int value) {
        bitField0_ |= 0x00001000;
        newCommentCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 new_comment_count = 13;</code>
       *
       * <pre>
       * Maximum updates sequence of comments.
       * </pre>
       */
      public Builder clearNewCommentCount() {
        bitField0_ = (bitField0_ & ~0x00001000);
        newCommentCount_ = 0;
        onChanged();
        return this;
      }

      // optional bool unviewed_content = 14;
      private boolean unviewedContent_ ;
      /**
       * <code>optional bool unviewed_content = 14;</code>
       *
       * <pre>
       * True if there are any unviewed photos, comments or updates.
       * </pre>
       */
      public boolean hasUnviewedContent() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional bool unviewed_content = 14;</code>
       *
       * <pre>
       * True if there are any unviewed photos, comments or updates.
       * </pre>
       */
      public boolean getUnviewedContent() {
        return unviewedContent_;
      }
      /**
       * <code>optional bool unviewed_content = 14;</code>
       *
       * <pre>
       * True if there are any unviewed photos, comments or updates.
       * </pre>
       */
      public Builder setUnviewedContent(boolean value) {
        bitField0_ |= 0x00002000;
        unviewedContent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool unviewed_content = 14;</code>
       *
       * <pre>
       * True if there are any unviewed photos, comments or updates.
       * </pre>
       */
      public Builder clearUnviewedContent() {
        bitField0_ = (bitField0_ & ~0x00002000);
        unviewedContent_ = false;
        onChanged();
        return this;
      }

      // optional bool pending_content = 15;
      private boolean pendingContent_ ;
      /**
       * <code>optional bool pending_content = 15;</code>
       *
       * <pre>
       * True if there are any activities still pending upload.
       * </pre>
       */
      public boolean hasPendingContent() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional bool pending_content = 15;</code>
       *
       * <pre>
       * True if there are any activities still pending upload.
       * </pre>
       */
      public boolean getPendingContent() {
        return pendingContent_;
      }
      /**
       * <code>optional bool pending_content = 15;</code>
       *
       * <pre>
       * True if there are any activities still pending upload.
       * </pre>
       */
      public Builder setPendingContent(boolean value) {
        bitField0_ |= 0x00004000;
        pendingContent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool pending_content = 15;</code>
       *
       * <pre>
       * True if there are any activities still pending upload.
       * </pre>
       */
      public Builder clearPendingContent() {
        bitField0_ = (bitField0_ & ~0x00004000);
        pendingContent_ = false;
        onChanged();
        return this;
      }

      // optional bool muted = 16;
      private boolean muted_ ;
      /**
       * <code>optional bool muted = 16;</code>
       *
       * <pre>
       * True if the viewpoint is muted.
       * </pre>
       */
      public boolean hasMuted() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional bool muted = 16;</code>
       *
       * <pre>
       * True if the viewpoint is muted.
       * </pre>
       */
      public boolean getMuted() {
        return muted_;
      }
      /**
       * <code>optional bool muted = 16;</code>
       *
       * <pre>
       * True if the viewpoint is muted.
       * </pre>
       */
      public Builder setMuted(boolean value) {
        bitField0_ |= 0x00008000;
        muted_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool muted = 16;</code>
       *
       * <pre>
       * True if the viewpoint is muted.
       * </pre>
       */
      public Builder clearMuted() {
        bitField0_ = (bitField0_ & ~0x00008000);
        muted_ = false;
        onChanged();
        return this;
      }

      // optional bool autosave = 17;
      private boolean autosave_ ;
      /**
       * <code>optional bool autosave = 17;</code>
       *
       * <pre>
       * True if the viewpoint is autosaved.
       * </pre>
       */
      public boolean hasAutosave() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional bool autosave = 17;</code>
       *
       * <pre>
       * True if the viewpoint is autosaved.
       * </pre>
       */
      public boolean getAutosave() {
        return autosave_;
      }
      /**
       * <code>optional bool autosave = 17;</code>
       *
       * <pre>
       * True if the viewpoint is autosaved.
       * </pre>
       */
      public Builder setAutosave(boolean value) {
        bitField0_ |= 0x00010000;
        autosave_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool autosave = 17;</code>
       *
       * <pre>
       * True if the viewpoint is autosaved.
       * </pre>
       */
      public Builder clearAutosave() {
        bitField0_ = (bitField0_ & ~0x00010000);
        autosave_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TrapdoorMetadata)
    }

    static {
      defaultInstance = new TrapdoorMetadata(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:TrapdoorMetadata)
  }

  public interface EventMetadataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional double earliest_timestamp = 1;
    /**
     * <code>optional double earliest_timestamp = 1;</code>
     *
     * <pre>
     * Earliest episode timestamp.
     * </pre>
     */
    boolean hasEarliestTimestamp();
    /**
     * <code>optional double earliest_timestamp = 1;</code>
     *
     * <pre>
     * Earliest episode timestamp.
     * </pre>
     */
    double getEarliestTimestamp();

    // optional double latest_timestamp = 2;
    /**
     * <code>optional double latest_timestamp = 2;</code>
     *
     * <pre>
     * Latest episode timestamp.
     * </pre>
     */
    boolean hasLatestTimestamp();
    /**
     * <code>optional double latest_timestamp = 2;</code>
     *
     * <pre>
     * Latest episode timestamp.
     * </pre>
     */
    double getLatestTimestamp();

    // optional int32 photo_count = 3;
    /**
     * <code>optional int32 photo_count = 3;</code>
     *
     * <pre>
     * Total number of photos in all episodes.
     * </pre>
     */
    boolean hasPhotoCount();
    /**
     * <code>optional int32 photo_count = 3;</code>
     *
     * <pre>
     * Total number of photos in all episodes.
     * </pre>
     */
    int getPhotoCount();

    // repeated .FilteredEpisode episodes = 4;
    /**
     * <code>repeated .FilteredEpisode episodes = 4;</code>
     *
     * <pre>
     * Sorted by timestamp of least recent photo in the episode.
     * </pre>
     */
    java.util.List<co.viewfinder.proto.DayMetadataPB.FilteredEpisode> 
        getEpisodesList();
    /**
     * <code>repeated .FilteredEpisode episodes = 4;</code>
     *
     * <pre>
     * Sorted by timestamp of least recent photo in the episode.
     * </pre>
     */
    co.viewfinder.proto.DayMetadataPB.FilteredEpisode getEpisodes(int index);
    /**
     * <code>repeated .FilteredEpisode episodes = 4;</code>
     *
     * <pre>
     * Sorted by timestamp of least recent photo in the episode.
     * </pre>
     */
    int getEpisodesCount();
    /**
     * <code>repeated .FilteredEpisode episodes = 4;</code>
     *
     * <pre>
     * Sorted by timestamp of least recent photo in the episode.
     * </pre>
     */
    java.util.List<? extends co.viewfinder.proto.DayMetadataPB.FilteredEpisodeOrBuilder> 
        getEpisodesOrBuilderList();
    /**
     * <code>repeated .FilteredEpisode episodes = 4;</code>
     *
     * <pre>
     * Sorted by timestamp of least recent photo in the episode.
     * </pre>
     */
    co.viewfinder.proto.DayMetadataPB.FilteredEpisodeOrBuilder getEpisodesOrBuilder(
        int index);

    // repeated .DayContributor contributors = 5;
    /**
     * <code>repeated .DayContributor contributors = 5;</code>
     *
     * <pre>
     * Sorted by number of photos contributed.
     * </pre>
     */
    java.util.List<co.viewfinder.proto.DayMetadataPB.DayContributor> 
        getContributorsList();
    /**
     * <code>repeated .DayContributor contributors = 5;</code>
     *
     * <pre>
     * Sorted by number of photos contributed.
     * </pre>
     */
    co.viewfinder.proto.DayMetadataPB.DayContributor getContributors(int index);
    /**
     * <code>repeated .DayContributor contributors = 5;</code>
     *
     * <pre>
     * Sorted by number of photos contributed.
     * </pre>
     */
    int getContributorsCount();
    /**
     * <code>repeated .DayContributor contributors = 5;</code>
     *
     * <pre>
     * Sorted by number of photos contributed.
     * </pre>
     */
    java.util.List<? extends co.viewfinder.proto.DayMetadataPB.DayContributorOrBuilder> 
        getContributorsOrBuilderList();
    /**
     * <code>repeated .DayContributor contributors = 5;</code>
     *
     * <pre>
     * Sorted by number of photos contributed.
     * </pre>
     */
    co.viewfinder.proto.DayMetadataPB.DayContributorOrBuilder getContributorsOrBuilder(
        int index);

    // optional .Location location = 6;
    /**
     * <code>optional .Location location = 6;</code>
     *
     * <pre>
     * Canonical location matching centroid of all episodes.
     * </pre>
     */
    boolean hasLocation();
    /**
     * <code>optional .Location location = 6;</code>
     *
     * <pre>
     * Canonical location matching centroid of all episodes.
     * </pre>
     */
    co.viewfinder.proto.LocationPB.Location getLocation();
    /**
     * <code>optional .Location location = 6;</code>
     *
     * <pre>
     * Canonical location matching centroid of all episodes.
     * </pre>
     */
    co.viewfinder.proto.LocationPB.LocationOrBuilder getLocationOrBuilder();

    // optional .Placemark placemark = 7;
    /**
     * <code>optional .Placemark placemark = 7;</code>
     *
     * <pre>
     * Canonical placemark matching location.
     * </pre>
     */
    boolean hasPlacemark();
    /**
     * <code>optional .Placemark placemark = 7;</code>
     *
     * <pre>
     * Canonical placemark matching location.
     * </pre>
     */
    co.viewfinder.proto.PlacemarkPB.Placemark getPlacemark();
    /**
     * <code>optional .Placemark placemark = 7;</code>
     *
     * <pre>
     * Canonical placemark matching location.
     * </pre>
     */
    co.viewfinder.proto.PlacemarkPB.PlacemarkOrBuilder getPlacemarkOrBuilder();

    // optional double distance = 8;
    /**
     * <code>optional double distance = 8;</code>
     *
     * <pre>
     * Distance from location to closest "top" location.
     * </pre>
     */
    boolean hasDistance();
    /**
     * <code>optional double distance = 8;</code>
     *
     * <pre>
     * Distance from location to closest "top" location.
     * </pre>
     */
    double getDistance();

    // repeated .TrapdoorMetadata trapdoors = 9;
    /**
     * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
     *
     * <pre>
     * "EVENT" trapdoors into viewpoints.
     * </pre>
     */
    java.util.List<co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata> 
        getTrapdoorsList();
    /**
     * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
     *
     * <pre>
     * "EVENT" trapdoors into viewpoints.
     * </pre>
     */
    co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata getTrapdoors(int index);
    /**
     * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
     *
     * <pre>
     * "EVENT" trapdoors into viewpoints.
     * </pre>
     */
    int getTrapdoorsCount();
    /**
     * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
     *
     * <pre>
     * "EVENT" trapdoors into viewpoints.
     * </pre>
     */
    java.util.List<? extends co.viewfinder.proto.DayMetadataPB.TrapdoorMetadataOrBuilder> 
        getTrapdoorsOrBuilderList();
    /**
     * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
     *
     * <pre>
     * "EVENT" trapdoors into viewpoints.
     * </pre>
     */
    co.viewfinder.proto.DayMetadataPB.TrapdoorMetadataOrBuilder getTrapdoorsOrBuilder(
        int index);

    // optional string title = 10;
    /**
     * <code>optional string title = 10;</code>
     *
     * <pre>
     * Title if the event has trapdoors to viewpoints.
     * </pre>
     */
    boolean hasTitle();
    /**
     * <code>optional string title = 10;</code>
     *
     * <pre>
     * Title if the event has trapdoors to viewpoints.
     * </pre>
     */
    java.lang.String getTitle();
    /**
     * <code>optional string title = 10;</code>
     *
     * <pre>
     * Title if the event has trapdoors to viewpoints.
     * </pre>
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    // optional string short_title = 11;
    /**
     * <code>optional string short_title = 11;</code>
     */
    boolean hasShortTitle();
    /**
     * <code>optional string short_title = 11;</code>
     */
    java.lang.String getShortTitle();
    /**
     * <code>optional string short_title = 11;</code>
     */
    com.google.protobuf.ByteString
        getShortTitleBytes();
  }
  /**
   * Protobuf type {@code EventMetadata}
   */
  public static final class EventMetadata extends
      com.google.protobuf.GeneratedMessage
      implements EventMetadataOrBuilder {
    // Use EventMetadata.newBuilder() to construct.
    private EventMetadata(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EventMetadata(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EventMetadata defaultInstance;
    public static EventMetadata getDefaultInstance() {
      return defaultInstance;
    }

    public EventMetadata getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EventMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              earliestTimestamp_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              latestTimestamp_ = input.readDouble();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              photoCount_ = input.readInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                episodes_ = new java.util.ArrayList<co.viewfinder.proto.DayMetadataPB.FilteredEpisode>();
                mutable_bitField0_ |= 0x00000008;
              }
              episodes_.add(input.readMessage(co.viewfinder.proto.DayMetadataPB.FilteredEpisode.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                contributors_ = new java.util.ArrayList<co.viewfinder.proto.DayMetadataPB.DayContributor>();
                mutable_bitField0_ |= 0x00000010;
              }
              contributors_.add(input.readMessage(co.viewfinder.proto.DayMetadataPB.DayContributor.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              co.viewfinder.proto.LocationPB.Location.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = location_.toBuilder();
              }
              location_ = input.readMessage(co.viewfinder.proto.LocationPB.Location.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(location_);
                location_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 58: {
              co.viewfinder.proto.PlacemarkPB.Placemark.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = placemark_.toBuilder();
              }
              placemark_ = input.readMessage(co.viewfinder.proto.PlacemarkPB.Placemark.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(placemark_);
                placemark_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 65: {
              bitField0_ |= 0x00000020;
              distance_ = input.readDouble();
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                trapdoors_ = new java.util.ArrayList<co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata>();
                mutable_bitField0_ |= 0x00000100;
              }
              trapdoors_.add(input.readMessage(co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.PARSER, extensionRegistry));
              break;
            }
            case 82: {
              bitField0_ |= 0x00000040;
              title_ = input.readBytes();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000080;
              shortTitle_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          episodes_ = java.util.Collections.unmodifiableList(episodes_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          contributors_ = java.util.Collections.unmodifiableList(contributors_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          trapdoors_ = java.util.Collections.unmodifiableList(trapdoors_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return co.viewfinder.proto.DayMetadataPB.internal_static_EventMetadata_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return co.viewfinder.proto.DayMetadataPB.internal_static_EventMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              co.viewfinder.proto.DayMetadataPB.EventMetadata.class, co.viewfinder.proto.DayMetadataPB.EventMetadata.Builder.class);
    }

    public static com.google.protobuf.Parser<EventMetadata> PARSER =
        new com.google.protobuf.AbstractParser<EventMetadata>() {
      public EventMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EventMetadata(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EventMetadata> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional double earliest_timestamp = 1;
    public static final int EARLIEST_TIMESTAMP_FIELD_NUMBER = 1;
    private double earliestTimestamp_;
    /**
     * <code>optional double earliest_timestamp = 1;</code>
     *
     * <pre>
     * Earliest episode timestamp.
     * </pre>
     */
    public boolean hasEarliestTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional double earliest_timestamp = 1;</code>
     *
     * <pre>
     * Earliest episode timestamp.
     * </pre>
     */
    public double getEarliestTimestamp() {
      return earliestTimestamp_;
    }

    // optional double latest_timestamp = 2;
    public static final int LATEST_TIMESTAMP_FIELD_NUMBER = 2;
    private double latestTimestamp_;
    /**
     * <code>optional double latest_timestamp = 2;</code>
     *
     * <pre>
     * Latest episode timestamp.
     * </pre>
     */
    public boolean hasLatestTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional double latest_timestamp = 2;</code>
     *
     * <pre>
     * Latest episode timestamp.
     * </pre>
     */
    public double getLatestTimestamp() {
      return latestTimestamp_;
    }

    // optional int32 photo_count = 3;
    public static final int PHOTO_COUNT_FIELD_NUMBER = 3;
    private int photoCount_;
    /**
     * <code>optional int32 photo_count = 3;</code>
     *
     * <pre>
     * Total number of photos in all episodes.
     * </pre>
     */
    public boolean hasPhotoCount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 photo_count = 3;</code>
     *
     * <pre>
     * Total number of photos in all episodes.
     * </pre>
     */
    public int getPhotoCount() {
      return photoCount_;
    }

    // repeated .FilteredEpisode episodes = 4;
    public static final int EPISODES_FIELD_NUMBER = 4;
    private java.util.List<co.viewfinder.proto.DayMetadataPB.FilteredEpisode> episodes_;
    /**
     * <code>repeated .FilteredEpisode episodes = 4;</code>
     *
     * <pre>
     * Sorted by timestamp of least recent photo in the episode.
     * </pre>
     */
    public java.util.List<co.viewfinder.proto.DayMetadataPB.FilteredEpisode> getEpisodesList() {
      return episodes_;
    }
    /**
     * <code>repeated .FilteredEpisode episodes = 4;</code>
     *
     * <pre>
     * Sorted by timestamp of least recent photo in the episode.
     * </pre>
     */
    public java.util.List<? extends co.viewfinder.proto.DayMetadataPB.FilteredEpisodeOrBuilder> 
        getEpisodesOrBuilderList() {
      return episodes_;
    }
    /**
     * <code>repeated .FilteredEpisode episodes = 4;</code>
     *
     * <pre>
     * Sorted by timestamp of least recent photo in the episode.
     * </pre>
     */
    public int getEpisodesCount() {
      return episodes_.size();
    }
    /**
     * <code>repeated .FilteredEpisode episodes = 4;</code>
     *
     * <pre>
     * Sorted by timestamp of least recent photo in the episode.
     * </pre>
     */
    public co.viewfinder.proto.DayMetadataPB.FilteredEpisode getEpisodes(int index) {
      return episodes_.get(index);
    }
    /**
     * <code>repeated .FilteredEpisode episodes = 4;</code>
     *
     * <pre>
     * Sorted by timestamp of least recent photo in the episode.
     * </pre>
     */
    public co.viewfinder.proto.DayMetadataPB.FilteredEpisodeOrBuilder getEpisodesOrBuilder(
        int index) {
      return episodes_.get(index);
    }

    // repeated .DayContributor contributors = 5;
    public static final int CONTRIBUTORS_FIELD_NUMBER = 5;
    private java.util.List<co.viewfinder.proto.DayMetadataPB.DayContributor> contributors_;
    /**
     * <code>repeated .DayContributor contributors = 5;</code>
     *
     * <pre>
     * Sorted by number of photos contributed.
     * </pre>
     */
    public java.util.List<co.viewfinder.proto.DayMetadataPB.DayContributor> getContributorsList() {
      return contributors_;
    }
    /**
     * <code>repeated .DayContributor contributors = 5;</code>
     *
     * <pre>
     * Sorted by number of photos contributed.
     * </pre>
     */
    public java.util.List<? extends co.viewfinder.proto.DayMetadataPB.DayContributorOrBuilder> 
        getContributorsOrBuilderList() {
      return contributors_;
    }
    /**
     * <code>repeated .DayContributor contributors = 5;</code>
     *
     * <pre>
     * Sorted by number of photos contributed.
     * </pre>
     */
    public int getContributorsCount() {
      return contributors_.size();
    }
    /**
     * <code>repeated .DayContributor contributors = 5;</code>
     *
     * <pre>
     * Sorted by number of photos contributed.
     * </pre>
     */
    public co.viewfinder.proto.DayMetadataPB.DayContributor getContributors(int index) {
      return contributors_.get(index);
    }
    /**
     * <code>repeated .DayContributor contributors = 5;</code>
     *
     * <pre>
     * Sorted by number of photos contributed.
     * </pre>
     */
    public co.viewfinder.proto.DayMetadataPB.DayContributorOrBuilder getContributorsOrBuilder(
        int index) {
      return contributors_.get(index);
    }

    // optional .Location location = 6;
    public static final int LOCATION_FIELD_NUMBER = 6;
    private co.viewfinder.proto.LocationPB.Location location_;
    /**
     * <code>optional .Location location = 6;</code>
     *
     * <pre>
     * Canonical location matching centroid of all episodes.
     * </pre>
     */
    public boolean hasLocation() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .Location location = 6;</code>
     *
     * <pre>
     * Canonical location matching centroid of all episodes.
     * </pre>
     */
    public co.viewfinder.proto.LocationPB.Location getLocation() {
      return location_;
    }
    /**
     * <code>optional .Location location = 6;</code>
     *
     * <pre>
     * Canonical location matching centroid of all episodes.
     * </pre>
     */
    public co.viewfinder.proto.LocationPB.LocationOrBuilder getLocationOrBuilder() {
      return location_;
    }

    // optional .Placemark placemark = 7;
    public static final int PLACEMARK_FIELD_NUMBER = 7;
    private co.viewfinder.proto.PlacemarkPB.Placemark placemark_;
    /**
     * <code>optional .Placemark placemark = 7;</code>
     *
     * <pre>
     * Canonical placemark matching location.
     * </pre>
     */
    public boolean hasPlacemark() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .Placemark placemark = 7;</code>
     *
     * <pre>
     * Canonical placemark matching location.
     * </pre>
     */
    public co.viewfinder.proto.PlacemarkPB.Placemark getPlacemark() {
      return placemark_;
    }
    /**
     * <code>optional .Placemark placemark = 7;</code>
     *
     * <pre>
     * Canonical placemark matching location.
     * </pre>
     */
    public co.viewfinder.proto.PlacemarkPB.PlacemarkOrBuilder getPlacemarkOrBuilder() {
      return placemark_;
    }

    // optional double distance = 8;
    public static final int DISTANCE_FIELD_NUMBER = 8;
    private double distance_;
    /**
     * <code>optional double distance = 8;</code>
     *
     * <pre>
     * Distance from location to closest "top" location.
     * </pre>
     */
    public boolean hasDistance() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional double distance = 8;</code>
     *
     * <pre>
     * Distance from location to closest "top" location.
     * </pre>
     */
    public double getDistance() {
      return distance_;
    }

    // repeated .TrapdoorMetadata trapdoors = 9;
    public static final int TRAPDOORS_FIELD_NUMBER = 9;
    private java.util.List<co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata> trapdoors_;
    /**
     * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
     *
     * <pre>
     * "EVENT" trapdoors into viewpoints.
     * </pre>
     */
    public java.util.List<co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata> getTrapdoorsList() {
      return trapdoors_;
    }
    /**
     * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
     *
     * <pre>
     * "EVENT" trapdoors into viewpoints.
     * </pre>
     */
    public java.util.List<? extends co.viewfinder.proto.DayMetadataPB.TrapdoorMetadataOrBuilder> 
        getTrapdoorsOrBuilderList() {
      return trapdoors_;
    }
    /**
     * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
     *
     * <pre>
     * "EVENT" trapdoors into viewpoints.
     * </pre>
     */
    public int getTrapdoorsCount() {
      return trapdoors_.size();
    }
    /**
     * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
     *
     * <pre>
     * "EVENT" trapdoors into viewpoints.
     * </pre>
     */
    public co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata getTrapdoors(int index) {
      return trapdoors_.get(index);
    }
    /**
     * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
     *
     * <pre>
     * "EVENT" trapdoors into viewpoints.
     * </pre>
     */
    public co.viewfinder.proto.DayMetadataPB.TrapdoorMetadataOrBuilder getTrapdoorsOrBuilder(
        int index) {
      return trapdoors_.get(index);
    }

    // optional string title = 10;
    public static final int TITLE_FIELD_NUMBER = 10;
    private java.lang.Object title_;
    /**
     * <code>optional string title = 10;</code>
     *
     * <pre>
     * Title if the event has trapdoors to viewpoints.
     * </pre>
     */
    public boolean hasTitle() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string title = 10;</code>
     *
     * <pre>
     * Title if the event has trapdoors to viewpoints.
     * </pre>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          title_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string title = 10;</code>
     *
     * <pre>
     * Title if the event has trapdoors to viewpoints.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string short_title = 11;
    public static final int SHORT_TITLE_FIELD_NUMBER = 11;
    private java.lang.Object shortTitle_;
    /**
     * <code>optional string short_title = 11;</code>
     */
    public boolean hasShortTitle() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string short_title = 11;</code>
     */
    public java.lang.String getShortTitle() {
      java.lang.Object ref = shortTitle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          shortTitle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string short_title = 11;</code>
     */
    public com.google.protobuf.ByteString
        getShortTitleBytes() {
      java.lang.Object ref = shortTitle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        shortTitle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      earliestTimestamp_ = 0D;
      latestTimestamp_ = 0D;
      photoCount_ = 0;
      episodes_ = java.util.Collections.emptyList();
      contributors_ = java.util.Collections.emptyList();
      location_ = co.viewfinder.proto.LocationPB.Location.getDefaultInstance();
      placemark_ = co.viewfinder.proto.PlacemarkPB.Placemark.getDefaultInstance();
      distance_ = 0D;
      trapdoors_ = java.util.Collections.emptyList();
      title_ = "";
      shortTitle_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, earliestTimestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, latestTimestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, photoCount_);
      }
      for (int i = 0; i < episodes_.size(); i++) {
        output.writeMessage(4, episodes_.get(i));
      }
      for (int i = 0; i < contributors_.size(); i++) {
        output.writeMessage(5, contributors_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(6, location_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(7, placemark_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(8, distance_);
      }
      for (int i = 0; i < trapdoors_.size(); i++) {
        output.writeMessage(9, trapdoors_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(10, getTitleBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(11, getShortTitleBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, earliestTimestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, latestTimestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, photoCount_);
      }
      for (int i = 0; i < episodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, episodes_.get(i));
      }
      for (int i = 0; i < contributors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, contributors_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, location_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, placemark_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, distance_);
      }
      for (int i = 0; i < trapdoors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, trapdoors_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getTitleBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getShortTitleBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static co.viewfinder.proto.DayMetadataPB.EventMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static co.viewfinder.proto.DayMetadataPB.EventMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.EventMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static co.viewfinder.proto.DayMetadataPB.EventMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.EventMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.EventMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.EventMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.EventMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.EventMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.EventMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(co.viewfinder.proto.DayMetadataPB.EventMetadata prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code EventMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements co.viewfinder.proto.DayMetadataPB.EventMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_EventMetadata_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_EventMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                co.viewfinder.proto.DayMetadataPB.EventMetadata.class, co.viewfinder.proto.DayMetadataPB.EventMetadata.Builder.class);
      }

      // Construct using co.viewfinder.proto.DayMetadataPB.EventMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEpisodesFieldBuilder();
          getContributorsFieldBuilder();
          getLocationFieldBuilder();
          getPlacemarkFieldBuilder();
          getTrapdoorsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        earliestTimestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        latestTimestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        photoCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (episodesBuilder_ == null) {
          episodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          episodesBuilder_.clear();
        }
        if (contributorsBuilder_ == null) {
          contributors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          contributorsBuilder_.clear();
        }
        if (locationBuilder_ == null) {
          location_ = co.viewfinder.proto.LocationPB.Location.getDefaultInstance();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (placemarkBuilder_ == null) {
          placemark_ = co.viewfinder.proto.PlacemarkPB.Placemark.getDefaultInstance();
        } else {
          placemarkBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        distance_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (trapdoorsBuilder_ == null) {
          trapdoors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          trapdoorsBuilder_.clear();
        }
        title_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        shortTitle_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_EventMetadata_descriptor;
      }

      public co.viewfinder.proto.DayMetadataPB.EventMetadata getDefaultInstanceForType() {
        return co.viewfinder.proto.DayMetadataPB.EventMetadata.getDefaultInstance();
      }

      public co.viewfinder.proto.DayMetadataPB.EventMetadata build() {
        co.viewfinder.proto.DayMetadataPB.EventMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public co.viewfinder.proto.DayMetadataPB.EventMetadata buildPartial() {
        co.viewfinder.proto.DayMetadataPB.EventMetadata result = new co.viewfinder.proto.DayMetadataPB.EventMetadata(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.earliestTimestamp_ = earliestTimestamp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.latestTimestamp_ = latestTimestamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.photoCount_ = photoCount_;
        if (episodesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            episodes_ = java.util.Collections.unmodifiableList(episodes_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.episodes_ = episodes_;
        } else {
          result.episodes_ = episodesBuilder_.build();
        }
        if (contributorsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            contributors_ = java.util.Collections.unmodifiableList(contributors_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.contributors_ = contributors_;
        } else {
          result.contributors_ = contributorsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        if (locationBuilder_ == null) {
          result.location_ = location_;
        } else {
          result.location_ = locationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        if (placemarkBuilder_ == null) {
          result.placemark_ = placemark_;
        } else {
          result.placemark_ = placemarkBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.distance_ = distance_;
        if (trapdoorsBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            trapdoors_ = java.util.Collections.unmodifiableList(trapdoors_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.trapdoors_ = trapdoors_;
        } else {
          result.trapdoors_ = trapdoorsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000040;
        }
        result.title_ = title_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000080;
        }
        result.shortTitle_ = shortTitle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof co.viewfinder.proto.DayMetadataPB.EventMetadata) {
          return mergeFrom((co.viewfinder.proto.DayMetadataPB.EventMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(co.viewfinder.proto.DayMetadataPB.EventMetadata other) {
        if (other == co.viewfinder.proto.DayMetadataPB.EventMetadata.getDefaultInstance()) return this;
        if (other.hasEarliestTimestamp()) {
          setEarliestTimestamp(other.getEarliestTimestamp());
        }
        if (other.hasLatestTimestamp()) {
          setLatestTimestamp(other.getLatestTimestamp());
        }
        if (other.hasPhotoCount()) {
          setPhotoCount(other.getPhotoCount());
        }
        if (episodesBuilder_ == null) {
          if (!other.episodes_.isEmpty()) {
            if (episodes_.isEmpty()) {
              episodes_ = other.episodes_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureEpisodesIsMutable();
              episodes_.addAll(other.episodes_);
            }
            onChanged();
          }
        } else {
          if (!other.episodes_.isEmpty()) {
            if (episodesBuilder_.isEmpty()) {
              episodesBuilder_.dispose();
              episodesBuilder_ = null;
              episodes_ = other.episodes_;
              bitField0_ = (bitField0_ & ~0x00000008);
              episodesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEpisodesFieldBuilder() : null;
            } else {
              episodesBuilder_.addAllMessages(other.episodes_);
            }
          }
        }
        if (contributorsBuilder_ == null) {
          if (!other.contributors_.isEmpty()) {
            if (contributors_.isEmpty()) {
              contributors_ = other.contributors_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureContributorsIsMutable();
              contributors_.addAll(other.contributors_);
            }
            onChanged();
          }
        } else {
          if (!other.contributors_.isEmpty()) {
            if (contributorsBuilder_.isEmpty()) {
              contributorsBuilder_.dispose();
              contributorsBuilder_ = null;
              contributors_ = other.contributors_;
              bitField0_ = (bitField0_ & ~0x00000010);
              contributorsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getContributorsFieldBuilder() : null;
            } else {
              contributorsBuilder_.addAllMessages(other.contributors_);
            }
          }
        }
        if (other.hasLocation()) {
          mergeLocation(other.getLocation());
        }
        if (other.hasPlacemark()) {
          mergePlacemark(other.getPlacemark());
        }
        if (other.hasDistance()) {
          setDistance(other.getDistance());
        }
        if (trapdoorsBuilder_ == null) {
          if (!other.trapdoors_.isEmpty()) {
            if (trapdoors_.isEmpty()) {
              trapdoors_ = other.trapdoors_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureTrapdoorsIsMutable();
              trapdoors_.addAll(other.trapdoors_);
            }
            onChanged();
          }
        } else {
          if (!other.trapdoors_.isEmpty()) {
            if (trapdoorsBuilder_.isEmpty()) {
              trapdoorsBuilder_.dispose();
              trapdoorsBuilder_ = null;
              trapdoors_ = other.trapdoors_;
              bitField0_ = (bitField0_ & ~0x00000100);
              trapdoorsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTrapdoorsFieldBuilder() : null;
            } else {
              trapdoorsBuilder_.addAllMessages(other.trapdoors_);
            }
          }
        }
        if (other.hasTitle()) {
          bitField0_ |= 0x00000200;
          title_ = other.title_;
          onChanged();
        }
        if (other.hasShortTitle()) {
          bitField0_ |= 0x00000400;
          shortTitle_ = other.shortTitle_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        co.viewfinder.proto.DayMetadataPB.EventMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (co.viewfinder.proto.DayMetadataPB.EventMetadata) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional double earliest_timestamp = 1;
      private double earliestTimestamp_ ;
      /**
       * <code>optional double earliest_timestamp = 1;</code>
       *
       * <pre>
       * Earliest episode timestamp.
       * </pre>
       */
      public boolean hasEarliestTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional double earliest_timestamp = 1;</code>
       *
       * <pre>
       * Earliest episode timestamp.
       * </pre>
       */
      public double getEarliestTimestamp() {
        return earliestTimestamp_;
      }
      /**
       * <code>optional double earliest_timestamp = 1;</code>
       *
       * <pre>
       * Earliest episode timestamp.
       * </pre>
       */
      public Builder setEarliestTimestamp(double value) {
        bitField0_ |= 0x00000001;
        earliestTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double earliest_timestamp = 1;</code>
       *
       * <pre>
       * Earliest episode timestamp.
       * </pre>
       */
      public Builder clearEarliestTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        earliestTimestamp_ = 0D;
        onChanged();
        return this;
      }

      // optional double latest_timestamp = 2;
      private double latestTimestamp_ ;
      /**
       * <code>optional double latest_timestamp = 2;</code>
       *
       * <pre>
       * Latest episode timestamp.
       * </pre>
       */
      public boolean hasLatestTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional double latest_timestamp = 2;</code>
       *
       * <pre>
       * Latest episode timestamp.
       * </pre>
       */
      public double getLatestTimestamp() {
        return latestTimestamp_;
      }
      /**
       * <code>optional double latest_timestamp = 2;</code>
       *
       * <pre>
       * Latest episode timestamp.
       * </pre>
       */
      public Builder setLatestTimestamp(double value) {
        bitField0_ |= 0x00000002;
        latestTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double latest_timestamp = 2;</code>
       *
       * <pre>
       * Latest episode timestamp.
       * </pre>
       */
      public Builder clearLatestTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        latestTimestamp_ = 0D;
        onChanged();
        return this;
      }

      // optional int32 photo_count = 3;
      private int photoCount_ ;
      /**
       * <code>optional int32 photo_count = 3;</code>
       *
       * <pre>
       * Total number of photos in all episodes.
       * </pre>
       */
      public boolean hasPhotoCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 photo_count = 3;</code>
       *
       * <pre>
       * Total number of photos in all episodes.
       * </pre>
       */
      public int getPhotoCount() {
        return photoCount_;
      }
      /**
       * <code>optional int32 photo_count = 3;</code>
       *
       * <pre>
       * Total number of photos in all episodes.
       * </pre>
       */
      public Builder setPhotoCount(int value) {
        bitField0_ |= 0x00000004;
        photoCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 photo_count = 3;</code>
       *
       * <pre>
       * Total number of photos in all episodes.
       * </pre>
       */
      public Builder clearPhotoCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        photoCount_ = 0;
        onChanged();
        return this;
      }

      // repeated .FilteredEpisode episodes = 4;
      private java.util.List<co.viewfinder.proto.DayMetadataPB.FilteredEpisode> episodes_ =
        java.util.Collections.emptyList();
      private void ensureEpisodesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          episodes_ = new java.util.ArrayList<co.viewfinder.proto.DayMetadataPB.FilteredEpisode>(episodes_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.FilteredEpisode, co.viewfinder.proto.DayMetadataPB.FilteredEpisode.Builder, co.viewfinder.proto.DayMetadataPB.FilteredEpisodeOrBuilder> episodesBuilder_;

      /**
       * <code>repeated .FilteredEpisode episodes = 4;</code>
       *
       * <pre>
       * Sorted by timestamp of least recent photo in the episode.
       * </pre>
       */
      public java.util.List<co.viewfinder.proto.DayMetadataPB.FilteredEpisode> getEpisodesList() {
        if (episodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(episodes_);
        } else {
          return episodesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .FilteredEpisode episodes = 4;</code>
       *
       * <pre>
       * Sorted by timestamp of least recent photo in the episode.
       * </pre>
       */
      public int getEpisodesCount() {
        if (episodesBuilder_ == null) {
          return episodes_.size();
        } else {
          return episodesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .FilteredEpisode episodes = 4;</code>
       *
       * <pre>
       * Sorted by timestamp of least recent photo in the episode.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.FilteredEpisode getEpisodes(int index) {
        if (episodesBuilder_ == null) {
          return episodes_.get(index);
        } else {
          return episodesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .FilteredEpisode episodes = 4;</code>
       *
       * <pre>
       * Sorted by timestamp of least recent photo in the episode.
       * </pre>
       */
      public Builder setEpisodes(
          int index, co.viewfinder.proto.DayMetadataPB.FilteredEpisode value) {
        if (episodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEpisodesIsMutable();
          episodes_.set(index, value);
          onChanged();
        } else {
          episodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .FilteredEpisode episodes = 4;</code>
       *
       * <pre>
       * Sorted by timestamp of least recent photo in the episode.
       * </pre>
       */
      public Builder setEpisodes(
          int index, co.viewfinder.proto.DayMetadataPB.FilteredEpisode.Builder builderForValue) {
        if (episodesBuilder_ == null) {
          ensureEpisodesIsMutable();
          episodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          episodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FilteredEpisode episodes = 4;</code>
       *
       * <pre>
       * Sorted by timestamp of least recent photo in the episode.
       * </pre>
       */
      public Builder addEpisodes(co.viewfinder.proto.DayMetadataPB.FilteredEpisode value) {
        if (episodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEpisodesIsMutable();
          episodes_.add(value);
          onChanged();
        } else {
          episodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .FilteredEpisode episodes = 4;</code>
       *
       * <pre>
       * Sorted by timestamp of least recent photo in the episode.
       * </pre>
       */
      public Builder addEpisodes(
          int index, co.viewfinder.proto.DayMetadataPB.FilteredEpisode value) {
        if (episodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEpisodesIsMutable();
          episodes_.add(index, value);
          onChanged();
        } else {
          episodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .FilteredEpisode episodes = 4;</code>
       *
       * <pre>
       * Sorted by timestamp of least recent photo in the episode.
       * </pre>
       */
      public Builder addEpisodes(
          co.viewfinder.proto.DayMetadataPB.FilteredEpisode.Builder builderForValue) {
        if (episodesBuilder_ == null) {
          ensureEpisodesIsMutable();
          episodes_.add(builderForValue.build());
          onChanged();
        } else {
          episodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FilteredEpisode episodes = 4;</code>
       *
       * <pre>
       * Sorted by timestamp of least recent photo in the episode.
       * </pre>
       */
      public Builder addEpisodes(
          int index, co.viewfinder.proto.DayMetadataPB.FilteredEpisode.Builder builderForValue) {
        if (episodesBuilder_ == null) {
          ensureEpisodesIsMutable();
          episodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          episodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FilteredEpisode episodes = 4;</code>
       *
       * <pre>
       * Sorted by timestamp of least recent photo in the episode.
       * </pre>
       */
      public Builder addAllEpisodes(
          java.lang.Iterable<? extends co.viewfinder.proto.DayMetadataPB.FilteredEpisode> values) {
        if (episodesBuilder_ == null) {
          ensureEpisodesIsMutable();
          super.addAll(values, episodes_);
          onChanged();
        } else {
          episodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .FilteredEpisode episodes = 4;</code>
       *
       * <pre>
       * Sorted by timestamp of least recent photo in the episode.
       * </pre>
       */
      public Builder clearEpisodes() {
        if (episodesBuilder_ == null) {
          episodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          episodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .FilteredEpisode episodes = 4;</code>
       *
       * <pre>
       * Sorted by timestamp of least recent photo in the episode.
       * </pre>
       */
      public Builder removeEpisodes(int index) {
        if (episodesBuilder_ == null) {
          ensureEpisodesIsMutable();
          episodes_.remove(index);
          onChanged();
        } else {
          episodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .FilteredEpisode episodes = 4;</code>
       *
       * <pre>
       * Sorted by timestamp of least recent photo in the episode.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.FilteredEpisode.Builder getEpisodesBuilder(
          int index) {
        return getEpisodesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .FilteredEpisode episodes = 4;</code>
       *
       * <pre>
       * Sorted by timestamp of least recent photo in the episode.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.FilteredEpisodeOrBuilder getEpisodesOrBuilder(
          int index) {
        if (episodesBuilder_ == null) {
          return episodes_.get(index);  } else {
          return episodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .FilteredEpisode episodes = 4;</code>
       *
       * <pre>
       * Sorted by timestamp of least recent photo in the episode.
       * </pre>
       */
      public java.util.List<? extends co.viewfinder.proto.DayMetadataPB.FilteredEpisodeOrBuilder> 
           getEpisodesOrBuilderList() {
        if (episodesBuilder_ != null) {
          return episodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(episodes_);
        }
      }
      /**
       * <code>repeated .FilteredEpisode episodes = 4;</code>
       *
       * <pre>
       * Sorted by timestamp of least recent photo in the episode.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.FilteredEpisode.Builder addEpisodesBuilder() {
        return getEpisodesFieldBuilder().addBuilder(
            co.viewfinder.proto.DayMetadataPB.FilteredEpisode.getDefaultInstance());
      }
      /**
       * <code>repeated .FilteredEpisode episodes = 4;</code>
       *
       * <pre>
       * Sorted by timestamp of least recent photo in the episode.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.FilteredEpisode.Builder addEpisodesBuilder(
          int index) {
        return getEpisodesFieldBuilder().addBuilder(
            index, co.viewfinder.proto.DayMetadataPB.FilteredEpisode.getDefaultInstance());
      }
      /**
       * <code>repeated .FilteredEpisode episodes = 4;</code>
       *
       * <pre>
       * Sorted by timestamp of least recent photo in the episode.
       * </pre>
       */
      public java.util.List<co.viewfinder.proto.DayMetadataPB.FilteredEpisode.Builder> 
           getEpisodesBuilderList() {
        return getEpisodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.FilteredEpisode, co.viewfinder.proto.DayMetadataPB.FilteredEpisode.Builder, co.viewfinder.proto.DayMetadataPB.FilteredEpisodeOrBuilder> 
          getEpisodesFieldBuilder() {
        if (episodesBuilder_ == null) {
          episodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              co.viewfinder.proto.DayMetadataPB.FilteredEpisode, co.viewfinder.proto.DayMetadataPB.FilteredEpisode.Builder, co.viewfinder.proto.DayMetadataPB.FilteredEpisodeOrBuilder>(
                  episodes_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          episodes_ = null;
        }
        return episodesBuilder_;
      }

      // repeated .DayContributor contributors = 5;
      private java.util.List<co.viewfinder.proto.DayMetadataPB.DayContributor> contributors_ =
        java.util.Collections.emptyList();
      private void ensureContributorsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          contributors_ = new java.util.ArrayList<co.viewfinder.proto.DayMetadataPB.DayContributor>(contributors_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.DayContributor, co.viewfinder.proto.DayMetadataPB.DayContributor.Builder, co.viewfinder.proto.DayMetadataPB.DayContributorOrBuilder> contributorsBuilder_;

      /**
       * <code>repeated .DayContributor contributors = 5;</code>
       *
       * <pre>
       * Sorted by number of photos contributed.
       * </pre>
       */
      public java.util.List<co.viewfinder.proto.DayMetadataPB.DayContributor> getContributorsList() {
        if (contributorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(contributors_);
        } else {
          return contributorsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .DayContributor contributors = 5;</code>
       *
       * <pre>
       * Sorted by number of photos contributed.
       * </pre>
       */
      public int getContributorsCount() {
        if (contributorsBuilder_ == null) {
          return contributors_.size();
        } else {
          return contributorsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .DayContributor contributors = 5;</code>
       *
       * <pre>
       * Sorted by number of photos contributed.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.DayContributor getContributors(int index) {
        if (contributorsBuilder_ == null) {
          return contributors_.get(index);
        } else {
          return contributorsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .DayContributor contributors = 5;</code>
       *
       * <pre>
       * Sorted by number of photos contributed.
       * </pre>
       */
      public Builder setContributors(
          int index, co.viewfinder.proto.DayMetadataPB.DayContributor value) {
        if (contributorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContributorsIsMutable();
          contributors_.set(index, value);
          onChanged();
        } else {
          contributorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DayContributor contributors = 5;</code>
       *
       * <pre>
       * Sorted by number of photos contributed.
       * </pre>
       */
      public Builder setContributors(
          int index, co.viewfinder.proto.DayMetadataPB.DayContributor.Builder builderForValue) {
        if (contributorsBuilder_ == null) {
          ensureContributorsIsMutable();
          contributors_.set(index, builderForValue.build());
          onChanged();
        } else {
          contributorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DayContributor contributors = 5;</code>
       *
       * <pre>
       * Sorted by number of photos contributed.
       * </pre>
       */
      public Builder addContributors(co.viewfinder.proto.DayMetadataPB.DayContributor value) {
        if (contributorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContributorsIsMutable();
          contributors_.add(value);
          onChanged();
        } else {
          contributorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .DayContributor contributors = 5;</code>
       *
       * <pre>
       * Sorted by number of photos contributed.
       * </pre>
       */
      public Builder addContributors(
          int index, co.viewfinder.proto.DayMetadataPB.DayContributor value) {
        if (contributorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContributorsIsMutable();
          contributors_.add(index, value);
          onChanged();
        } else {
          contributorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DayContributor contributors = 5;</code>
       *
       * <pre>
       * Sorted by number of photos contributed.
       * </pre>
       */
      public Builder addContributors(
          co.viewfinder.proto.DayMetadataPB.DayContributor.Builder builderForValue) {
        if (contributorsBuilder_ == null) {
          ensureContributorsIsMutable();
          contributors_.add(builderForValue.build());
          onChanged();
        } else {
          contributorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DayContributor contributors = 5;</code>
       *
       * <pre>
       * Sorted by number of photos contributed.
       * </pre>
       */
      public Builder addContributors(
          int index, co.viewfinder.proto.DayMetadataPB.DayContributor.Builder builderForValue) {
        if (contributorsBuilder_ == null) {
          ensureContributorsIsMutable();
          contributors_.add(index, builderForValue.build());
          onChanged();
        } else {
          contributorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DayContributor contributors = 5;</code>
       *
       * <pre>
       * Sorted by number of photos contributed.
       * </pre>
       */
      public Builder addAllContributors(
          java.lang.Iterable<? extends co.viewfinder.proto.DayMetadataPB.DayContributor> values) {
        if (contributorsBuilder_ == null) {
          ensureContributorsIsMutable();
          super.addAll(values, contributors_);
          onChanged();
        } else {
          contributorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .DayContributor contributors = 5;</code>
       *
       * <pre>
       * Sorted by number of photos contributed.
       * </pre>
       */
      public Builder clearContributors() {
        if (contributorsBuilder_ == null) {
          contributors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          contributorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .DayContributor contributors = 5;</code>
       *
       * <pre>
       * Sorted by number of photos contributed.
       * </pre>
       */
      public Builder removeContributors(int index) {
        if (contributorsBuilder_ == null) {
          ensureContributorsIsMutable();
          contributors_.remove(index);
          onChanged();
        } else {
          contributorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .DayContributor contributors = 5;</code>
       *
       * <pre>
       * Sorted by number of photos contributed.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.DayContributor.Builder getContributorsBuilder(
          int index) {
        return getContributorsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .DayContributor contributors = 5;</code>
       *
       * <pre>
       * Sorted by number of photos contributed.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.DayContributorOrBuilder getContributorsOrBuilder(
          int index) {
        if (contributorsBuilder_ == null) {
          return contributors_.get(index);  } else {
          return contributorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .DayContributor contributors = 5;</code>
       *
       * <pre>
       * Sorted by number of photos contributed.
       * </pre>
       */
      public java.util.List<? extends co.viewfinder.proto.DayMetadataPB.DayContributorOrBuilder> 
           getContributorsOrBuilderList() {
        if (contributorsBuilder_ != null) {
          return contributorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(contributors_);
        }
      }
      /**
       * <code>repeated .DayContributor contributors = 5;</code>
       *
       * <pre>
       * Sorted by number of photos contributed.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.DayContributor.Builder addContributorsBuilder() {
        return getContributorsFieldBuilder().addBuilder(
            co.viewfinder.proto.DayMetadataPB.DayContributor.getDefaultInstance());
      }
      /**
       * <code>repeated .DayContributor contributors = 5;</code>
       *
       * <pre>
       * Sorted by number of photos contributed.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.DayContributor.Builder addContributorsBuilder(
          int index) {
        return getContributorsFieldBuilder().addBuilder(
            index, co.viewfinder.proto.DayMetadataPB.DayContributor.getDefaultInstance());
      }
      /**
       * <code>repeated .DayContributor contributors = 5;</code>
       *
       * <pre>
       * Sorted by number of photos contributed.
       * </pre>
       */
      public java.util.List<co.viewfinder.proto.DayMetadataPB.DayContributor.Builder> 
           getContributorsBuilderList() {
        return getContributorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.DayContributor, co.viewfinder.proto.DayMetadataPB.DayContributor.Builder, co.viewfinder.proto.DayMetadataPB.DayContributorOrBuilder> 
          getContributorsFieldBuilder() {
        if (contributorsBuilder_ == null) {
          contributorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              co.viewfinder.proto.DayMetadataPB.DayContributor, co.viewfinder.proto.DayMetadataPB.DayContributor.Builder, co.viewfinder.proto.DayMetadataPB.DayContributorOrBuilder>(
                  contributors_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          contributors_ = null;
        }
        return contributorsBuilder_;
      }

      // optional .Location location = 6;
      private co.viewfinder.proto.LocationPB.Location location_ = co.viewfinder.proto.LocationPB.Location.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          co.viewfinder.proto.LocationPB.Location, co.viewfinder.proto.LocationPB.Location.Builder, co.viewfinder.proto.LocationPB.LocationOrBuilder> locationBuilder_;
      /**
       * <code>optional .Location location = 6;</code>
       *
       * <pre>
       * Canonical location matching centroid of all episodes.
       * </pre>
       */
      public boolean hasLocation() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .Location location = 6;</code>
       *
       * <pre>
       * Canonical location matching centroid of all episodes.
       * </pre>
       */
      public co.viewfinder.proto.LocationPB.Location getLocation() {
        if (locationBuilder_ == null) {
          return location_;
        } else {
          return locationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Location location = 6;</code>
       *
       * <pre>
       * Canonical location matching centroid of all episodes.
       * </pre>
       */
      public Builder setLocation(co.viewfinder.proto.LocationPB.Location value) {
        if (locationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          location_ = value;
          onChanged();
        } else {
          locationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .Location location = 6;</code>
       *
       * <pre>
       * Canonical location matching centroid of all episodes.
       * </pre>
       */
      public Builder setLocation(
          co.viewfinder.proto.LocationPB.Location.Builder builderForValue) {
        if (locationBuilder_ == null) {
          location_ = builderForValue.build();
          onChanged();
        } else {
          locationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .Location location = 6;</code>
       *
       * <pre>
       * Canonical location matching centroid of all episodes.
       * </pre>
       */
      public Builder mergeLocation(co.viewfinder.proto.LocationPB.Location value) {
        if (locationBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              location_ != co.viewfinder.proto.LocationPB.Location.getDefaultInstance()) {
            location_ =
              co.viewfinder.proto.LocationPB.Location.newBuilder(location_).mergeFrom(value).buildPartial();
          } else {
            location_ = value;
          }
          onChanged();
        } else {
          locationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .Location location = 6;</code>
       *
       * <pre>
       * Canonical location matching centroid of all episodes.
       * </pre>
       */
      public Builder clearLocation() {
        if (locationBuilder_ == null) {
          location_ = co.viewfinder.proto.LocationPB.Location.getDefaultInstance();
          onChanged();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .Location location = 6;</code>
       *
       * <pre>
       * Canonical location matching centroid of all episodes.
       * </pre>
       */
      public co.viewfinder.proto.LocationPB.Location.Builder getLocationBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getLocationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Location location = 6;</code>
       *
       * <pre>
       * Canonical location matching centroid of all episodes.
       * </pre>
       */
      public co.viewfinder.proto.LocationPB.LocationOrBuilder getLocationOrBuilder() {
        if (locationBuilder_ != null) {
          return locationBuilder_.getMessageOrBuilder();
        } else {
          return location_;
        }
      }
      /**
       * <code>optional .Location location = 6;</code>
       *
       * <pre>
       * Canonical location matching centroid of all episodes.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          co.viewfinder.proto.LocationPB.Location, co.viewfinder.proto.LocationPB.Location.Builder, co.viewfinder.proto.LocationPB.LocationOrBuilder> 
          getLocationFieldBuilder() {
        if (locationBuilder_ == null) {
          locationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              co.viewfinder.proto.LocationPB.Location, co.viewfinder.proto.LocationPB.Location.Builder, co.viewfinder.proto.LocationPB.LocationOrBuilder>(
                  location_,
                  getParentForChildren(),
                  isClean());
          location_ = null;
        }
        return locationBuilder_;
      }

      // optional .Placemark placemark = 7;
      private co.viewfinder.proto.PlacemarkPB.Placemark placemark_ = co.viewfinder.proto.PlacemarkPB.Placemark.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          co.viewfinder.proto.PlacemarkPB.Placemark, co.viewfinder.proto.PlacemarkPB.Placemark.Builder, co.viewfinder.proto.PlacemarkPB.PlacemarkOrBuilder> placemarkBuilder_;
      /**
       * <code>optional .Placemark placemark = 7;</code>
       *
       * <pre>
       * Canonical placemark matching location.
       * </pre>
       */
      public boolean hasPlacemark() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .Placemark placemark = 7;</code>
       *
       * <pre>
       * Canonical placemark matching location.
       * </pre>
       */
      public co.viewfinder.proto.PlacemarkPB.Placemark getPlacemark() {
        if (placemarkBuilder_ == null) {
          return placemark_;
        } else {
          return placemarkBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Placemark placemark = 7;</code>
       *
       * <pre>
       * Canonical placemark matching location.
       * </pre>
       */
      public Builder setPlacemark(co.viewfinder.proto.PlacemarkPB.Placemark value) {
        if (placemarkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          placemark_ = value;
          onChanged();
        } else {
          placemarkBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .Placemark placemark = 7;</code>
       *
       * <pre>
       * Canonical placemark matching location.
       * </pre>
       */
      public Builder setPlacemark(
          co.viewfinder.proto.PlacemarkPB.Placemark.Builder builderForValue) {
        if (placemarkBuilder_ == null) {
          placemark_ = builderForValue.build();
          onChanged();
        } else {
          placemarkBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .Placemark placemark = 7;</code>
       *
       * <pre>
       * Canonical placemark matching location.
       * </pre>
       */
      public Builder mergePlacemark(co.viewfinder.proto.PlacemarkPB.Placemark value) {
        if (placemarkBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              placemark_ != co.viewfinder.proto.PlacemarkPB.Placemark.getDefaultInstance()) {
            placemark_ =
              co.viewfinder.proto.PlacemarkPB.Placemark.newBuilder(placemark_).mergeFrom(value).buildPartial();
          } else {
            placemark_ = value;
          }
          onChanged();
        } else {
          placemarkBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .Placemark placemark = 7;</code>
       *
       * <pre>
       * Canonical placemark matching location.
       * </pre>
       */
      public Builder clearPlacemark() {
        if (placemarkBuilder_ == null) {
          placemark_ = co.viewfinder.proto.PlacemarkPB.Placemark.getDefaultInstance();
          onChanged();
        } else {
          placemarkBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .Placemark placemark = 7;</code>
       *
       * <pre>
       * Canonical placemark matching location.
       * </pre>
       */
      public co.viewfinder.proto.PlacemarkPB.Placemark.Builder getPlacemarkBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getPlacemarkFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Placemark placemark = 7;</code>
       *
       * <pre>
       * Canonical placemark matching location.
       * </pre>
       */
      public co.viewfinder.proto.PlacemarkPB.PlacemarkOrBuilder getPlacemarkOrBuilder() {
        if (placemarkBuilder_ != null) {
          return placemarkBuilder_.getMessageOrBuilder();
        } else {
          return placemark_;
        }
      }
      /**
       * <code>optional .Placemark placemark = 7;</code>
       *
       * <pre>
       * Canonical placemark matching location.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          co.viewfinder.proto.PlacemarkPB.Placemark, co.viewfinder.proto.PlacemarkPB.Placemark.Builder, co.viewfinder.proto.PlacemarkPB.PlacemarkOrBuilder> 
          getPlacemarkFieldBuilder() {
        if (placemarkBuilder_ == null) {
          placemarkBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              co.viewfinder.proto.PlacemarkPB.Placemark, co.viewfinder.proto.PlacemarkPB.Placemark.Builder, co.viewfinder.proto.PlacemarkPB.PlacemarkOrBuilder>(
                  placemark_,
                  getParentForChildren(),
                  isClean());
          placemark_ = null;
        }
        return placemarkBuilder_;
      }

      // optional double distance = 8;
      private double distance_ ;
      /**
       * <code>optional double distance = 8;</code>
       *
       * <pre>
       * Distance from location to closest "top" location.
       * </pre>
       */
      public boolean hasDistance() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional double distance = 8;</code>
       *
       * <pre>
       * Distance from location to closest "top" location.
       * </pre>
       */
      public double getDistance() {
        return distance_;
      }
      /**
       * <code>optional double distance = 8;</code>
       *
       * <pre>
       * Distance from location to closest "top" location.
       * </pre>
       */
      public Builder setDistance(double value) {
        bitField0_ |= 0x00000080;
        distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double distance = 8;</code>
       *
       * <pre>
       * Distance from location to closest "top" location.
       * </pre>
       */
      public Builder clearDistance() {
        bitField0_ = (bitField0_ & ~0x00000080);
        distance_ = 0D;
        onChanged();
        return this;
      }

      // repeated .TrapdoorMetadata trapdoors = 9;
      private java.util.List<co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata> trapdoors_ =
        java.util.Collections.emptyList();
      private void ensureTrapdoorsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          trapdoors_ = new java.util.ArrayList<co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata>(trapdoors_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata, co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Builder, co.viewfinder.proto.DayMetadataPB.TrapdoorMetadataOrBuilder> trapdoorsBuilder_;

      /**
       * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
       *
       * <pre>
       * "EVENT" trapdoors into viewpoints.
       * </pre>
       */
      public java.util.List<co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata> getTrapdoorsList() {
        if (trapdoorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(trapdoors_);
        } else {
          return trapdoorsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
       *
       * <pre>
       * "EVENT" trapdoors into viewpoints.
       * </pre>
       */
      public int getTrapdoorsCount() {
        if (trapdoorsBuilder_ == null) {
          return trapdoors_.size();
        } else {
          return trapdoorsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
       *
       * <pre>
       * "EVENT" trapdoors into viewpoints.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata getTrapdoors(int index) {
        if (trapdoorsBuilder_ == null) {
          return trapdoors_.get(index);
        } else {
          return trapdoorsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
       *
       * <pre>
       * "EVENT" trapdoors into viewpoints.
       * </pre>
       */
      public Builder setTrapdoors(
          int index, co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata value) {
        if (trapdoorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTrapdoorsIsMutable();
          trapdoors_.set(index, value);
          onChanged();
        } else {
          trapdoorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
       *
       * <pre>
       * "EVENT" trapdoors into viewpoints.
       * </pre>
       */
      public Builder setTrapdoors(
          int index, co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Builder builderForValue) {
        if (trapdoorsBuilder_ == null) {
          ensureTrapdoorsIsMutable();
          trapdoors_.set(index, builderForValue.build());
          onChanged();
        } else {
          trapdoorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
       *
       * <pre>
       * "EVENT" trapdoors into viewpoints.
       * </pre>
       */
      public Builder addTrapdoors(co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata value) {
        if (trapdoorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTrapdoorsIsMutable();
          trapdoors_.add(value);
          onChanged();
        } else {
          trapdoorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
       *
       * <pre>
       * "EVENT" trapdoors into viewpoints.
       * </pre>
       */
      public Builder addTrapdoors(
          int index, co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata value) {
        if (trapdoorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTrapdoorsIsMutable();
          trapdoors_.add(index, value);
          onChanged();
        } else {
          trapdoorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
       *
       * <pre>
       * "EVENT" trapdoors into viewpoints.
       * </pre>
       */
      public Builder addTrapdoors(
          co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Builder builderForValue) {
        if (trapdoorsBuilder_ == null) {
          ensureTrapdoorsIsMutable();
          trapdoors_.add(builderForValue.build());
          onChanged();
        } else {
          trapdoorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
       *
       * <pre>
       * "EVENT" trapdoors into viewpoints.
       * </pre>
       */
      public Builder addTrapdoors(
          int index, co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Builder builderForValue) {
        if (trapdoorsBuilder_ == null) {
          ensureTrapdoorsIsMutable();
          trapdoors_.add(index, builderForValue.build());
          onChanged();
        } else {
          trapdoorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
       *
       * <pre>
       * "EVENT" trapdoors into viewpoints.
       * </pre>
       */
      public Builder addAllTrapdoors(
          java.lang.Iterable<? extends co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata> values) {
        if (trapdoorsBuilder_ == null) {
          ensureTrapdoorsIsMutable();
          super.addAll(values, trapdoors_);
          onChanged();
        } else {
          trapdoorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
       *
       * <pre>
       * "EVENT" trapdoors into viewpoints.
       * </pre>
       */
      public Builder clearTrapdoors() {
        if (trapdoorsBuilder_ == null) {
          trapdoors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          trapdoorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
       *
       * <pre>
       * "EVENT" trapdoors into viewpoints.
       * </pre>
       */
      public Builder removeTrapdoors(int index) {
        if (trapdoorsBuilder_ == null) {
          ensureTrapdoorsIsMutable();
          trapdoors_.remove(index);
          onChanged();
        } else {
          trapdoorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
       *
       * <pre>
       * "EVENT" trapdoors into viewpoints.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Builder getTrapdoorsBuilder(
          int index) {
        return getTrapdoorsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
       *
       * <pre>
       * "EVENT" trapdoors into viewpoints.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.TrapdoorMetadataOrBuilder getTrapdoorsOrBuilder(
          int index) {
        if (trapdoorsBuilder_ == null) {
          return trapdoors_.get(index);  } else {
          return trapdoorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
       *
       * <pre>
       * "EVENT" trapdoors into viewpoints.
       * </pre>
       */
      public java.util.List<? extends co.viewfinder.proto.DayMetadataPB.TrapdoorMetadataOrBuilder> 
           getTrapdoorsOrBuilderList() {
        if (trapdoorsBuilder_ != null) {
          return trapdoorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(trapdoors_);
        }
      }
      /**
       * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
       *
       * <pre>
       * "EVENT" trapdoors into viewpoints.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Builder addTrapdoorsBuilder() {
        return getTrapdoorsFieldBuilder().addBuilder(
            co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.getDefaultInstance());
      }
      /**
       * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
       *
       * <pre>
       * "EVENT" trapdoors into viewpoints.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Builder addTrapdoorsBuilder(
          int index) {
        return getTrapdoorsFieldBuilder().addBuilder(
            index, co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.getDefaultInstance());
      }
      /**
       * <code>repeated .TrapdoorMetadata trapdoors = 9;</code>
       *
       * <pre>
       * "EVENT" trapdoors into viewpoints.
       * </pre>
       */
      public java.util.List<co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Builder> 
           getTrapdoorsBuilderList() {
        return getTrapdoorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata, co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Builder, co.viewfinder.proto.DayMetadataPB.TrapdoorMetadataOrBuilder> 
          getTrapdoorsFieldBuilder() {
        if (trapdoorsBuilder_ == null) {
          trapdoorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata, co.viewfinder.proto.DayMetadataPB.TrapdoorMetadata.Builder, co.viewfinder.proto.DayMetadataPB.TrapdoorMetadataOrBuilder>(
                  trapdoors_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          trapdoors_ = null;
        }
        return trapdoorsBuilder_;
      }

      // optional string title = 10;
      private java.lang.Object title_ = "";
      /**
       * <code>optional string title = 10;</code>
       *
       * <pre>
       * Title if the event has trapdoors to viewpoints.
       * </pre>
       */
      public boolean hasTitle() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string title = 10;</code>
       *
       * <pre>
       * Title if the event has trapdoors to viewpoints.
       * </pre>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string title = 10;</code>
       *
       * <pre>
       * Title if the event has trapdoors to viewpoints.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string title = 10;</code>
       *
       * <pre>
       * Title if the event has trapdoors to viewpoints.
       * </pre>
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 10;</code>
       *
       * <pre>
       * Title if the event has trapdoors to viewpoints.
       * </pre>
       */
      public Builder clearTitle() {
        bitField0_ = (bitField0_ & ~0x00000200);
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 10;</code>
       *
       * <pre>
       * Title if the event has trapdoors to viewpoints.
       * </pre>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        title_ = value;
        onChanged();
        return this;
      }

      // optional string short_title = 11;
      private java.lang.Object shortTitle_ = "";
      /**
       * <code>optional string short_title = 11;</code>
       */
      public boolean hasShortTitle() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string short_title = 11;</code>
       */
      public java.lang.String getShortTitle() {
        java.lang.Object ref = shortTitle_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          shortTitle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string short_title = 11;</code>
       */
      public com.google.protobuf.ByteString
          getShortTitleBytes() {
        java.lang.Object ref = shortTitle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          shortTitle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string short_title = 11;</code>
       */
      public Builder setShortTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        shortTitle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string short_title = 11;</code>
       */
      public Builder clearShortTitle() {
        bitField0_ = (bitField0_ & ~0x00000400);
        shortTitle_ = getDefaultInstance().getShortTitle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string short_title = 11;</code>
       */
      public Builder setShortTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        shortTitle_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:EventMetadata)
    }

    static {
      defaultInstance = new EventMetadata(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:EventMetadata)
  }

  public interface CachedEpisodeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .EpisodeId id = 1;
    /**
     * <code>optional .EpisodeId id = 1;</code>
     *
     * <pre>
     * Episode metadata.
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional .EpisodeId id = 1;</code>
     *
     * <pre>
     * Episode metadata.
     * </pre>
     */
    co.viewfinder.proto.ContentIdsPB.EpisodeId getId();
    /**
     * <code>optional .EpisodeId id = 1;</code>
     *
     * <pre>
     * Episode metadata.
     * </pre>
     */
    co.viewfinder.proto.ContentIdsPB.EpisodeIdOrBuilder getIdOrBuilder();

    // optional .EpisodeId parent_id = 2;
    /**
     * <code>optional .EpisodeId parent_id = 2;</code>
     */
    boolean hasParentId();
    /**
     * <code>optional .EpisodeId parent_id = 2;</code>
     */
    co.viewfinder.proto.ContentIdsPB.EpisodeId getParentId();
    /**
     * <code>optional .EpisodeId parent_id = 2;</code>
     */
    co.viewfinder.proto.ContentIdsPB.EpisodeIdOrBuilder getParentIdOrBuilder();

    // optional .ViewpointId viewpoint_id = 3;
    /**
     * <code>optional .ViewpointId viewpoint_id = 3;</code>
     */
    boolean hasViewpointId();
    /**
     * <code>optional .ViewpointId viewpoint_id = 3;</code>
     */
    co.viewfinder.proto.ContentIdsPB.ViewpointId getViewpointId();
    /**
     * <code>optional .ViewpointId viewpoint_id = 3;</code>
     */
    co.viewfinder.proto.ContentIdsPB.ViewpointIdOrBuilder getViewpointIdOrBuilder();

    // optional int64 user_id = 4;
    /**
     * <code>optional int64 user_id = 4;</code>
     */
    boolean hasUserId();
    /**
     * <code>optional int64 user_id = 4;</code>
     */
    long getUserId();

    // optional double timestamp = 5;
    /**
     * <code>optional double timestamp = 5;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional double timestamp = 5;</code>
     */
    double getTimestamp();

    // optional .Location location = 6;
    /**
     * <code>optional .Location location = 6;</code>
     *
     * <pre>
     * Derived from constituent photos.
     * </pre>
     */
    boolean hasLocation();
    /**
     * <code>optional .Location location = 6;</code>
     *
     * <pre>
     * Derived from constituent photos.
     * </pre>
     */
    co.viewfinder.proto.LocationPB.Location getLocation();
    /**
     * <code>optional .Location location = 6;</code>
     *
     * <pre>
     * Derived from constituent photos.
     * </pre>
     */
    co.viewfinder.proto.LocationPB.LocationOrBuilder getLocationOrBuilder();

    // optional .Placemark placemark = 7;
    /**
     * <code>optional .Placemark placemark = 7;</code>
     */
    boolean hasPlacemark();
    /**
     * <code>optional .Placemark placemark = 7;</code>
     */
    co.viewfinder.proto.PlacemarkPB.Placemark getPlacemark();
    /**
     * <code>optional .Placemark placemark = 7;</code>
     */
    co.viewfinder.proto.PlacemarkPB.PlacemarkOrBuilder getPlacemarkOrBuilder();

    // optional double earliest_photo_timestamp = 8;
    /**
     * <code>optional double earliest_photo_timestamp = 8;</code>
     */
    boolean hasEarliestPhotoTimestamp();
    /**
     * <code>optional double earliest_photo_timestamp = 8;</code>
     */
    double getEarliestPhotoTimestamp();

    // optional double latest_photo_timestamp = 9;
    /**
     * <code>optional double latest_photo_timestamp = 9;</code>
     */
    boolean hasLatestPhotoTimestamp();
    /**
     * <code>optional double latest_photo_timestamp = 9;</code>
     */
    double getLatestPhotoTimestamp();

    // repeated .DayPhoto photos = 10;
    /**
     * <code>repeated .DayPhoto photos = 10;</code>
     */
    java.util.List<co.viewfinder.proto.DayMetadataPB.DayPhoto> 
        getPhotosList();
    /**
     * <code>repeated .DayPhoto photos = 10;</code>
     */
    co.viewfinder.proto.DayMetadataPB.DayPhoto getPhotos(int index);
    /**
     * <code>repeated .DayPhoto photos = 10;</code>
     */
    int getPhotosCount();
    /**
     * <code>repeated .DayPhoto photos = 10;</code>
     */
    java.util.List<? extends co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder> 
        getPhotosOrBuilderList();
    /**
     * <code>repeated .DayPhoto photos = 10;</code>
     */
    co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder getPhotosOrBuilder(
        int index);

    // optional bool in_library = 11;
    /**
     * <code>optional bool in_library = 11;</code>
     *
     * <pre>
     * Derived metadata.
     * </pre>
     */
    boolean hasInLibrary();
    /**
     * <code>optional bool in_library = 11;</code>
     *
     * <pre>
     * Derived metadata.
     * </pre>
     */
    boolean getInLibrary();
  }
  /**
   * Protobuf type {@code CachedEpisode}
   *
   * <pre>
   * CachedEpisode contains de-normalized episode metadata such as the
   * list of valid photo ids and location/placemark derived from
   * available photos. These are used to efficiently recompute events
   * without incurring the overhead of requerying episode data ad nauseum.
   * </pre>
   */
  public static final class CachedEpisode extends
      com.google.protobuf.GeneratedMessage
      implements CachedEpisodeOrBuilder {
    // Use CachedEpisode.newBuilder() to construct.
    private CachedEpisode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CachedEpisode(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CachedEpisode defaultInstance;
    public static CachedEpisode getDefaultInstance() {
      return defaultInstance;
    }

    public CachedEpisode getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CachedEpisode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              co.viewfinder.proto.ContentIdsPB.EpisodeId.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = id_.toBuilder();
              }
              id_ = input.readMessage(co.viewfinder.proto.ContentIdsPB.EpisodeId.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(id_);
                id_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              co.viewfinder.proto.ContentIdsPB.EpisodeId.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = parentId_.toBuilder();
              }
              parentId_ = input.readMessage(co.viewfinder.proto.ContentIdsPB.EpisodeId.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(parentId_);
                parentId_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              co.viewfinder.proto.ContentIdsPB.ViewpointId.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = viewpointId_.toBuilder();
              }
              viewpointId_ = input.readMessage(co.viewfinder.proto.ContentIdsPB.ViewpointId.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(viewpointId_);
                viewpointId_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              userId_ = input.readInt64();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              timestamp_ = input.readDouble();
              break;
            }
            case 50: {
              co.viewfinder.proto.LocationPB.Location.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = location_.toBuilder();
              }
              location_ = input.readMessage(co.viewfinder.proto.LocationPB.Location.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(location_);
                location_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              co.viewfinder.proto.PlacemarkPB.Placemark.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = placemark_.toBuilder();
              }
              placemark_ = input.readMessage(co.viewfinder.proto.PlacemarkPB.Placemark.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(placemark_);
                placemark_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              earliestPhotoTimestamp_ = input.readDouble();
              break;
            }
            case 73: {
              bitField0_ |= 0x00000100;
              latestPhotoTimestamp_ = input.readDouble();
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                photos_ = new java.util.ArrayList<co.viewfinder.proto.DayMetadataPB.DayPhoto>();
                mutable_bitField0_ |= 0x00000200;
              }
              photos_.add(input.readMessage(co.viewfinder.proto.DayMetadataPB.DayPhoto.PARSER, extensionRegistry));
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              inLibrary_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          photos_ = java.util.Collections.unmodifiableList(photos_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return co.viewfinder.proto.DayMetadataPB.internal_static_CachedEpisode_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return co.viewfinder.proto.DayMetadataPB.internal_static_CachedEpisode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              co.viewfinder.proto.DayMetadataPB.CachedEpisode.class, co.viewfinder.proto.DayMetadataPB.CachedEpisode.Builder.class);
    }

    public static com.google.protobuf.Parser<CachedEpisode> PARSER =
        new com.google.protobuf.AbstractParser<CachedEpisode>() {
      public CachedEpisode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CachedEpisode(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CachedEpisode> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .EpisodeId id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private co.viewfinder.proto.ContentIdsPB.EpisodeId id_;
    /**
     * <code>optional .EpisodeId id = 1;</code>
     *
     * <pre>
     * Episode metadata.
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .EpisodeId id = 1;</code>
     *
     * <pre>
     * Episode metadata.
     * </pre>
     */
    public co.viewfinder.proto.ContentIdsPB.EpisodeId getId() {
      return id_;
    }
    /**
     * <code>optional .EpisodeId id = 1;</code>
     *
     * <pre>
     * Episode metadata.
     * </pre>
     */
    public co.viewfinder.proto.ContentIdsPB.EpisodeIdOrBuilder getIdOrBuilder() {
      return id_;
    }

    // optional .EpisodeId parent_id = 2;
    public static final int PARENT_ID_FIELD_NUMBER = 2;
    private co.viewfinder.proto.ContentIdsPB.EpisodeId parentId_;
    /**
     * <code>optional .EpisodeId parent_id = 2;</code>
     */
    public boolean hasParentId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .EpisodeId parent_id = 2;</code>
     */
    public co.viewfinder.proto.ContentIdsPB.EpisodeId getParentId() {
      return parentId_;
    }
    /**
     * <code>optional .EpisodeId parent_id = 2;</code>
     */
    public co.viewfinder.proto.ContentIdsPB.EpisodeIdOrBuilder getParentIdOrBuilder() {
      return parentId_;
    }

    // optional .ViewpointId viewpoint_id = 3;
    public static final int VIEWPOINT_ID_FIELD_NUMBER = 3;
    private co.viewfinder.proto.ContentIdsPB.ViewpointId viewpointId_;
    /**
     * <code>optional .ViewpointId viewpoint_id = 3;</code>
     */
    public boolean hasViewpointId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .ViewpointId viewpoint_id = 3;</code>
     */
    public co.viewfinder.proto.ContentIdsPB.ViewpointId getViewpointId() {
      return viewpointId_;
    }
    /**
     * <code>optional .ViewpointId viewpoint_id = 3;</code>
     */
    public co.viewfinder.proto.ContentIdsPB.ViewpointIdOrBuilder getViewpointIdOrBuilder() {
      return viewpointId_;
    }

    // optional int64 user_id = 4;
    public static final int USER_ID_FIELD_NUMBER = 4;
    private long userId_;
    /**
     * <code>optional int64 user_id = 4;</code>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 user_id = 4;</code>
     */
    public long getUserId() {
      return userId_;
    }

    // optional double timestamp = 5;
    public static final int TIMESTAMP_FIELD_NUMBER = 5;
    private double timestamp_;
    /**
     * <code>optional double timestamp = 5;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional double timestamp = 5;</code>
     */
    public double getTimestamp() {
      return timestamp_;
    }

    // optional .Location location = 6;
    public static final int LOCATION_FIELD_NUMBER = 6;
    private co.viewfinder.proto.LocationPB.Location location_;
    /**
     * <code>optional .Location location = 6;</code>
     *
     * <pre>
     * Derived from constituent photos.
     * </pre>
     */
    public boolean hasLocation() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .Location location = 6;</code>
     *
     * <pre>
     * Derived from constituent photos.
     * </pre>
     */
    public co.viewfinder.proto.LocationPB.Location getLocation() {
      return location_;
    }
    /**
     * <code>optional .Location location = 6;</code>
     *
     * <pre>
     * Derived from constituent photos.
     * </pre>
     */
    public co.viewfinder.proto.LocationPB.LocationOrBuilder getLocationOrBuilder() {
      return location_;
    }

    // optional .Placemark placemark = 7;
    public static final int PLACEMARK_FIELD_NUMBER = 7;
    private co.viewfinder.proto.PlacemarkPB.Placemark placemark_;
    /**
     * <code>optional .Placemark placemark = 7;</code>
     */
    public boolean hasPlacemark() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .Placemark placemark = 7;</code>
     */
    public co.viewfinder.proto.PlacemarkPB.Placemark getPlacemark() {
      return placemark_;
    }
    /**
     * <code>optional .Placemark placemark = 7;</code>
     */
    public co.viewfinder.proto.PlacemarkPB.PlacemarkOrBuilder getPlacemarkOrBuilder() {
      return placemark_;
    }

    // optional double earliest_photo_timestamp = 8;
    public static final int EARLIEST_PHOTO_TIMESTAMP_FIELD_NUMBER = 8;
    private double earliestPhotoTimestamp_;
    /**
     * <code>optional double earliest_photo_timestamp = 8;</code>
     */
    public boolean hasEarliestPhotoTimestamp() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional double earliest_photo_timestamp = 8;</code>
     */
    public double getEarliestPhotoTimestamp() {
      return earliestPhotoTimestamp_;
    }

    // optional double latest_photo_timestamp = 9;
    public static final int LATEST_PHOTO_TIMESTAMP_FIELD_NUMBER = 9;
    private double latestPhotoTimestamp_;
    /**
     * <code>optional double latest_photo_timestamp = 9;</code>
     */
    public boolean hasLatestPhotoTimestamp() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional double latest_photo_timestamp = 9;</code>
     */
    public double getLatestPhotoTimestamp() {
      return latestPhotoTimestamp_;
    }

    // repeated .DayPhoto photos = 10;
    public static final int PHOTOS_FIELD_NUMBER = 10;
    private java.util.List<co.viewfinder.proto.DayMetadataPB.DayPhoto> photos_;
    /**
     * <code>repeated .DayPhoto photos = 10;</code>
     */
    public java.util.List<co.viewfinder.proto.DayMetadataPB.DayPhoto> getPhotosList() {
      return photos_;
    }
    /**
     * <code>repeated .DayPhoto photos = 10;</code>
     */
    public java.util.List<? extends co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder> 
        getPhotosOrBuilderList() {
      return photos_;
    }
    /**
     * <code>repeated .DayPhoto photos = 10;</code>
     */
    public int getPhotosCount() {
      return photos_.size();
    }
    /**
     * <code>repeated .DayPhoto photos = 10;</code>
     */
    public co.viewfinder.proto.DayMetadataPB.DayPhoto getPhotos(int index) {
      return photos_.get(index);
    }
    /**
     * <code>repeated .DayPhoto photos = 10;</code>
     */
    public co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder getPhotosOrBuilder(
        int index) {
      return photos_.get(index);
    }

    // optional bool in_library = 11;
    public static final int IN_LIBRARY_FIELD_NUMBER = 11;
    private boolean inLibrary_;
    /**
     * <code>optional bool in_library = 11;</code>
     *
     * <pre>
     * Derived metadata.
     * </pre>
     */
    public boolean hasInLibrary() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool in_library = 11;</code>
     *
     * <pre>
     * Derived metadata.
     * </pre>
     */
    public boolean getInLibrary() {
      return inLibrary_;
    }

    private void initFields() {
      id_ = co.viewfinder.proto.ContentIdsPB.EpisodeId.getDefaultInstance();
      parentId_ = co.viewfinder.proto.ContentIdsPB.EpisodeId.getDefaultInstance();
      viewpointId_ = co.viewfinder.proto.ContentIdsPB.ViewpointId.getDefaultInstance();
      userId_ = 0L;
      timestamp_ = 0D;
      location_ = co.viewfinder.proto.LocationPB.Location.getDefaultInstance();
      placemark_ = co.viewfinder.proto.PlacemarkPB.Placemark.getDefaultInstance();
      earliestPhotoTimestamp_ = 0D;
      latestPhotoTimestamp_ = 0D;
      photos_ = java.util.Collections.emptyList();
      inLibrary_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, parentId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, viewpointId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, userId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, timestamp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, location_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, placemark_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, earliestPhotoTimestamp_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeDouble(9, latestPhotoTimestamp_);
      }
      for (int i = 0; i < photos_.size(); i++) {
        output.writeMessage(10, photos_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(11, inLibrary_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, parentId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, viewpointId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, userId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, timestamp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, location_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, placemark_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, earliestPhotoTimestamp_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, latestPhotoTimestamp_);
      }
      for (int i = 0; i < photos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, photos_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, inLibrary_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static co.viewfinder.proto.DayMetadataPB.CachedEpisode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static co.viewfinder.proto.DayMetadataPB.CachedEpisode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.CachedEpisode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static co.viewfinder.proto.DayMetadataPB.CachedEpisode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.CachedEpisode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.CachedEpisode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.CachedEpisode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.CachedEpisode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.CachedEpisode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.CachedEpisode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(co.viewfinder.proto.DayMetadataPB.CachedEpisode prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CachedEpisode}
     *
     * <pre>
     * CachedEpisode contains de-normalized episode metadata such as the
     * list of valid photo ids and location/placemark derived from
     * available photos. These are used to efficiently recompute events
     * without incurring the overhead of requerying episode data ad nauseum.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements co.viewfinder.proto.DayMetadataPB.CachedEpisodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_CachedEpisode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_CachedEpisode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                co.viewfinder.proto.DayMetadataPB.CachedEpisode.class, co.viewfinder.proto.DayMetadataPB.CachedEpisode.Builder.class);
      }

      // Construct using co.viewfinder.proto.DayMetadataPB.CachedEpisode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getIdFieldBuilder();
          getParentIdFieldBuilder();
          getViewpointIdFieldBuilder();
          getLocationFieldBuilder();
          getPlacemarkFieldBuilder();
          getPhotosFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (idBuilder_ == null) {
          id_ = co.viewfinder.proto.ContentIdsPB.EpisodeId.getDefaultInstance();
        } else {
          idBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (parentIdBuilder_ == null) {
          parentId_ = co.viewfinder.proto.ContentIdsPB.EpisodeId.getDefaultInstance();
        } else {
          parentIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (viewpointIdBuilder_ == null) {
          viewpointId_ = co.viewfinder.proto.ContentIdsPB.ViewpointId.getDefaultInstance();
        } else {
          viewpointIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        userId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        timestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (locationBuilder_ == null) {
          location_ = co.viewfinder.proto.LocationPB.Location.getDefaultInstance();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (placemarkBuilder_ == null) {
          placemark_ = co.viewfinder.proto.PlacemarkPB.Placemark.getDefaultInstance();
        } else {
          placemarkBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        earliestPhotoTimestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        latestPhotoTimestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        if (photosBuilder_ == null) {
          photos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          photosBuilder_.clear();
        }
        inLibrary_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_CachedEpisode_descriptor;
      }

      public co.viewfinder.proto.DayMetadataPB.CachedEpisode getDefaultInstanceForType() {
        return co.viewfinder.proto.DayMetadataPB.CachedEpisode.getDefaultInstance();
      }

      public co.viewfinder.proto.DayMetadataPB.CachedEpisode build() {
        co.viewfinder.proto.DayMetadataPB.CachedEpisode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public co.viewfinder.proto.DayMetadataPB.CachedEpisode buildPartial() {
        co.viewfinder.proto.DayMetadataPB.CachedEpisode result = new co.viewfinder.proto.DayMetadataPB.CachedEpisode(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (idBuilder_ == null) {
          result.id_ = id_;
        } else {
          result.id_ = idBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (parentIdBuilder_ == null) {
          result.parentId_ = parentId_;
        } else {
          result.parentId_ = parentIdBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (viewpointIdBuilder_ == null) {
          result.viewpointId_ = viewpointId_;
        } else {
          result.viewpointId_ = viewpointIdBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (locationBuilder_ == null) {
          result.location_ = location_;
        } else {
          result.location_ = locationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (placemarkBuilder_ == null) {
          result.placemark_ = placemark_;
        } else {
          result.placemark_ = placemarkBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.earliestPhotoTimestamp_ = earliestPhotoTimestamp_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.latestPhotoTimestamp_ = latestPhotoTimestamp_;
        if (photosBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            photos_ = java.util.Collections.unmodifiableList(photos_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.photos_ = photos_;
        } else {
          result.photos_ = photosBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.inLibrary_ = inLibrary_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof co.viewfinder.proto.DayMetadataPB.CachedEpisode) {
          return mergeFrom((co.viewfinder.proto.DayMetadataPB.CachedEpisode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(co.viewfinder.proto.DayMetadataPB.CachedEpisode other) {
        if (other == co.viewfinder.proto.DayMetadataPB.CachedEpisode.getDefaultInstance()) return this;
        if (other.hasId()) {
          mergeId(other.getId());
        }
        if (other.hasParentId()) {
          mergeParentId(other.getParentId());
        }
        if (other.hasViewpointId()) {
          mergeViewpointId(other.getViewpointId());
        }
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasLocation()) {
          mergeLocation(other.getLocation());
        }
        if (other.hasPlacemark()) {
          mergePlacemark(other.getPlacemark());
        }
        if (other.hasEarliestPhotoTimestamp()) {
          setEarliestPhotoTimestamp(other.getEarliestPhotoTimestamp());
        }
        if (other.hasLatestPhotoTimestamp()) {
          setLatestPhotoTimestamp(other.getLatestPhotoTimestamp());
        }
        if (photosBuilder_ == null) {
          if (!other.photos_.isEmpty()) {
            if (photos_.isEmpty()) {
              photos_ = other.photos_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensurePhotosIsMutable();
              photos_.addAll(other.photos_);
            }
            onChanged();
          }
        } else {
          if (!other.photos_.isEmpty()) {
            if (photosBuilder_.isEmpty()) {
              photosBuilder_.dispose();
              photosBuilder_ = null;
              photos_ = other.photos_;
              bitField0_ = (bitField0_ & ~0x00000200);
              photosBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPhotosFieldBuilder() : null;
            } else {
              photosBuilder_.addAllMessages(other.photos_);
            }
          }
        }
        if (other.hasInLibrary()) {
          setInLibrary(other.getInLibrary());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        co.viewfinder.proto.DayMetadataPB.CachedEpisode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (co.viewfinder.proto.DayMetadataPB.CachedEpisode) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .EpisodeId id = 1;
      private co.viewfinder.proto.ContentIdsPB.EpisodeId id_ = co.viewfinder.proto.ContentIdsPB.EpisodeId.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          co.viewfinder.proto.ContentIdsPB.EpisodeId, co.viewfinder.proto.ContentIdsPB.EpisodeId.Builder, co.viewfinder.proto.ContentIdsPB.EpisodeIdOrBuilder> idBuilder_;
      /**
       * <code>optional .EpisodeId id = 1;</code>
       *
       * <pre>
       * Episode metadata.
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .EpisodeId id = 1;</code>
       *
       * <pre>
       * Episode metadata.
       * </pre>
       */
      public co.viewfinder.proto.ContentIdsPB.EpisodeId getId() {
        if (idBuilder_ == null) {
          return id_;
        } else {
          return idBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .EpisodeId id = 1;</code>
       *
       * <pre>
       * Episode metadata.
       * </pre>
       */
      public Builder setId(co.viewfinder.proto.ContentIdsPB.EpisodeId value) {
        if (idBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          id_ = value;
          onChanged();
        } else {
          idBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .EpisodeId id = 1;</code>
       *
       * <pre>
       * Episode metadata.
       * </pre>
       */
      public Builder setId(
          co.viewfinder.proto.ContentIdsPB.EpisodeId.Builder builderForValue) {
        if (idBuilder_ == null) {
          id_ = builderForValue.build();
          onChanged();
        } else {
          idBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .EpisodeId id = 1;</code>
       *
       * <pre>
       * Episode metadata.
       * </pre>
       */
      public Builder mergeId(co.viewfinder.proto.ContentIdsPB.EpisodeId value) {
        if (idBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              id_ != co.viewfinder.proto.ContentIdsPB.EpisodeId.getDefaultInstance()) {
            id_ =
              co.viewfinder.proto.ContentIdsPB.EpisodeId.newBuilder(id_).mergeFrom(value).buildPartial();
          } else {
            id_ = value;
          }
          onChanged();
        } else {
          idBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .EpisodeId id = 1;</code>
       *
       * <pre>
       * Episode metadata.
       * </pre>
       */
      public Builder clearId() {
        if (idBuilder_ == null) {
          id_ = co.viewfinder.proto.ContentIdsPB.EpisodeId.getDefaultInstance();
          onChanged();
        } else {
          idBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .EpisodeId id = 1;</code>
       *
       * <pre>
       * Episode metadata.
       * </pre>
       */
      public co.viewfinder.proto.ContentIdsPB.EpisodeId.Builder getIdBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .EpisodeId id = 1;</code>
       *
       * <pre>
       * Episode metadata.
       * </pre>
       */
      public co.viewfinder.proto.ContentIdsPB.EpisodeIdOrBuilder getIdOrBuilder() {
        if (idBuilder_ != null) {
          return idBuilder_.getMessageOrBuilder();
        } else {
          return id_;
        }
      }
      /**
       * <code>optional .EpisodeId id = 1;</code>
       *
       * <pre>
       * Episode metadata.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          co.viewfinder.proto.ContentIdsPB.EpisodeId, co.viewfinder.proto.ContentIdsPB.EpisodeId.Builder, co.viewfinder.proto.ContentIdsPB.EpisodeIdOrBuilder> 
          getIdFieldBuilder() {
        if (idBuilder_ == null) {
          idBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              co.viewfinder.proto.ContentIdsPB.EpisodeId, co.viewfinder.proto.ContentIdsPB.EpisodeId.Builder, co.viewfinder.proto.ContentIdsPB.EpisodeIdOrBuilder>(
                  id_,
                  getParentForChildren(),
                  isClean());
          id_ = null;
        }
        return idBuilder_;
      }

      // optional .EpisodeId parent_id = 2;
      private co.viewfinder.proto.ContentIdsPB.EpisodeId parentId_ = co.viewfinder.proto.ContentIdsPB.EpisodeId.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          co.viewfinder.proto.ContentIdsPB.EpisodeId, co.viewfinder.proto.ContentIdsPB.EpisodeId.Builder, co.viewfinder.proto.ContentIdsPB.EpisodeIdOrBuilder> parentIdBuilder_;
      /**
       * <code>optional .EpisodeId parent_id = 2;</code>
       */
      public boolean hasParentId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .EpisodeId parent_id = 2;</code>
       */
      public co.viewfinder.proto.ContentIdsPB.EpisodeId getParentId() {
        if (parentIdBuilder_ == null) {
          return parentId_;
        } else {
          return parentIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .EpisodeId parent_id = 2;</code>
       */
      public Builder setParentId(co.viewfinder.proto.ContentIdsPB.EpisodeId value) {
        if (parentIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          parentId_ = value;
          onChanged();
        } else {
          parentIdBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .EpisodeId parent_id = 2;</code>
       */
      public Builder setParentId(
          co.viewfinder.proto.ContentIdsPB.EpisodeId.Builder builderForValue) {
        if (parentIdBuilder_ == null) {
          parentId_ = builderForValue.build();
          onChanged();
        } else {
          parentIdBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .EpisodeId parent_id = 2;</code>
       */
      public Builder mergeParentId(co.viewfinder.proto.ContentIdsPB.EpisodeId value) {
        if (parentIdBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              parentId_ != co.viewfinder.proto.ContentIdsPB.EpisodeId.getDefaultInstance()) {
            parentId_ =
              co.viewfinder.proto.ContentIdsPB.EpisodeId.newBuilder(parentId_).mergeFrom(value).buildPartial();
          } else {
            parentId_ = value;
          }
          onChanged();
        } else {
          parentIdBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .EpisodeId parent_id = 2;</code>
       */
      public Builder clearParentId() {
        if (parentIdBuilder_ == null) {
          parentId_ = co.viewfinder.proto.ContentIdsPB.EpisodeId.getDefaultInstance();
          onChanged();
        } else {
          parentIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .EpisodeId parent_id = 2;</code>
       */
      public co.viewfinder.proto.ContentIdsPB.EpisodeId.Builder getParentIdBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getParentIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .EpisodeId parent_id = 2;</code>
       */
      public co.viewfinder.proto.ContentIdsPB.EpisodeIdOrBuilder getParentIdOrBuilder() {
        if (parentIdBuilder_ != null) {
          return parentIdBuilder_.getMessageOrBuilder();
        } else {
          return parentId_;
        }
      }
      /**
       * <code>optional .EpisodeId parent_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          co.viewfinder.proto.ContentIdsPB.EpisodeId, co.viewfinder.proto.ContentIdsPB.EpisodeId.Builder, co.viewfinder.proto.ContentIdsPB.EpisodeIdOrBuilder> 
          getParentIdFieldBuilder() {
        if (parentIdBuilder_ == null) {
          parentIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              co.viewfinder.proto.ContentIdsPB.EpisodeId, co.viewfinder.proto.ContentIdsPB.EpisodeId.Builder, co.viewfinder.proto.ContentIdsPB.EpisodeIdOrBuilder>(
                  parentId_,
                  getParentForChildren(),
                  isClean());
          parentId_ = null;
        }
        return parentIdBuilder_;
      }

      // optional .ViewpointId viewpoint_id = 3;
      private co.viewfinder.proto.ContentIdsPB.ViewpointId viewpointId_ = co.viewfinder.proto.ContentIdsPB.ViewpointId.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          co.viewfinder.proto.ContentIdsPB.ViewpointId, co.viewfinder.proto.ContentIdsPB.ViewpointId.Builder, co.viewfinder.proto.ContentIdsPB.ViewpointIdOrBuilder> viewpointIdBuilder_;
      /**
       * <code>optional .ViewpointId viewpoint_id = 3;</code>
       */
      public boolean hasViewpointId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .ViewpointId viewpoint_id = 3;</code>
       */
      public co.viewfinder.proto.ContentIdsPB.ViewpointId getViewpointId() {
        if (viewpointIdBuilder_ == null) {
          return viewpointId_;
        } else {
          return viewpointIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ViewpointId viewpoint_id = 3;</code>
       */
      public Builder setViewpointId(co.viewfinder.proto.ContentIdsPB.ViewpointId value) {
        if (viewpointIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          viewpointId_ = value;
          onChanged();
        } else {
          viewpointIdBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ViewpointId viewpoint_id = 3;</code>
       */
      public Builder setViewpointId(
          co.viewfinder.proto.ContentIdsPB.ViewpointId.Builder builderForValue) {
        if (viewpointIdBuilder_ == null) {
          viewpointId_ = builderForValue.build();
          onChanged();
        } else {
          viewpointIdBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ViewpointId viewpoint_id = 3;</code>
       */
      public Builder mergeViewpointId(co.viewfinder.proto.ContentIdsPB.ViewpointId value) {
        if (viewpointIdBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              viewpointId_ != co.viewfinder.proto.ContentIdsPB.ViewpointId.getDefaultInstance()) {
            viewpointId_ =
              co.viewfinder.proto.ContentIdsPB.ViewpointId.newBuilder(viewpointId_).mergeFrom(value).buildPartial();
          } else {
            viewpointId_ = value;
          }
          onChanged();
        } else {
          viewpointIdBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ViewpointId viewpoint_id = 3;</code>
       */
      public Builder clearViewpointId() {
        if (viewpointIdBuilder_ == null) {
          viewpointId_ = co.viewfinder.proto.ContentIdsPB.ViewpointId.getDefaultInstance();
          onChanged();
        } else {
          viewpointIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .ViewpointId viewpoint_id = 3;</code>
       */
      public co.viewfinder.proto.ContentIdsPB.ViewpointId.Builder getViewpointIdBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getViewpointIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ViewpointId viewpoint_id = 3;</code>
       */
      public co.viewfinder.proto.ContentIdsPB.ViewpointIdOrBuilder getViewpointIdOrBuilder() {
        if (viewpointIdBuilder_ != null) {
          return viewpointIdBuilder_.getMessageOrBuilder();
        } else {
          return viewpointId_;
        }
      }
      /**
       * <code>optional .ViewpointId viewpoint_id = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          co.viewfinder.proto.ContentIdsPB.ViewpointId, co.viewfinder.proto.ContentIdsPB.ViewpointId.Builder, co.viewfinder.proto.ContentIdsPB.ViewpointIdOrBuilder> 
          getViewpointIdFieldBuilder() {
        if (viewpointIdBuilder_ == null) {
          viewpointIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              co.viewfinder.proto.ContentIdsPB.ViewpointId, co.viewfinder.proto.ContentIdsPB.ViewpointId.Builder, co.viewfinder.proto.ContentIdsPB.ViewpointIdOrBuilder>(
                  viewpointId_,
                  getParentForChildren(),
                  isClean());
          viewpointId_ = null;
        }
        return viewpointIdBuilder_;
      }

      // optional int64 user_id = 4;
      private long userId_ ;
      /**
       * <code>optional int64 user_id = 4;</code>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 user_id = 4;</code>
       */
      public long getUserId() {
        return userId_;
      }
      /**
       * <code>optional int64 user_id = 4;</code>
       */
      public Builder setUserId(long value) {
        bitField0_ |= 0x00000008;
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 user_id = 4;</code>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        userId_ = 0L;
        onChanged();
        return this;
      }

      // optional double timestamp = 5;
      private double timestamp_ ;
      /**
       * <code>optional double timestamp = 5;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional double timestamp = 5;</code>
       */
      public double getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional double timestamp = 5;</code>
       */
      public Builder setTimestamp(double value) {
        bitField0_ |= 0x00000010;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double timestamp = 5;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        timestamp_ = 0D;
        onChanged();
        return this;
      }

      // optional .Location location = 6;
      private co.viewfinder.proto.LocationPB.Location location_ = co.viewfinder.proto.LocationPB.Location.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          co.viewfinder.proto.LocationPB.Location, co.viewfinder.proto.LocationPB.Location.Builder, co.viewfinder.proto.LocationPB.LocationOrBuilder> locationBuilder_;
      /**
       * <code>optional .Location location = 6;</code>
       *
       * <pre>
       * Derived from constituent photos.
       * </pre>
       */
      public boolean hasLocation() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .Location location = 6;</code>
       *
       * <pre>
       * Derived from constituent photos.
       * </pre>
       */
      public co.viewfinder.proto.LocationPB.Location getLocation() {
        if (locationBuilder_ == null) {
          return location_;
        } else {
          return locationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Location location = 6;</code>
       *
       * <pre>
       * Derived from constituent photos.
       * </pre>
       */
      public Builder setLocation(co.viewfinder.proto.LocationPB.Location value) {
        if (locationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          location_ = value;
          onChanged();
        } else {
          locationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .Location location = 6;</code>
       *
       * <pre>
       * Derived from constituent photos.
       * </pre>
       */
      public Builder setLocation(
          co.viewfinder.proto.LocationPB.Location.Builder builderForValue) {
        if (locationBuilder_ == null) {
          location_ = builderForValue.build();
          onChanged();
        } else {
          locationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .Location location = 6;</code>
       *
       * <pre>
       * Derived from constituent photos.
       * </pre>
       */
      public Builder mergeLocation(co.viewfinder.proto.LocationPB.Location value) {
        if (locationBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              location_ != co.viewfinder.proto.LocationPB.Location.getDefaultInstance()) {
            location_ =
              co.viewfinder.proto.LocationPB.Location.newBuilder(location_).mergeFrom(value).buildPartial();
          } else {
            location_ = value;
          }
          onChanged();
        } else {
          locationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .Location location = 6;</code>
       *
       * <pre>
       * Derived from constituent photos.
       * </pre>
       */
      public Builder clearLocation() {
        if (locationBuilder_ == null) {
          location_ = co.viewfinder.proto.LocationPB.Location.getDefaultInstance();
          onChanged();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .Location location = 6;</code>
       *
       * <pre>
       * Derived from constituent photos.
       * </pre>
       */
      public co.viewfinder.proto.LocationPB.Location.Builder getLocationBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getLocationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Location location = 6;</code>
       *
       * <pre>
       * Derived from constituent photos.
       * </pre>
       */
      public co.viewfinder.proto.LocationPB.LocationOrBuilder getLocationOrBuilder() {
        if (locationBuilder_ != null) {
          return locationBuilder_.getMessageOrBuilder();
        } else {
          return location_;
        }
      }
      /**
       * <code>optional .Location location = 6;</code>
       *
       * <pre>
       * Derived from constituent photos.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          co.viewfinder.proto.LocationPB.Location, co.viewfinder.proto.LocationPB.Location.Builder, co.viewfinder.proto.LocationPB.LocationOrBuilder> 
          getLocationFieldBuilder() {
        if (locationBuilder_ == null) {
          locationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              co.viewfinder.proto.LocationPB.Location, co.viewfinder.proto.LocationPB.Location.Builder, co.viewfinder.proto.LocationPB.LocationOrBuilder>(
                  location_,
                  getParentForChildren(),
                  isClean());
          location_ = null;
        }
        return locationBuilder_;
      }

      // optional .Placemark placemark = 7;
      private co.viewfinder.proto.PlacemarkPB.Placemark placemark_ = co.viewfinder.proto.PlacemarkPB.Placemark.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          co.viewfinder.proto.PlacemarkPB.Placemark, co.viewfinder.proto.PlacemarkPB.Placemark.Builder, co.viewfinder.proto.PlacemarkPB.PlacemarkOrBuilder> placemarkBuilder_;
      /**
       * <code>optional .Placemark placemark = 7;</code>
       */
      public boolean hasPlacemark() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .Placemark placemark = 7;</code>
       */
      public co.viewfinder.proto.PlacemarkPB.Placemark getPlacemark() {
        if (placemarkBuilder_ == null) {
          return placemark_;
        } else {
          return placemarkBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Placemark placemark = 7;</code>
       */
      public Builder setPlacemark(co.viewfinder.proto.PlacemarkPB.Placemark value) {
        if (placemarkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          placemark_ = value;
          onChanged();
        } else {
          placemarkBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .Placemark placemark = 7;</code>
       */
      public Builder setPlacemark(
          co.viewfinder.proto.PlacemarkPB.Placemark.Builder builderForValue) {
        if (placemarkBuilder_ == null) {
          placemark_ = builderForValue.build();
          onChanged();
        } else {
          placemarkBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .Placemark placemark = 7;</code>
       */
      public Builder mergePlacemark(co.viewfinder.proto.PlacemarkPB.Placemark value) {
        if (placemarkBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              placemark_ != co.viewfinder.proto.PlacemarkPB.Placemark.getDefaultInstance()) {
            placemark_ =
              co.viewfinder.proto.PlacemarkPB.Placemark.newBuilder(placemark_).mergeFrom(value).buildPartial();
          } else {
            placemark_ = value;
          }
          onChanged();
        } else {
          placemarkBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .Placemark placemark = 7;</code>
       */
      public Builder clearPlacemark() {
        if (placemarkBuilder_ == null) {
          placemark_ = co.viewfinder.proto.PlacemarkPB.Placemark.getDefaultInstance();
          onChanged();
        } else {
          placemarkBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .Placemark placemark = 7;</code>
       */
      public co.viewfinder.proto.PlacemarkPB.Placemark.Builder getPlacemarkBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getPlacemarkFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Placemark placemark = 7;</code>
       */
      public co.viewfinder.proto.PlacemarkPB.PlacemarkOrBuilder getPlacemarkOrBuilder() {
        if (placemarkBuilder_ != null) {
          return placemarkBuilder_.getMessageOrBuilder();
        } else {
          return placemark_;
        }
      }
      /**
       * <code>optional .Placemark placemark = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          co.viewfinder.proto.PlacemarkPB.Placemark, co.viewfinder.proto.PlacemarkPB.Placemark.Builder, co.viewfinder.proto.PlacemarkPB.PlacemarkOrBuilder> 
          getPlacemarkFieldBuilder() {
        if (placemarkBuilder_ == null) {
          placemarkBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              co.viewfinder.proto.PlacemarkPB.Placemark, co.viewfinder.proto.PlacemarkPB.Placemark.Builder, co.viewfinder.proto.PlacemarkPB.PlacemarkOrBuilder>(
                  placemark_,
                  getParentForChildren(),
                  isClean());
          placemark_ = null;
        }
        return placemarkBuilder_;
      }

      // optional double earliest_photo_timestamp = 8;
      private double earliestPhotoTimestamp_ ;
      /**
       * <code>optional double earliest_photo_timestamp = 8;</code>
       */
      public boolean hasEarliestPhotoTimestamp() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional double earliest_photo_timestamp = 8;</code>
       */
      public double getEarliestPhotoTimestamp() {
        return earliestPhotoTimestamp_;
      }
      /**
       * <code>optional double earliest_photo_timestamp = 8;</code>
       */
      public Builder setEarliestPhotoTimestamp(double value) {
        bitField0_ |= 0x00000080;
        earliestPhotoTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double earliest_photo_timestamp = 8;</code>
       */
      public Builder clearEarliestPhotoTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000080);
        earliestPhotoTimestamp_ = 0D;
        onChanged();
        return this;
      }

      // optional double latest_photo_timestamp = 9;
      private double latestPhotoTimestamp_ ;
      /**
       * <code>optional double latest_photo_timestamp = 9;</code>
       */
      public boolean hasLatestPhotoTimestamp() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional double latest_photo_timestamp = 9;</code>
       */
      public double getLatestPhotoTimestamp() {
        return latestPhotoTimestamp_;
      }
      /**
       * <code>optional double latest_photo_timestamp = 9;</code>
       */
      public Builder setLatestPhotoTimestamp(double value) {
        bitField0_ |= 0x00000100;
        latestPhotoTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double latest_photo_timestamp = 9;</code>
       */
      public Builder clearLatestPhotoTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000100);
        latestPhotoTimestamp_ = 0D;
        onChanged();
        return this;
      }

      // repeated .DayPhoto photos = 10;
      private java.util.List<co.viewfinder.proto.DayMetadataPB.DayPhoto> photos_ =
        java.util.Collections.emptyList();
      private void ensurePhotosIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          photos_ = new java.util.ArrayList<co.viewfinder.proto.DayMetadataPB.DayPhoto>(photos_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.DayPhoto, co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder, co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder> photosBuilder_;

      /**
       * <code>repeated .DayPhoto photos = 10;</code>
       */
      public java.util.List<co.viewfinder.proto.DayMetadataPB.DayPhoto> getPhotosList() {
        if (photosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(photos_);
        } else {
          return photosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .DayPhoto photos = 10;</code>
       */
      public int getPhotosCount() {
        if (photosBuilder_ == null) {
          return photos_.size();
        } else {
          return photosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .DayPhoto photos = 10;</code>
       */
      public co.viewfinder.proto.DayMetadataPB.DayPhoto getPhotos(int index) {
        if (photosBuilder_ == null) {
          return photos_.get(index);
        } else {
          return photosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .DayPhoto photos = 10;</code>
       */
      public Builder setPhotos(
          int index, co.viewfinder.proto.DayMetadataPB.DayPhoto value) {
        if (photosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhotosIsMutable();
          photos_.set(index, value);
          onChanged();
        } else {
          photosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DayPhoto photos = 10;</code>
       */
      public Builder setPhotos(
          int index, co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder builderForValue) {
        if (photosBuilder_ == null) {
          ensurePhotosIsMutable();
          photos_.set(index, builderForValue.build());
          onChanged();
        } else {
          photosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DayPhoto photos = 10;</code>
       */
      public Builder addPhotos(co.viewfinder.proto.DayMetadataPB.DayPhoto value) {
        if (photosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhotosIsMutable();
          photos_.add(value);
          onChanged();
        } else {
          photosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .DayPhoto photos = 10;</code>
       */
      public Builder addPhotos(
          int index, co.viewfinder.proto.DayMetadataPB.DayPhoto value) {
        if (photosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhotosIsMutable();
          photos_.add(index, value);
          onChanged();
        } else {
          photosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DayPhoto photos = 10;</code>
       */
      public Builder addPhotos(
          co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder builderForValue) {
        if (photosBuilder_ == null) {
          ensurePhotosIsMutable();
          photos_.add(builderForValue.build());
          onChanged();
        } else {
          photosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DayPhoto photos = 10;</code>
       */
      public Builder addPhotos(
          int index, co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder builderForValue) {
        if (photosBuilder_ == null) {
          ensurePhotosIsMutable();
          photos_.add(index, builderForValue.build());
          onChanged();
        } else {
          photosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DayPhoto photos = 10;</code>
       */
      public Builder addAllPhotos(
          java.lang.Iterable<? extends co.viewfinder.proto.DayMetadataPB.DayPhoto> values) {
        if (photosBuilder_ == null) {
          ensurePhotosIsMutable();
          super.addAll(values, photos_);
          onChanged();
        } else {
          photosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .DayPhoto photos = 10;</code>
       */
      public Builder clearPhotos() {
        if (photosBuilder_ == null) {
          photos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          photosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .DayPhoto photos = 10;</code>
       */
      public Builder removePhotos(int index) {
        if (photosBuilder_ == null) {
          ensurePhotosIsMutable();
          photos_.remove(index);
          onChanged();
        } else {
          photosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .DayPhoto photos = 10;</code>
       */
      public co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder getPhotosBuilder(
          int index) {
        return getPhotosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .DayPhoto photos = 10;</code>
       */
      public co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder getPhotosOrBuilder(
          int index) {
        if (photosBuilder_ == null) {
          return photos_.get(index);  } else {
          return photosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .DayPhoto photos = 10;</code>
       */
      public java.util.List<? extends co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder> 
           getPhotosOrBuilderList() {
        if (photosBuilder_ != null) {
          return photosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(photos_);
        }
      }
      /**
       * <code>repeated .DayPhoto photos = 10;</code>
       */
      public co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder addPhotosBuilder() {
        return getPhotosFieldBuilder().addBuilder(
            co.viewfinder.proto.DayMetadataPB.DayPhoto.getDefaultInstance());
      }
      /**
       * <code>repeated .DayPhoto photos = 10;</code>
       */
      public co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder addPhotosBuilder(
          int index) {
        return getPhotosFieldBuilder().addBuilder(
            index, co.viewfinder.proto.DayMetadataPB.DayPhoto.getDefaultInstance());
      }
      /**
       * <code>repeated .DayPhoto photos = 10;</code>
       */
      public java.util.List<co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder> 
           getPhotosBuilderList() {
        return getPhotosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.DayPhoto, co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder, co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder> 
          getPhotosFieldBuilder() {
        if (photosBuilder_ == null) {
          photosBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              co.viewfinder.proto.DayMetadataPB.DayPhoto, co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder, co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder>(
                  photos_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          photos_ = null;
        }
        return photosBuilder_;
      }

      // optional bool in_library = 11;
      private boolean inLibrary_ ;
      /**
       * <code>optional bool in_library = 11;</code>
       *
       * <pre>
       * Derived metadata.
       * </pre>
       */
      public boolean hasInLibrary() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool in_library = 11;</code>
       *
       * <pre>
       * Derived metadata.
       * </pre>
       */
      public boolean getInLibrary() {
        return inLibrary_;
      }
      /**
       * <code>optional bool in_library = 11;</code>
       *
       * <pre>
       * Derived metadata.
       * </pre>
       */
      public Builder setInLibrary(boolean value) {
        bitField0_ |= 0x00000400;
        inLibrary_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool in_library = 11;</code>
       *
       * <pre>
       * Derived metadata.
       * </pre>
       */
      public Builder clearInLibrary() {
        bitField0_ = (bitField0_ & ~0x00000400);
        inLibrary_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CachedEpisode)
    }

    static {
      defaultInstance = new CachedEpisode(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CachedEpisode)
  }

  public interface DayMetadataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional double timestamp = 1;
    /**
     * <code>optional double timestamp = 1;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional double timestamp = 1;</code>
     */
    double getTimestamp();

    // repeated .CachedEpisode episodes = 2;
    /**
     * <code>repeated .CachedEpisode episodes = 2;</code>
     *
     * <pre>
     * Episodes which occurred during this day. Used to compute
     * events.
     * </pre>
     */
    java.util.List<co.viewfinder.proto.DayMetadataPB.CachedEpisode> 
        getEpisodesList();
    /**
     * <code>repeated .CachedEpisode episodes = 2;</code>
     *
     * <pre>
     * Episodes which occurred during this day. Used to compute
     * events.
     * </pre>
     */
    co.viewfinder.proto.DayMetadataPB.CachedEpisode getEpisodes(int index);
    /**
     * <code>repeated .CachedEpisode episodes = 2;</code>
     *
     * <pre>
     * Episodes which occurred during this day. Used to compute
     * events.
     * </pre>
     */
    int getEpisodesCount();
    /**
     * <code>repeated .CachedEpisode episodes = 2;</code>
     *
     * <pre>
     * Episodes which occurred during this day. Used to compute
     * events.
     * </pre>
     */
    java.util.List<? extends co.viewfinder.proto.DayMetadataPB.CachedEpisodeOrBuilder> 
        getEpisodesOrBuilderList();
    /**
     * <code>repeated .CachedEpisode episodes = 2;</code>
     *
     * <pre>
     * Episodes which occurred during this day. Used to compute
     * events.
     * </pre>
     */
    co.viewfinder.proto.DayMetadataPB.CachedEpisodeOrBuilder getEpisodesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code DayMetadata}
   */
  public static final class DayMetadata extends
      com.google.protobuf.GeneratedMessage
      implements DayMetadataOrBuilder {
    // Use DayMetadata.newBuilder() to construct.
    private DayMetadata(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DayMetadata(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DayMetadata defaultInstance;
    public static DayMetadata getDefaultInstance() {
      return defaultInstance;
    }

    public DayMetadata getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DayMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              timestamp_ = input.readDouble();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                episodes_ = new java.util.ArrayList<co.viewfinder.proto.DayMetadataPB.CachedEpisode>();
                mutable_bitField0_ |= 0x00000002;
              }
              episodes_.add(input.readMessage(co.viewfinder.proto.DayMetadataPB.CachedEpisode.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          episodes_ = java.util.Collections.unmodifiableList(episodes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return co.viewfinder.proto.DayMetadataPB.internal_static_DayMetadata_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return co.viewfinder.proto.DayMetadataPB.internal_static_DayMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              co.viewfinder.proto.DayMetadataPB.DayMetadata.class, co.viewfinder.proto.DayMetadataPB.DayMetadata.Builder.class);
    }

    public static com.google.protobuf.Parser<DayMetadata> PARSER =
        new com.google.protobuf.AbstractParser<DayMetadata>() {
      public DayMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DayMetadata(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DayMetadata> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional double timestamp = 1;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private double timestamp_;
    /**
     * <code>optional double timestamp = 1;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional double timestamp = 1;</code>
     */
    public double getTimestamp() {
      return timestamp_;
    }

    // repeated .CachedEpisode episodes = 2;
    public static final int EPISODES_FIELD_NUMBER = 2;
    private java.util.List<co.viewfinder.proto.DayMetadataPB.CachedEpisode> episodes_;
    /**
     * <code>repeated .CachedEpisode episodes = 2;</code>
     *
     * <pre>
     * Episodes which occurred during this day. Used to compute
     * events.
     * </pre>
     */
    public java.util.List<co.viewfinder.proto.DayMetadataPB.CachedEpisode> getEpisodesList() {
      return episodes_;
    }
    /**
     * <code>repeated .CachedEpisode episodes = 2;</code>
     *
     * <pre>
     * Episodes which occurred during this day. Used to compute
     * events.
     * </pre>
     */
    public java.util.List<? extends co.viewfinder.proto.DayMetadataPB.CachedEpisodeOrBuilder> 
        getEpisodesOrBuilderList() {
      return episodes_;
    }
    /**
     * <code>repeated .CachedEpisode episodes = 2;</code>
     *
     * <pre>
     * Episodes which occurred during this day. Used to compute
     * events.
     * </pre>
     */
    public int getEpisodesCount() {
      return episodes_.size();
    }
    /**
     * <code>repeated .CachedEpisode episodes = 2;</code>
     *
     * <pre>
     * Episodes which occurred during this day. Used to compute
     * events.
     * </pre>
     */
    public co.viewfinder.proto.DayMetadataPB.CachedEpisode getEpisodes(int index) {
      return episodes_.get(index);
    }
    /**
     * <code>repeated .CachedEpisode episodes = 2;</code>
     *
     * <pre>
     * Episodes which occurred during this day. Used to compute
     * events.
     * </pre>
     */
    public co.viewfinder.proto.DayMetadataPB.CachedEpisodeOrBuilder getEpisodesOrBuilder(
        int index) {
      return episodes_.get(index);
    }

    private void initFields() {
      timestamp_ = 0D;
      episodes_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, timestamp_);
      }
      for (int i = 0; i < episodes_.size(); i++) {
        output.writeMessage(2, episodes_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, timestamp_);
      }
      for (int i = 0; i < episodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, episodes_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static co.viewfinder.proto.DayMetadataPB.DayMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.DayMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(co.viewfinder.proto.DayMetadataPB.DayMetadata prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DayMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements co.viewfinder.proto.DayMetadataPB.DayMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_DayMetadata_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_DayMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                co.viewfinder.proto.DayMetadataPB.DayMetadata.class, co.viewfinder.proto.DayMetadataPB.DayMetadata.Builder.class);
      }

      // Construct using co.viewfinder.proto.DayMetadataPB.DayMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEpisodesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        timestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (episodesBuilder_ == null) {
          episodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          episodesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_DayMetadata_descriptor;
      }

      public co.viewfinder.proto.DayMetadataPB.DayMetadata getDefaultInstanceForType() {
        return co.viewfinder.proto.DayMetadataPB.DayMetadata.getDefaultInstance();
      }

      public co.viewfinder.proto.DayMetadataPB.DayMetadata build() {
        co.viewfinder.proto.DayMetadataPB.DayMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public co.viewfinder.proto.DayMetadataPB.DayMetadata buildPartial() {
        co.viewfinder.proto.DayMetadataPB.DayMetadata result = new co.viewfinder.proto.DayMetadataPB.DayMetadata(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timestamp_ = timestamp_;
        if (episodesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            episodes_ = java.util.Collections.unmodifiableList(episodes_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.episodes_ = episodes_;
        } else {
          result.episodes_ = episodesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof co.viewfinder.proto.DayMetadataPB.DayMetadata) {
          return mergeFrom((co.viewfinder.proto.DayMetadataPB.DayMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(co.viewfinder.proto.DayMetadataPB.DayMetadata other) {
        if (other == co.viewfinder.proto.DayMetadataPB.DayMetadata.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (episodesBuilder_ == null) {
          if (!other.episodes_.isEmpty()) {
            if (episodes_.isEmpty()) {
              episodes_ = other.episodes_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureEpisodesIsMutable();
              episodes_.addAll(other.episodes_);
            }
            onChanged();
          }
        } else {
          if (!other.episodes_.isEmpty()) {
            if (episodesBuilder_.isEmpty()) {
              episodesBuilder_.dispose();
              episodesBuilder_ = null;
              episodes_ = other.episodes_;
              bitField0_ = (bitField0_ & ~0x00000002);
              episodesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEpisodesFieldBuilder() : null;
            } else {
              episodesBuilder_.addAllMessages(other.episodes_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        co.viewfinder.proto.DayMetadataPB.DayMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (co.viewfinder.proto.DayMetadataPB.DayMetadata) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional double timestamp = 1;
      private double timestamp_ ;
      /**
       * <code>optional double timestamp = 1;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional double timestamp = 1;</code>
       */
      public double getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional double timestamp = 1;</code>
       */
      public Builder setTimestamp(double value) {
        bitField0_ |= 0x00000001;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0D;
        onChanged();
        return this;
      }

      // repeated .CachedEpisode episodes = 2;
      private java.util.List<co.viewfinder.proto.DayMetadataPB.CachedEpisode> episodes_ =
        java.util.Collections.emptyList();
      private void ensureEpisodesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          episodes_ = new java.util.ArrayList<co.viewfinder.proto.DayMetadataPB.CachedEpisode>(episodes_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.CachedEpisode, co.viewfinder.proto.DayMetadataPB.CachedEpisode.Builder, co.viewfinder.proto.DayMetadataPB.CachedEpisodeOrBuilder> episodesBuilder_;

      /**
       * <code>repeated .CachedEpisode episodes = 2;</code>
       *
       * <pre>
       * Episodes which occurred during this day. Used to compute
       * events.
       * </pre>
       */
      public java.util.List<co.viewfinder.proto.DayMetadataPB.CachedEpisode> getEpisodesList() {
        if (episodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(episodes_);
        } else {
          return episodesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CachedEpisode episodes = 2;</code>
       *
       * <pre>
       * Episodes which occurred during this day. Used to compute
       * events.
       * </pre>
       */
      public int getEpisodesCount() {
        if (episodesBuilder_ == null) {
          return episodes_.size();
        } else {
          return episodesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CachedEpisode episodes = 2;</code>
       *
       * <pre>
       * Episodes which occurred during this day. Used to compute
       * events.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.CachedEpisode getEpisodes(int index) {
        if (episodesBuilder_ == null) {
          return episodes_.get(index);
        } else {
          return episodesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CachedEpisode episodes = 2;</code>
       *
       * <pre>
       * Episodes which occurred during this day. Used to compute
       * events.
       * </pre>
       */
      public Builder setEpisodes(
          int index, co.viewfinder.proto.DayMetadataPB.CachedEpisode value) {
        if (episodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEpisodesIsMutable();
          episodes_.set(index, value);
          onChanged();
        } else {
          episodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CachedEpisode episodes = 2;</code>
       *
       * <pre>
       * Episodes which occurred during this day. Used to compute
       * events.
       * </pre>
       */
      public Builder setEpisodes(
          int index, co.viewfinder.proto.DayMetadataPB.CachedEpisode.Builder builderForValue) {
        if (episodesBuilder_ == null) {
          ensureEpisodesIsMutable();
          episodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          episodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CachedEpisode episodes = 2;</code>
       *
       * <pre>
       * Episodes which occurred during this day. Used to compute
       * events.
       * </pre>
       */
      public Builder addEpisodes(co.viewfinder.proto.DayMetadataPB.CachedEpisode value) {
        if (episodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEpisodesIsMutable();
          episodes_.add(value);
          onChanged();
        } else {
          episodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CachedEpisode episodes = 2;</code>
       *
       * <pre>
       * Episodes which occurred during this day. Used to compute
       * events.
       * </pre>
       */
      public Builder addEpisodes(
          int index, co.viewfinder.proto.DayMetadataPB.CachedEpisode value) {
        if (episodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEpisodesIsMutable();
          episodes_.add(index, value);
          onChanged();
        } else {
          episodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CachedEpisode episodes = 2;</code>
       *
       * <pre>
       * Episodes which occurred during this day. Used to compute
       * events.
       * </pre>
       */
      public Builder addEpisodes(
          co.viewfinder.proto.DayMetadataPB.CachedEpisode.Builder builderForValue) {
        if (episodesBuilder_ == null) {
          ensureEpisodesIsMutable();
          episodes_.add(builderForValue.build());
          onChanged();
        } else {
          episodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CachedEpisode episodes = 2;</code>
       *
       * <pre>
       * Episodes which occurred during this day. Used to compute
       * events.
       * </pre>
       */
      public Builder addEpisodes(
          int index, co.viewfinder.proto.DayMetadataPB.CachedEpisode.Builder builderForValue) {
        if (episodesBuilder_ == null) {
          ensureEpisodesIsMutable();
          episodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          episodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CachedEpisode episodes = 2;</code>
       *
       * <pre>
       * Episodes which occurred during this day. Used to compute
       * events.
       * </pre>
       */
      public Builder addAllEpisodes(
          java.lang.Iterable<? extends co.viewfinder.proto.DayMetadataPB.CachedEpisode> values) {
        if (episodesBuilder_ == null) {
          ensureEpisodesIsMutable();
          super.addAll(values, episodes_);
          onChanged();
        } else {
          episodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CachedEpisode episodes = 2;</code>
       *
       * <pre>
       * Episodes which occurred during this day. Used to compute
       * events.
       * </pre>
       */
      public Builder clearEpisodes() {
        if (episodesBuilder_ == null) {
          episodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          episodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CachedEpisode episodes = 2;</code>
       *
       * <pre>
       * Episodes which occurred during this day. Used to compute
       * events.
       * </pre>
       */
      public Builder removeEpisodes(int index) {
        if (episodesBuilder_ == null) {
          ensureEpisodesIsMutable();
          episodes_.remove(index);
          onChanged();
        } else {
          episodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CachedEpisode episodes = 2;</code>
       *
       * <pre>
       * Episodes which occurred during this day. Used to compute
       * events.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.CachedEpisode.Builder getEpisodesBuilder(
          int index) {
        return getEpisodesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CachedEpisode episodes = 2;</code>
       *
       * <pre>
       * Episodes which occurred during this day. Used to compute
       * events.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.CachedEpisodeOrBuilder getEpisodesOrBuilder(
          int index) {
        if (episodesBuilder_ == null) {
          return episodes_.get(index);  } else {
          return episodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CachedEpisode episodes = 2;</code>
       *
       * <pre>
       * Episodes which occurred during this day. Used to compute
       * events.
       * </pre>
       */
      public java.util.List<? extends co.viewfinder.proto.DayMetadataPB.CachedEpisodeOrBuilder> 
           getEpisodesOrBuilderList() {
        if (episodesBuilder_ != null) {
          return episodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(episodes_);
        }
      }
      /**
       * <code>repeated .CachedEpisode episodes = 2;</code>
       *
       * <pre>
       * Episodes which occurred during this day. Used to compute
       * events.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.CachedEpisode.Builder addEpisodesBuilder() {
        return getEpisodesFieldBuilder().addBuilder(
            co.viewfinder.proto.DayMetadataPB.CachedEpisode.getDefaultInstance());
      }
      /**
       * <code>repeated .CachedEpisode episodes = 2;</code>
       *
       * <pre>
       * Episodes which occurred during this day. Used to compute
       * events.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.CachedEpisode.Builder addEpisodesBuilder(
          int index) {
        return getEpisodesFieldBuilder().addBuilder(
            index, co.viewfinder.proto.DayMetadataPB.CachedEpisode.getDefaultInstance());
      }
      /**
       * <code>repeated .CachedEpisode episodes = 2;</code>
       *
       * <pre>
       * Episodes which occurred during this day. Used to compute
       * events.
       * </pre>
       */
      public java.util.List<co.viewfinder.proto.DayMetadataPB.CachedEpisode.Builder> 
           getEpisodesBuilderList() {
        return getEpisodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.CachedEpisode, co.viewfinder.proto.DayMetadataPB.CachedEpisode.Builder, co.viewfinder.proto.DayMetadataPB.CachedEpisodeOrBuilder> 
          getEpisodesFieldBuilder() {
        if (episodesBuilder_ == null) {
          episodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              co.viewfinder.proto.DayMetadataPB.CachedEpisode, co.viewfinder.proto.DayMetadataPB.CachedEpisode.Builder, co.viewfinder.proto.DayMetadataPB.CachedEpisodeOrBuilder>(
                  episodes_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          episodes_ = null;
        }
        return episodesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:DayMetadata)
    }

    static {
      defaultInstance = new DayMetadata(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DayMetadata)
  }

  public interface SummaryRowOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .SummaryRow.RowType type = 1;
    /**
     * <code>optional .SummaryRow.RowType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional .SummaryRow.RowType type = 1;</code>
     */
    co.viewfinder.proto.DayMetadataPB.SummaryRow.RowType getType();

    // optional double timestamp = 2;
    /**
     * <code>optional double timestamp = 2;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional double timestamp = 2;</code>
     */
    double getTimestamp();

    // optional double day_timestamp = 3;
    /**
     * <code>optional double day_timestamp = 3;</code>
     *
     * <pre>
     * day_timestamp is the day this event/trapdoor can be found in.  It is
     * usually equal to CanonicalizeTimestamp(timestamp), but not necessarily,
     * e.g. for events that span the 4:30am cutoff.
     * </pre>
     */
    boolean hasDayTimestamp();
    /**
     * <code>optional double day_timestamp = 3;</code>
     *
     * <pre>
     * day_timestamp is the day this event/trapdoor can be found in.  It is
     * usually equal to CanonicalizeTimestamp(timestamp), but not necessarily,
     * e.g. for events that span the 4:30am cutoff.
     * </pre>
     */
    double getDayTimestamp();

    // optional int64 identifier = 4;
    /**
     * <code>optional int64 identifier = 4;</code>
     *
     * <pre>
     * Identifier used to locate asset summary row represents. In the case
     * of an event, this is the index of the day's events; in the case of
     * a trapdoor, this is the viewpoint id.
     * </pre>
     */
    boolean hasIdentifier();
    /**
     * <code>optional int64 identifier = 4;</code>
     *
     * <pre>
     * Identifier used to locate asset summary row represents. In the case
     * of an event, this is the index of the day's events; in the case of
     * a trapdoor, this is the viewpoint id.
     * </pre>
     */
    long getIdentifier();

    // optional float height = 5;
    /**
     * <code>optional float height = 5;</code>
     */
    boolean hasHeight();
    /**
     * <code>optional float height = 5;</code>
     */
    float getHeight();

    // optional bool unviewed = 6;
    /**
     * <code>optional bool unviewed = 6;</code>
     */
    boolean hasUnviewed();
    /**
     * <code>optional bool unviewed = 6;</code>
     */
    boolean getUnviewed();

    // optional float position = 7;
    /**
     * <code>optional float position = 7;</code>
     *
     * <pre>
     * position in the vertical scroll
     * </pre>
     */
    boolean hasPosition();
    /**
     * <code>optional float position = 7;</code>
     *
     * <pre>
     * position in the vertical scroll
     * </pre>
     */
    float getPosition();

    // optional float weight = 8;
    /**
     * <code>optional float weight = 8;</code>
     *
     * <pre>
     * normalized weight for crowding algorithm
     * </pre>
     */
    boolean hasWeight();
    /**
     * <code>optional float weight = 8;</code>
     *
     * <pre>
     * normalized weight for crowding algorithm
     * </pre>
     */
    float getWeight();

    // optional int32 photo_count = 9;
    /**
     * <code>optional int32 photo_count = 9;</code>
     *
     * <pre>
     * Used for computing normalized weights.
     * </pre>
     */
    boolean hasPhotoCount();
    /**
     * <code>optional int32 photo_count = 9;</code>
     *
     * <pre>
     * Used for computing normalized weights.
     * </pre>
     */
    int getPhotoCount();

    // optional int32 comment_count = 10;
    /**
     * <code>optional int32 comment_count = 10;</code>
     *
     * <pre>
     * Only applies to trapdoor types
     * </pre>
     */
    boolean hasCommentCount();
    /**
     * <code>optional int32 comment_count = 10;</code>
     *
     * <pre>
     * Only applies to trapdoor types
     * </pre>
     */
    int getCommentCount();

    // optional int32 contributor_count = 11;
    /**
     * <code>optional int32 contributor_count = 11;</code>
     */
    boolean hasContributorCount();
    /**
     * <code>optional int32 contributor_count = 11;</code>
     */
    int getContributorCount();

    // optional int32 share_count = 12;
    /**
     * <code>optional int32 share_count = 12;</code>
     *
     * <pre>
     * Only applies to events
     * </pre>
     */
    boolean hasShareCount();
    /**
     * <code>optional int32 share_count = 12;</code>
     *
     * <pre>
     * Only applies to events
     * </pre>
     */
    int getShareCount();

    // optional double distance = 13;
    /**
     * <code>optional double distance = 13;</code>
     *
     * <pre>
     * Only applies to events
     * </pre>
     */
    boolean hasDistance();
    /**
     * <code>optional double distance = 13;</code>
     *
     * <pre>
     * Only applies to events
     * </pre>
     */
    double getDistance();

    // optional int64 episode_id = 14;
    /**
     * <code>optional int64 episode_id = 14;</code>
     *
     * <pre>
     * For events only, this is the episode id of the first episode in
     * the event.
     * </pre>
     */
    boolean hasEpisodeId();
    /**
     * <code>optional int64 episode_id = 14;</code>
     *
     * <pre>
     * For events only, this is the episode id of the first episode in
     * the event.
     * </pre>
     */
    long getEpisodeId();

    // optional int32 original_row_index = 20;
    /**
     * <code>optional int32 original_row_index = 20;</code>
     *
     * <pre>
     * HACK: used in EventSummaryView's search feature to track rows for expansion and photo selection.
     * TODO(ben): refactor to use a real search result abstraction.
     * This field is never persisted to disk so it should be safe to reclaim the tag number
     * when it's gone.
     * </pre>
     */
    boolean hasOriginalRowIndex();
    /**
     * <code>optional int32 original_row_index = 20;</code>
     *
     * <pre>
     * HACK: used in EventSummaryView's search feature to track rows for expansion and photo selection.
     * TODO(ben): refactor to use a real search result abstraction.
     * This field is never persisted to disk so it should be safe to reclaim the tag number
     * when it's gone.
     * </pre>
     */
    int getOriginalRowIndex();
  }
  /**
   * Protobuf type {@code SummaryRow}
   */
  public static final class SummaryRow extends
      com.google.protobuf.GeneratedMessage
      implements SummaryRowOrBuilder {
    // Use SummaryRow.newBuilder() to construct.
    private SummaryRow(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SummaryRow(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SummaryRow defaultInstance;
    public static SummaryRow getDefaultInstance() {
      return defaultInstance;
    }

    public SummaryRow getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SummaryRow(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              co.viewfinder.proto.DayMetadataPB.SummaryRow.RowType value = co.viewfinder.proto.DayMetadataPB.SummaryRow.RowType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              timestamp_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              dayTimestamp_ = input.readDouble();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              identifier_ = input.readInt64();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              height_ = input.readFloat();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              unviewed_ = input.readBool();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              position_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              weight_ = input.readFloat();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              photoCount_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              commentCount_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              contributorCount_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              shareCount_ = input.readInt32();
              break;
            }
            case 105: {
              bitField0_ |= 0x00001000;
              distance_ = input.readDouble();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              episodeId_ = input.readInt64();
              break;
            }
            case 160: {
              bitField0_ |= 0x00004000;
              originalRowIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return co.viewfinder.proto.DayMetadataPB.internal_static_SummaryRow_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return co.viewfinder.proto.DayMetadataPB.internal_static_SummaryRow_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              co.viewfinder.proto.DayMetadataPB.SummaryRow.class, co.viewfinder.proto.DayMetadataPB.SummaryRow.Builder.class);
    }

    public static com.google.protobuf.Parser<SummaryRow> PARSER =
        new com.google.protobuf.AbstractParser<SummaryRow>() {
      public SummaryRow parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SummaryRow(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SummaryRow> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code SummaryRow.RowType}
     */
    public enum RowType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>EVENT = 1;</code>
       *
       * <pre>
       * event summary
       * </pre>
       */
      EVENT(0, 1),
      /**
       * <code>FULL_EVENT = 2;</code>
       *
       * <pre>
       * fully-expanded event
       * </pre>
       */
      FULL_EVENT(1, 2),
      /**
       * <code>EVENT_TRAPDOOR = 4;</code>
       *
       * <pre>
       * convo trapdoor in events
       * </pre>
       */
      EVENT_TRAPDOOR(2, 4),
      /**
       * <code>TRAPDOOR = 5;</code>
       *
       * <pre>
       * convo trapdoor in conversations
       * </pre>
       */
      TRAPDOOR(3, 5),
      ;

      /**
       * <code>EVENT = 1;</code>
       *
       * <pre>
       * event summary
       * </pre>
       */
      public static final int EVENT_VALUE = 1;
      /**
       * <code>FULL_EVENT = 2;</code>
       *
       * <pre>
       * fully-expanded event
       * </pre>
       */
      public static final int FULL_EVENT_VALUE = 2;
      /**
       * <code>EVENT_TRAPDOOR = 4;</code>
       *
       * <pre>
       * convo trapdoor in events
       * </pre>
       */
      public static final int EVENT_TRAPDOOR_VALUE = 4;
      /**
       * <code>TRAPDOOR = 5;</code>
       *
       * <pre>
       * convo trapdoor in conversations
       * </pre>
       */
      public static final int TRAPDOOR_VALUE = 5;


      public final int getNumber() { return value; }

      public static RowType valueOf(int value) {
        switch (value) {
          case 1: return EVENT;
          case 2: return FULL_EVENT;
          case 4: return EVENT_TRAPDOOR;
          case 5: return TRAPDOOR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<RowType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<RowType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RowType>() {
              public RowType findValueByNumber(int number) {
                return RowType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return co.viewfinder.proto.DayMetadataPB.SummaryRow.getDescriptor().getEnumTypes().get(0);
      }

      private static final RowType[] VALUES = values();

      public static RowType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private RowType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:SummaryRow.RowType)
    }

    private int bitField0_;
    // optional .SummaryRow.RowType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private co.viewfinder.proto.DayMetadataPB.SummaryRow.RowType type_;
    /**
     * <code>optional .SummaryRow.RowType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .SummaryRow.RowType type = 1;</code>
     */
    public co.viewfinder.proto.DayMetadataPB.SummaryRow.RowType getType() {
      return type_;
    }

    // optional double timestamp = 2;
    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private double timestamp_;
    /**
     * <code>optional double timestamp = 2;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional double timestamp = 2;</code>
     */
    public double getTimestamp() {
      return timestamp_;
    }

    // optional double day_timestamp = 3;
    public static final int DAY_TIMESTAMP_FIELD_NUMBER = 3;
    private double dayTimestamp_;
    /**
     * <code>optional double day_timestamp = 3;</code>
     *
     * <pre>
     * day_timestamp is the day this event/trapdoor can be found in.  It is
     * usually equal to CanonicalizeTimestamp(timestamp), but not necessarily,
     * e.g. for events that span the 4:30am cutoff.
     * </pre>
     */
    public boolean hasDayTimestamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional double day_timestamp = 3;</code>
     *
     * <pre>
     * day_timestamp is the day this event/trapdoor can be found in.  It is
     * usually equal to CanonicalizeTimestamp(timestamp), but not necessarily,
     * e.g. for events that span the 4:30am cutoff.
     * </pre>
     */
    public double getDayTimestamp() {
      return dayTimestamp_;
    }

    // optional int64 identifier = 4;
    public static final int IDENTIFIER_FIELD_NUMBER = 4;
    private long identifier_;
    /**
     * <code>optional int64 identifier = 4;</code>
     *
     * <pre>
     * Identifier used to locate asset summary row represents. In the case
     * of an event, this is the index of the day's events; in the case of
     * a trapdoor, this is the viewpoint id.
     * </pre>
     */
    public boolean hasIdentifier() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 identifier = 4;</code>
     *
     * <pre>
     * Identifier used to locate asset summary row represents. In the case
     * of an event, this is the index of the day's events; in the case of
     * a trapdoor, this is the viewpoint id.
     * </pre>
     */
    public long getIdentifier() {
      return identifier_;
    }

    // optional float height = 5;
    public static final int HEIGHT_FIELD_NUMBER = 5;
    private float height_;
    /**
     * <code>optional float height = 5;</code>
     */
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float height = 5;</code>
     */
    public float getHeight() {
      return height_;
    }

    // optional bool unviewed = 6;
    public static final int UNVIEWED_FIELD_NUMBER = 6;
    private boolean unviewed_;
    /**
     * <code>optional bool unviewed = 6;</code>
     */
    public boolean hasUnviewed() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool unviewed = 6;</code>
     */
    public boolean getUnviewed() {
      return unviewed_;
    }

    // optional float position = 7;
    public static final int POSITION_FIELD_NUMBER = 7;
    private float position_;
    /**
     * <code>optional float position = 7;</code>
     *
     * <pre>
     * position in the vertical scroll
     * </pre>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float position = 7;</code>
     *
     * <pre>
     * position in the vertical scroll
     * </pre>
     */
    public float getPosition() {
      return position_;
    }

    // optional float weight = 8;
    public static final int WEIGHT_FIELD_NUMBER = 8;
    private float weight_;
    /**
     * <code>optional float weight = 8;</code>
     *
     * <pre>
     * normalized weight for crowding algorithm
     * </pre>
     */
    public boolean hasWeight() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float weight = 8;</code>
     *
     * <pre>
     * normalized weight for crowding algorithm
     * </pre>
     */
    public float getWeight() {
      return weight_;
    }

    // optional int32 photo_count = 9;
    public static final int PHOTO_COUNT_FIELD_NUMBER = 9;
    private int photoCount_;
    /**
     * <code>optional int32 photo_count = 9;</code>
     *
     * <pre>
     * Used for computing normalized weights.
     * </pre>
     */
    public boolean hasPhotoCount() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 photo_count = 9;</code>
     *
     * <pre>
     * Used for computing normalized weights.
     * </pre>
     */
    public int getPhotoCount() {
      return photoCount_;
    }

    // optional int32 comment_count = 10;
    public static final int COMMENT_COUNT_FIELD_NUMBER = 10;
    private int commentCount_;
    /**
     * <code>optional int32 comment_count = 10;</code>
     *
     * <pre>
     * Only applies to trapdoor types
     * </pre>
     */
    public boolean hasCommentCount() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 comment_count = 10;</code>
     *
     * <pre>
     * Only applies to trapdoor types
     * </pre>
     */
    public int getCommentCount() {
      return commentCount_;
    }

    // optional int32 contributor_count = 11;
    public static final int CONTRIBUTOR_COUNT_FIELD_NUMBER = 11;
    private int contributorCount_;
    /**
     * <code>optional int32 contributor_count = 11;</code>
     */
    public boolean hasContributorCount() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 contributor_count = 11;</code>
     */
    public int getContributorCount() {
      return contributorCount_;
    }

    // optional int32 share_count = 12;
    public static final int SHARE_COUNT_FIELD_NUMBER = 12;
    private int shareCount_;
    /**
     * <code>optional int32 share_count = 12;</code>
     *
     * <pre>
     * Only applies to events
     * </pre>
     */
    public boolean hasShareCount() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 share_count = 12;</code>
     *
     * <pre>
     * Only applies to events
     * </pre>
     */
    public int getShareCount() {
      return shareCount_;
    }

    // optional double distance = 13;
    public static final int DISTANCE_FIELD_NUMBER = 13;
    private double distance_;
    /**
     * <code>optional double distance = 13;</code>
     *
     * <pre>
     * Only applies to events
     * </pre>
     */
    public boolean hasDistance() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional double distance = 13;</code>
     *
     * <pre>
     * Only applies to events
     * </pre>
     */
    public double getDistance() {
      return distance_;
    }

    // optional int64 episode_id = 14;
    public static final int EPISODE_ID_FIELD_NUMBER = 14;
    private long episodeId_;
    /**
     * <code>optional int64 episode_id = 14;</code>
     *
     * <pre>
     * For events only, this is the episode id of the first episode in
     * the event.
     * </pre>
     */
    public boolean hasEpisodeId() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 episode_id = 14;</code>
     *
     * <pre>
     * For events only, this is the episode id of the first episode in
     * the event.
     * </pre>
     */
    public long getEpisodeId() {
      return episodeId_;
    }

    // optional int32 original_row_index = 20;
    public static final int ORIGINAL_ROW_INDEX_FIELD_NUMBER = 20;
    private int originalRowIndex_;
    /**
     * <code>optional int32 original_row_index = 20;</code>
     *
     * <pre>
     * HACK: used in EventSummaryView's search feature to track rows for expansion and photo selection.
     * TODO(ben): refactor to use a real search result abstraction.
     * This field is never persisted to disk so it should be safe to reclaim the tag number
     * when it's gone.
     * </pre>
     */
    public boolean hasOriginalRowIndex() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 original_row_index = 20;</code>
     *
     * <pre>
     * HACK: used in EventSummaryView's search feature to track rows for expansion and photo selection.
     * TODO(ben): refactor to use a real search result abstraction.
     * This field is never persisted to disk so it should be safe to reclaim the tag number
     * when it's gone.
     * </pre>
     */
    public int getOriginalRowIndex() {
      return originalRowIndex_;
    }

    private void initFields() {
      type_ = co.viewfinder.proto.DayMetadataPB.SummaryRow.RowType.EVENT;
      timestamp_ = 0D;
      dayTimestamp_ = 0D;
      identifier_ = 0L;
      height_ = 0F;
      unviewed_ = false;
      position_ = 0F;
      weight_ = 0F;
      photoCount_ = 0;
      commentCount_ = 0;
      contributorCount_ = 0;
      shareCount_ = 0;
      distance_ = 0D;
      episodeId_ = 0L;
      originalRowIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, dayTimestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, identifier_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, height_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, unviewed_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, position_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, weight_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, photoCount_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, commentCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, contributorCount_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, shareCount_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeDouble(13, distance_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(14, episodeId_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(20, originalRowIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, dayTimestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, identifier_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, height_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, unviewed_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, position_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, weight_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, photoCount_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, commentCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, contributorCount_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, shareCount_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, distance_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, episodeId_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, originalRowIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static co.viewfinder.proto.DayMetadataPB.SummaryRow parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static co.viewfinder.proto.DayMetadataPB.SummaryRow parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.SummaryRow parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static co.viewfinder.proto.DayMetadataPB.SummaryRow parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.SummaryRow parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.SummaryRow parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.SummaryRow parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.SummaryRow parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.SummaryRow parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.SummaryRow parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(co.viewfinder.proto.DayMetadataPB.SummaryRow prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SummaryRow}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements co.viewfinder.proto.DayMetadataPB.SummaryRowOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_SummaryRow_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_SummaryRow_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                co.viewfinder.proto.DayMetadataPB.SummaryRow.class, co.viewfinder.proto.DayMetadataPB.SummaryRow.Builder.class);
      }

      // Construct using co.viewfinder.proto.DayMetadataPB.SummaryRow.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = co.viewfinder.proto.DayMetadataPB.SummaryRow.RowType.EVENT;
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        dayTimestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        identifier_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        height_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        unviewed_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        position_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        weight_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        photoCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        commentCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        contributorCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        shareCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        distance_ = 0D;
        bitField0_ = (bitField0_ & ~0x00001000);
        episodeId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        originalRowIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_SummaryRow_descriptor;
      }

      public co.viewfinder.proto.DayMetadataPB.SummaryRow getDefaultInstanceForType() {
        return co.viewfinder.proto.DayMetadataPB.SummaryRow.getDefaultInstance();
      }

      public co.viewfinder.proto.DayMetadataPB.SummaryRow build() {
        co.viewfinder.proto.DayMetadataPB.SummaryRow result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public co.viewfinder.proto.DayMetadataPB.SummaryRow buildPartial() {
        co.viewfinder.proto.DayMetadataPB.SummaryRow result = new co.viewfinder.proto.DayMetadataPB.SummaryRow(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dayTimestamp_ = dayTimestamp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.identifier_ = identifier_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.height_ = height_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.unviewed_ = unviewed_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.position_ = position_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.weight_ = weight_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.photoCount_ = photoCount_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.commentCount_ = commentCount_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.contributorCount_ = contributorCount_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.shareCount_ = shareCount_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.distance_ = distance_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.episodeId_ = episodeId_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.originalRowIndex_ = originalRowIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof co.viewfinder.proto.DayMetadataPB.SummaryRow) {
          return mergeFrom((co.viewfinder.proto.DayMetadataPB.SummaryRow)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(co.viewfinder.proto.DayMetadataPB.SummaryRow other) {
        if (other == co.viewfinder.proto.DayMetadataPB.SummaryRow.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasDayTimestamp()) {
          setDayTimestamp(other.getDayTimestamp());
        }
        if (other.hasIdentifier()) {
          setIdentifier(other.getIdentifier());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (other.hasUnviewed()) {
          setUnviewed(other.getUnviewed());
        }
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (other.hasWeight()) {
          setWeight(other.getWeight());
        }
        if (other.hasPhotoCount()) {
          setPhotoCount(other.getPhotoCount());
        }
        if (other.hasCommentCount()) {
          setCommentCount(other.getCommentCount());
        }
        if (other.hasContributorCount()) {
          setContributorCount(other.getContributorCount());
        }
        if (other.hasShareCount()) {
          setShareCount(other.getShareCount());
        }
        if (other.hasDistance()) {
          setDistance(other.getDistance());
        }
        if (other.hasEpisodeId()) {
          setEpisodeId(other.getEpisodeId());
        }
        if (other.hasOriginalRowIndex()) {
          setOriginalRowIndex(other.getOriginalRowIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        co.viewfinder.proto.DayMetadataPB.SummaryRow parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (co.viewfinder.proto.DayMetadataPB.SummaryRow) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .SummaryRow.RowType type = 1;
      private co.viewfinder.proto.DayMetadataPB.SummaryRow.RowType type_ = co.viewfinder.proto.DayMetadataPB.SummaryRow.RowType.EVENT;
      /**
       * <code>optional .SummaryRow.RowType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .SummaryRow.RowType type = 1;</code>
       */
      public co.viewfinder.proto.DayMetadataPB.SummaryRow.RowType getType() {
        return type_;
      }
      /**
       * <code>optional .SummaryRow.RowType type = 1;</code>
       */
      public Builder setType(co.viewfinder.proto.DayMetadataPB.SummaryRow.RowType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .SummaryRow.RowType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = co.viewfinder.proto.DayMetadataPB.SummaryRow.RowType.EVENT;
        onChanged();
        return this;
      }

      // optional double timestamp = 2;
      private double timestamp_ ;
      /**
       * <code>optional double timestamp = 2;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional double timestamp = 2;</code>
       */
      public double getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional double timestamp = 2;</code>
       */
      public Builder setTimestamp(double value) {
        bitField0_ |= 0x00000002;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double timestamp = 2;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0D;
        onChanged();
        return this;
      }

      // optional double day_timestamp = 3;
      private double dayTimestamp_ ;
      /**
       * <code>optional double day_timestamp = 3;</code>
       *
       * <pre>
       * day_timestamp is the day this event/trapdoor can be found in.  It is
       * usually equal to CanonicalizeTimestamp(timestamp), but not necessarily,
       * e.g. for events that span the 4:30am cutoff.
       * </pre>
       */
      public boolean hasDayTimestamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional double day_timestamp = 3;</code>
       *
       * <pre>
       * day_timestamp is the day this event/trapdoor can be found in.  It is
       * usually equal to CanonicalizeTimestamp(timestamp), but not necessarily,
       * e.g. for events that span the 4:30am cutoff.
       * </pre>
       */
      public double getDayTimestamp() {
        return dayTimestamp_;
      }
      /**
       * <code>optional double day_timestamp = 3;</code>
       *
       * <pre>
       * day_timestamp is the day this event/trapdoor can be found in.  It is
       * usually equal to CanonicalizeTimestamp(timestamp), but not necessarily,
       * e.g. for events that span the 4:30am cutoff.
       * </pre>
       */
      public Builder setDayTimestamp(double value) {
        bitField0_ |= 0x00000004;
        dayTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double day_timestamp = 3;</code>
       *
       * <pre>
       * day_timestamp is the day this event/trapdoor can be found in.  It is
       * usually equal to CanonicalizeTimestamp(timestamp), but not necessarily,
       * e.g. for events that span the 4:30am cutoff.
       * </pre>
       */
      public Builder clearDayTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dayTimestamp_ = 0D;
        onChanged();
        return this;
      }

      // optional int64 identifier = 4;
      private long identifier_ ;
      /**
       * <code>optional int64 identifier = 4;</code>
       *
       * <pre>
       * Identifier used to locate asset summary row represents. In the case
       * of an event, this is the index of the day's events; in the case of
       * a trapdoor, this is the viewpoint id.
       * </pre>
       */
      public boolean hasIdentifier() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 identifier = 4;</code>
       *
       * <pre>
       * Identifier used to locate asset summary row represents. In the case
       * of an event, this is the index of the day's events; in the case of
       * a trapdoor, this is the viewpoint id.
       * </pre>
       */
      public long getIdentifier() {
        return identifier_;
      }
      /**
       * <code>optional int64 identifier = 4;</code>
       *
       * <pre>
       * Identifier used to locate asset summary row represents. In the case
       * of an event, this is the index of the day's events; in the case of
       * a trapdoor, this is the viewpoint id.
       * </pre>
       */
      public Builder setIdentifier(long value) {
        bitField0_ |= 0x00000008;
        identifier_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 identifier = 4;</code>
       *
       * <pre>
       * Identifier used to locate asset summary row represents. In the case
       * of an event, this is the index of the day's events; in the case of
       * a trapdoor, this is the viewpoint id.
       * </pre>
       */
      public Builder clearIdentifier() {
        bitField0_ = (bitField0_ & ~0x00000008);
        identifier_ = 0L;
        onChanged();
        return this;
      }

      // optional float height = 5;
      private float height_ ;
      /**
       * <code>optional float height = 5;</code>
       */
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float height = 5;</code>
       */
      public float getHeight() {
        return height_;
      }
      /**
       * <code>optional float height = 5;</code>
       */
      public Builder setHeight(float value) {
        bitField0_ |= 0x00000010;
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float height = 5;</code>
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000010);
        height_ = 0F;
        onChanged();
        return this;
      }

      // optional bool unviewed = 6;
      private boolean unviewed_ ;
      /**
       * <code>optional bool unviewed = 6;</code>
       */
      public boolean hasUnviewed() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool unviewed = 6;</code>
       */
      public boolean getUnviewed() {
        return unviewed_;
      }
      /**
       * <code>optional bool unviewed = 6;</code>
       */
      public Builder setUnviewed(boolean value) {
        bitField0_ |= 0x00000020;
        unviewed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool unviewed = 6;</code>
       */
      public Builder clearUnviewed() {
        bitField0_ = (bitField0_ & ~0x00000020);
        unviewed_ = false;
        onChanged();
        return this;
      }

      // optional float position = 7;
      private float position_ ;
      /**
       * <code>optional float position = 7;</code>
       *
       * <pre>
       * position in the vertical scroll
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float position = 7;</code>
       *
       * <pre>
       * position in the vertical scroll
       * </pre>
       */
      public float getPosition() {
        return position_;
      }
      /**
       * <code>optional float position = 7;</code>
       *
       * <pre>
       * position in the vertical scroll
       * </pre>
       */
      public Builder setPosition(float value) {
        bitField0_ |= 0x00000040;
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float position = 7;</code>
       *
       * <pre>
       * position in the vertical scroll
       * </pre>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000040);
        position_ = 0F;
        onChanged();
        return this;
      }

      // optional float weight = 8;
      private float weight_ ;
      /**
       * <code>optional float weight = 8;</code>
       *
       * <pre>
       * normalized weight for crowding algorithm
       * </pre>
       */
      public boolean hasWeight() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float weight = 8;</code>
       *
       * <pre>
       * normalized weight for crowding algorithm
       * </pre>
       */
      public float getWeight() {
        return weight_;
      }
      /**
       * <code>optional float weight = 8;</code>
       *
       * <pre>
       * normalized weight for crowding algorithm
       * </pre>
       */
      public Builder setWeight(float value) {
        bitField0_ |= 0x00000080;
        weight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float weight = 8;</code>
       *
       * <pre>
       * normalized weight for crowding algorithm
       * </pre>
       */
      public Builder clearWeight() {
        bitField0_ = (bitField0_ & ~0x00000080);
        weight_ = 0F;
        onChanged();
        return this;
      }

      // optional int32 photo_count = 9;
      private int photoCount_ ;
      /**
       * <code>optional int32 photo_count = 9;</code>
       *
       * <pre>
       * Used for computing normalized weights.
       * </pre>
       */
      public boolean hasPhotoCount() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 photo_count = 9;</code>
       *
       * <pre>
       * Used for computing normalized weights.
       * </pre>
       */
      public int getPhotoCount() {
        return photoCount_;
      }
      /**
       * <code>optional int32 photo_count = 9;</code>
       *
       * <pre>
       * Used for computing normalized weights.
       * </pre>
       */
      public Builder setPhotoCount(int value) {
        bitField0_ |= 0x00000100;
        photoCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 photo_count = 9;</code>
       *
       * <pre>
       * Used for computing normalized weights.
       * </pre>
       */
      public Builder clearPhotoCount() {
        bitField0_ = (bitField0_ & ~0x00000100);
        photoCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 comment_count = 10;
      private int commentCount_ ;
      /**
       * <code>optional int32 comment_count = 10;</code>
       *
       * <pre>
       * Only applies to trapdoor types
       * </pre>
       */
      public boolean hasCommentCount() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 comment_count = 10;</code>
       *
       * <pre>
       * Only applies to trapdoor types
       * </pre>
       */
      public int getCommentCount() {
        return commentCount_;
      }
      /**
       * <code>optional int32 comment_count = 10;</code>
       *
       * <pre>
       * Only applies to trapdoor types
       * </pre>
       */
      public Builder setCommentCount(int value) {
        bitField0_ |= 0x00000200;
        commentCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 comment_count = 10;</code>
       *
       * <pre>
       * Only applies to trapdoor types
       * </pre>
       */
      public Builder clearCommentCount() {
        bitField0_ = (bitField0_ & ~0x00000200);
        commentCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 contributor_count = 11;
      private int contributorCount_ ;
      /**
       * <code>optional int32 contributor_count = 11;</code>
       */
      public boolean hasContributorCount() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 contributor_count = 11;</code>
       */
      public int getContributorCount() {
        return contributorCount_;
      }
      /**
       * <code>optional int32 contributor_count = 11;</code>
       */
      public Builder setContributorCount(int value) {
        bitField0_ |= 0x00000400;
        contributorCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 contributor_count = 11;</code>
       */
      public Builder clearContributorCount() {
        bitField0_ = (bitField0_ & ~0x00000400);
        contributorCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 share_count = 12;
      private int shareCount_ ;
      /**
       * <code>optional int32 share_count = 12;</code>
       *
       * <pre>
       * Only applies to events
       * </pre>
       */
      public boolean hasShareCount() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 share_count = 12;</code>
       *
       * <pre>
       * Only applies to events
       * </pre>
       */
      public int getShareCount() {
        return shareCount_;
      }
      /**
       * <code>optional int32 share_count = 12;</code>
       *
       * <pre>
       * Only applies to events
       * </pre>
       */
      public Builder setShareCount(int value) {
        bitField0_ |= 0x00000800;
        shareCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 share_count = 12;</code>
       *
       * <pre>
       * Only applies to events
       * </pre>
       */
      public Builder clearShareCount() {
        bitField0_ = (bitField0_ & ~0x00000800);
        shareCount_ = 0;
        onChanged();
        return this;
      }

      // optional double distance = 13;
      private double distance_ ;
      /**
       * <code>optional double distance = 13;</code>
       *
       * <pre>
       * Only applies to events
       * </pre>
       */
      public boolean hasDistance() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional double distance = 13;</code>
       *
       * <pre>
       * Only applies to events
       * </pre>
       */
      public double getDistance() {
        return distance_;
      }
      /**
       * <code>optional double distance = 13;</code>
       *
       * <pre>
       * Only applies to events
       * </pre>
       */
      public Builder setDistance(double value) {
        bitField0_ |= 0x00001000;
        distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double distance = 13;</code>
       *
       * <pre>
       * Only applies to events
       * </pre>
       */
      public Builder clearDistance() {
        bitField0_ = (bitField0_ & ~0x00001000);
        distance_ = 0D;
        onChanged();
        return this;
      }

      // optional int64 episode_id = 14;
      private long episodeId_ ;
      /**
       * <code>optional int64 episode_id = 14;</code>
       *
       * <pre>
       * For events only, this is the episode id of the first episode in
       * the event.
       * </pre>
       */
      public boolean hasEpisodeId() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 episode_id = 14;</code>
       *
       * <pre>
       * For events only, this is the episode id of the first episode in
       * the event.
       * </pre>
       */
      public long getEpisodeId() {
        return episodeId_;
      }
      /**
       * <code>optional int64 episode_id = 14;</code>
       *
       * <pre>
       * For events only, this is the episode id of the first episode in
       * the event.
       * </pre>
       */
      public Builder setEpisodeId(long value) {
        bitField0_ |= 0x00002000;
        episodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 episode_id = 14;</code>
       *
       * <pre>
       * For events only, this is the episode id of the first episode in
       * the event.
       * </pre>
       */
      public Builder clearEpisodeId() {
        bitField0_ = (bitField0_ & ~0x00002000);
        episodeId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 original_row_index = 20;
      private int originalRowIndex_ ;
      /**
       * <code>optional int32 original_row_index = 20;</code>
       *
       * <pre>
       * HACK: used in EventSummaryView's search feature to track rows for expansion and photo selection.
       * TODO(ben): refactor to use a real search result abstraction.
       * This field is never persisted to disk so it should be safe to reclaim the tag number
       * when it's gone.
       * </pre>
       */
      public boolean hasOriginalRowIndex() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 original_row_index = 20;</code>
       *
       * <pre>
       * HACK: used in EventSummaryView's search feature to track rows for expansion and photo selection.
       * TODO(ben): refactor to use a real search result abstraction.
       * This field is never persisted to disk so it should be safe to reclaim the tag number
       * when it's gone.
       * </pre>
       */
      public int getOriginalRowIndex() {
        return originalRowIndex_;
      }
      /**
       * <code>optional int32 original_row_index = 20;</code>
       *
       * <pre>
       * HACK: used in EventSummaryView's search feature to track rows for expansion and photo selection.
       * TODO(ben): refactor to use a real search result abstraction.
       * This field is never persisted to disk so it should be safe to reclaim the tag number
       * when it's gone.
       * </pre>
       */
      public Builder setOriginalRowIndex(int value) {
        bitField0_ |= 0x00004000;
        originalRowIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 original_row_index = 20;</code>
       *
       * <pre>
       * HACK: used in EventSummaryView's search feature to track rows for expansion and photo selection.
       * TODO(ben): refactor to use a real search result abstraction.
       * This field is never persisted to disk so it should be safe to reclaim the tag number
       * when it's gone.
       * </pre>
       */
      public Builder clearOriginalRowIndex() {
        bitField0_ = (bitField0_ & ~0x00004000);
        originalRowIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SummaryRow)
    }

    static {
      defaultInstance = new SummaryRow(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SummaryRow)
  }

  public interface SummaryMetadataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .SummaryRow rows = 1;
    /**
     * <code>repeated .SummaryRow rows = 1;</code>
     */
    java.util.List<co.viewfinder.proto.DayMetadataPB.SummaryRow> 
        getRowsList();
    /**
     * <code>repeated .SummaryRow rows = 1;</code>
     */
    co.viewfinder.proto.DayMetadataPB.SummaryRow getRows(int index);
    /**
     * <code>repeated .SummaryRow rows = 1;</code>
     */
    int getRowsCount();
    /**
     * <code>repeated .SummaryRow rows = 1;</code>
     */
    java.util.List<? extends co.viewfinder.proto.DayMetadataPB.SummaryRowOrBuilder> 
        getRowsOrBuilderList();
    /**
     * <code>repeated .SummaryRow rows = 1;</code>
     */
    co.viewfinder.proto.DayMetadataPB.SummaryRowOrBuilder getRowsOrBuilder(
        int index);

    // optional int32 unviewed_count = 6;
    /**
     * <code>optional int32 unviewed_count = 6;</code>
     *
     * <pre>
     * Only applies to conversations
     * </pre>
     */
    boolean hasUnviewedCount();
    /**
     * <code>optional int32 unviewed_count = 6;</code>
     *
     * <pre>
     * Only applies to conversations
     * </pre>
     */
    int getUnviewedCount();

    // optional int32 photo_count = 8;
    /**
     * <code>optional int32 photo_count = 8;</code>
     */
    boolean hasPhotoCount();
    /**
     * <code>optional int32 photo_count = 8;</code>
     */
    int getPhotoCount();

    // optional float total_height = 9;
    /**
     * <code>optional float total_height = 9;</code>
     */
    boolean hasTotalHeight();
    /**
     * <code>optional float total_height = 9;</code>
     */
    float getTotalHeight();
  }
  /**
   * Protobuf type {@code SummaryMetadata}
   *
   * <pre>
   * Statistics over entire day table.
   * </pre>
   */
  public static final class SummaryMetadata extends
      com.google.protobuf.GeneratedMessage
      implements SummaryMetadataOrBuilder {
    // Use SummaryMetadata.newBuilder() to construct.
    private SummaryMetadata(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SummaryMetadata(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SummaryMetadata defaultInstance;
    public static SummaryMetadata getDefaultInstance() {
      return defaultInstance;
    }

    public SummaryMetadata getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SummaryMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                rows_ = new java.util.ArrayList<co.viewfinder.proto.DayMetadataPB.SummaryRow>();
                mutable_bitField0_ |= 0x00000001;
              }
              rows_.add(input.readMessage(co.viewfinder.proto.DayMetadataPB.SummaryRow.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              bitField0_ |= 0x00000001;
              unviewedCount_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000002;
              photoCount_ = input.readInt32();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000004;
              totalHeight_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          rows_ = java.util.Collections.unmodifiableList(rows_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return co.viewfinder.proto.DayMetadataPB.internal_static_SummaryMetadata_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return co.viewfinder.proto.DayMetadataPB.internal_static_SummaryMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              co.viewfinder.proto.DayMetadataPB.SummaryMetadata.class, co.viewfinder.proto.DayMetadataPB.SummaryMetadata.Builder.class);
    }

    public static com.google.protobuf.Parser<SummaryMetadata> PARSER =
        new com.google.protobuf.AbstractParser<SummaryMetadata>() {
      public SummaryMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SummaryMetadata(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SummaryMetadata> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .SummaryRow rows = 1;
    public static final int ROWS_FIELD_NUMBER = 1;
    private java.util.List<co.viewfinder.proto.DayMetadataPB.SummaryRow> rows_;
    /**
     * <code>repeated .SummaryRow rows = 1;</code>
     */
    public java.util.List<co.viewfinder.proto.DayMetadataPB.SummaryRow> getRowsList() {
      return rows_;
    }
    /**
     * <code>repeated .SummaryRow rows = 1;</code>
     */
    public java.util.List<? extends co.viewfinder.proto.DayMetadataPB.SummaryRowOrBuilder> 
        getRowsOrBuilderList() {
      return rows_;
    }
    /**
     * <code>repeated .SummaryRow rows = 1;</code>
     */
    public int getRowsCount() {
      return rows_.size();
    }
    /**
     * <code>repeated .SummaryRow rows = 1;</code>
     */
    public co.viewfinder.proto.DayMetadataPB.SummaryRow getRows(int index) {
      return rows_.get(index);
    }
    /**
     * <code>repeated .SummaryRow rows = 1;</code>
     */
    public co.viewfinder.proto.DayMetadataPB.SummaryRowOrBuilder getRowsOrBuilder(
        int index) {
      return rows_.get(index);
    }

    // optional int32 unviewed_count = 6;
    public static final int UNVIEWED_COUNT_FIELD_NUMBER = 6;
    private int unviewedCount_;
    /**
     * <code>optional int32 unviewed_count = 6;</code>
     *
     * <pre>
     * Only applies to conversations
     * </pre>
     */
    public boolean hasUnviewedCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 unviewed_count = 6;</code>
     *
     * <pre>
     * Only applies to conversations
     * </pre>
     */
    public int getUnviewedCount() {
      return unviewedCount_;
    }

    // optional int32 photo_count = 8;
    public static final int PHOTO_COUNT_FIELD_NUMBER = 8;
    private int photoCount_;
    /**
     * <code>optional int32 photo_count = 8;</code>
     */
    public boolean hasPhotoCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 photo_count = 8;</code>
     */
    public int getPhotoCount() {
      return photoCount_;
    }

    // optional float total_height = 9;
    public static final int TOTAL_HEIGHT_FIELD_NUMBER = 9;
    private float totalHeight_;
    /**
     * <code>optional float total_height = 9;</code>
     */
    public boolean hasTotalHeight() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float total_height = 9;</code>
     */
    public float getTotalHeight() {
      return totalHeight_;
    }

    private void initFields() {
      rows_ = java.util.Collections.emptyList();
      unviewedCount_ = 0;
      photoCount_ = 0;
      totalHeight_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < rows_.size(); i++) {
        output.writeMessage(1, rows_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(6, unviewedCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(8, photoCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(9, totalHeight_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < rows_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, rows_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, unviewedCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, photoCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, totalHeight_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static co.viewfinder.proto.DayMetadataPB.SummaryMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static co.viewfinder.proto.DayMetadataPB.SummaryMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.SummaryMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static co.viewfinder.proto.DayMetadataPB.SummaryMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.SummaryMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.SummaryMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.SummaryMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.SummaryMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.SummaryMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.SummaryMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(co.viewfinder.proto.DayMetadataPB.SummaryMetadata prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SummaryMetadata}
     *
     * <pre>
     * Statistics over entire day table.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements co.viewfinder.proto.DayMetadataPB.SummaryMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_SummaryMetadata_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_SummaryMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                co.viewfinder.proto.DayMetadataPB.SummaryMetadata.class, co.viewfinder.proto.DayMetadataPB.SummaryMetadata.Builder.class);
      }

      // Construct using co.viewfinder.proto.DayMetadataPB.SummaryMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRowsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (rowsBuilder_ == null) {
          rows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          rowsBuilder_.clear();
        }
        unviewedCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        photoCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        totalHeight_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_SummaryMetadata_descriptor;
      }

      public co.viewfinder.proto.DayMetadataPB.SummaryMetadata getDefaultInstanceForType() {
        return co.viewfinder.proto.DayMetadataPB.SummaryMetadata.getDefaultInstance();
      }

      public co.viewfinder.proto.DayMetadataPB.SummaryMetadata build() {
        co.viewfinder.proto.DayMetadataPB.SummaryMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public co.viewfinder.proto.DayMetadataPB.SummaryMetadata buildPartial() {
        co.viewfinder.proto.DayMetadataPB.SummaryMetadata result = new co.viewfinder.proto.DayMetadataPB.SummaryMetadata(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (rowsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            rows_ = java.util.Collections.unmodifiableList(rows_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.rows_ = rows_;
        } else {
          result.rows_ = rowsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.unviewedCount_ = unviewedCount_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.photoCount_ = photoCount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.totalHeight_ = totalHeight_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof co.viewfinder.proto.DayMetadataPB.SummaryMetadata) {
          return mergeFrom((co.viewfinder.proto.DayMetadataPB.SummaryMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(co.viewfinder.proto.DayMetadataPB.SummaryMetadata other) {
        if (other == co.viewfinder.proto.DayMetadataPB.SummaryMetadata.getDefaultInstance()) return this;
        if (rowsBuilder_ == null) {
          if (!other.rows_.isEmpty()) {
            if (rows_.isEmpty()) {
              rows_ = other.rows_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRowsIsMutable();
              rows_.addAll(other.rows_);
            }
            onChanged();
          }
        } else {
          if (!other.rows_.isEmpty()) {
            if (rowsBuilder_.isEmpty()) {
              rowsBuilder_.dispose();
              rowsBuilder_ = null;
              rows_ = other.rows_;
              bitField0_ = (bitField0_ & ~0x00000001);
              rowsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowsFieldBuilder() : null;
            } else {
              rowsBuilder_.addAllMessages(other.rows_);
            }
          }
        }
        if (other.hasUnviewedCount()) {
          setUnviewedCount(other.getUnviewedCount());
        }
        if (other.hasPhotoCount()) {
          setPhotoCount(other.getPhotoCount());
        }
        if (other.hasTotalHeight()) {
          setTotalHeight(other.getTotalHeight());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        co.viewfinder.proto.DayMetadataPB.SummaryMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (co.viewfinder.proto.DayMetadataPB.SummaryMetadata) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .SummaryRow rows = 1;
      private java.util.List<co.viewfinder.proto.DayMetadataPB.SummaryRow> rows_ =
        java.util.Collections.emptyList();
      private void ensureRowsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          rows_ = new java.util.ArrayList<co.viewfinder.proto.DayMetadataPB.SummaryRow>(rows_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.SummaryRow, co.viewfinder.proto.DayMetadataPB.SummaryRow.Builder, co.viewfinder.proto.DayMetadataPB.SummaryRowOrBuilder> rowsBuilder_;

      /**
       * <code>repeated .SummaryRow rows = 1;</code>
       */
      public java.util.List<co.viewfinder.proto.DayMetadataPB.SummaryRow> getRowsList() {
        if (rowsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rows_);
        } else {
          return rowsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SummaryRow rows = 1;</code>
       */
      public int getRowsCount() {
        if (rowsBuilder_ == null) {
          return rows_.size();
        } else {
          return rowsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SummaryRow rows = 1;</code>
       */
      public co.viewfinder.proto.DayMetadataPB.SummaryRow getRows(int index) {
        if (rowsBuilder_ == null) {
          return rows_.get(index);
        } else {
          return rowsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SummaryRow rows = 1;</code>
       */
      public Builder setRows(
          int index, co.viewfinder.proto.DayMetadataPB.SummaryRow value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.set(index, value);
          onChanged();
        } else {
          rowsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SummaryRow rows = 1;</code>
       */
      public Builder setRows(
          int index, co.viewfinder.proto.DayMetadataPB.SummaryRow.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SummaryRow rows = 1;</code>
       */
      public Builder addRows(co.viewfinder.proto.DayMetadataPB.SummaryRow value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.add(value);
          onChanged();
        } else {
          rowsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SummaryRow rows = 1;</code>
       */
      public Builder addRows(
          int index, co.viewfinder.proto.DayMetadataPB.SummaryRow value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.add(index, value);
          onChanged();
        } else {
          rowsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SummaryRow rows = 1;</code>
       */
      public Builder addRows(
          co.viewfinder.proto.DayMetadataPB.SummaryRow.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.add(builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SummaryRow rows = 1;</code>
       */
      public Builder addRows(
          int index, co.viewfinder.proto.DayMetadataPB.SummaryRow.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SummaryRow rows = 1;</code>
       */
      public Builder addAllRows(
          java.lang.Iterable<? extends co.viewfinder.proto.DayMetadataPB.SummaryRow> values) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          super.addAll(values, rows_);
          onChanged();
        } else {
          rowsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SummaryRow rows = 1;</code>
       */
      public Builder clearRows() {
        if (rowsBuilder_ == null) {
          rows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          rowsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SummaryRow rows = 1;</code>
       */
      public Builder removeRows(int index) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.remove(index);
          onChanged();
        } else {
          rowsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SummaryRow rows = 1;</code>
       */
      public co.viewfinder.proto.DayMetadataPB.SummaryRow.Builder getRowsBuilder(
          int index) {
        return getRowsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SummaryRow rows = 1;</code>
       */
      public co.viewfinder.proto.DayMetadataPB.SummaryRowOrBuilder getRowsOrBuilder(
          int index) {
        if (rowsBuilder_ == null) {
          return rows_.get(index);  } else {
          return rowsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SummaryRow rows = 1;</code>
       */
      public java.util.List<? extends co.viewfinder.proto.DayMetadataPB.SummaryRowOrBuilder> 
           getRowsOrBuilderList() {
        if (rowsBuilder_ != null) {
          return rowsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rows_);
        }
      }
      /**
       * <code>repeated .SummaryRow rows = 1;</code>
       */
      public co.viewfinder.proto.DayMetadataPB.SummaryRow.Builder addRowsBuilder() {
        return getRowsFieldBuilder().addBuilder(
            co.viewfinder.proto.DayMetadataPB.SummaryRow.getDefaultInstance());
      }
      /**
       * <code>repeated .SummaryRow rows = 1;</code>
       */
      public co.viewfinder.proto.DayMetadataPB.SummaryRow.Builder addRowsBuilder(
          int index) {
        return getRowsFieldBuilder().addBuilder(
            index, co.viewfinder.proto.DayMetadataPB.SummaryRow.getDefaultInstance());
      }
      /**
       * <code>repeated .SummaryRow rows = 1;</code>
       */
      public java.util.List<co.viewfinder.proto.DayMetadataPB.SummaryRow.Builder> 
           getRowsBuilderList() {
        return getRowsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.SummaryRow, co.viewfinder.proto.DayMetadataPB.SummaryRow.Builder, co.viewfinder.proto.DayMetadataPB.SummaryRowOrBuilder> 
          getRowsFieldBuilder() {
        if (rowsBuilder_ == null) {
          rowsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              co.viewfinder.proto.DayMetadataPB.SummaryRow, co.viewfinder.proto.DayMetadataPB.SummaryRow.Builder, co.viewfinder.proto.DayMetadataPB.SummaryRowOrBuilder>(
                  rows_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          rows_ = null;
        }
        return rowsBuilder_;
      }

      // optional int32 unviewed_count = 6;
      private int unviewedCount_ ;
      /**
       * <code>optional int32 unviewed_count = 6;</code>
       *
       * <pre>
       * Only applies to conversations
       * </pre>
       */
      public boolean hasUnviewedCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 unviewed_count = 6;</code>
       *
       * <pre>
       * Only applies to conversations
       * </pre>
       */
      public int getUnviewedCount() {
        return unviewedCount_;
      }
      /**
       * <code>optional int32 unviewed_count = 6;</code>
       *
       * <pre>
       * Only applies to conversations
       * </pre>
       */
      public Builder setUnviewedCount(int value) {
        bitField0_ |= 0x00000002;
        unviewedCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 unviewed_count = 6;</code>
       *
       * <pre>
       * Only applies to conversations
       * </pre>
       */
      public Builder clearUnviewedCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        unviewedCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 photo_count = 8;
      private int photoCount_ ;
      /**
       * <code>optional int32 photo_count = 8;</code>
       */
      public boolean hasPhotoCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 photo_count = 8;</code>
       */
      public int getPhotoCount() {
        return photoCount_;
      }
      /**
       * <code>optional int32 photo_count = 8;</code>
       */
      public Builder setPhotoCount(int value) {
        bitField0_ |= 0x00000004;
        photoCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 photo_count = 8;</code>
       */
      public Builder clearPhotoCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        photoCount_ = 0;
        onChanged();
        return this;
      }

      // optional float total_height = 9;
      private float totalHeight_ ;
      /**
       * <code>optional float total_height = 9;</code>
       */
      public boolean hasTotalHeight() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float total_height = 9;</code>
       */
      public float getTotalHeight() {
        return totalHeight_;
      }
      /**
       * <code>optional float total_height = 9;</code>
       */
      public Builder setTotalHeight(float value) {
        bitField0_ |= 0x00000008;
        totalHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float total_height = 9;</code>
       */
      public Builder clearTotalHeight() {
        bitField0_ = (bitField0_ & ~0x00000008);
        totalHeight_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SummaryMetadata)
    }

    static {
      defaultInstance = new SummaryMetadata(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SummaryMetadata)
  }

  public interface ViewpointSummaryMetadataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 viewpoint_id = 1;
    /**
     * <code>optional int64 viewpoint_id = 1;</code>
     *
     * <pre>
     * The viewpoint.
     * </pre>
     */
    boolean hasViewpointId();
    /**
     * <code>optional int64 viewpoint_id = 1;</code>
     *
     * <pre>
     * The viewpoint.
     * </pre>
     */
    long getViewpointId();

    // repeated .ViewpointSummaryMetadata.Contributor contributors = 2;
    /**
     * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
     *
     * <pre>
     * Contributors, sorted by most recent activity.
     * </pre>
     */
    java.util.List<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor> 
        getContributorsList();
    /**
     * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
     *
     * <pre>
     * Contributors, sorted by most recent activity.
     * </pre>
     */
    co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor getContributors(int index);
    /**
     * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
     *
     * <pre>
     * Contributors, sorted by most recent activity.
     * </pre>
     */
    int getContributorsCount();
    /**
     * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
     *
     * <pre>
     * Contributors, sorted by most recent activity.
     * </pre>
     */
    java.util.List<? extends co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ContributorOrBuilder> 
        getContributorsOrBuilderList();
    /**
     * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
     *
     * <pre>
     * Contributors, sorted by most recent activity.
     * </pre>
     */
    co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ContributorOrBuilder getContributorsOrBuilder(
        int index);

    // optional .DayPhoto cover_photo = 3;
    /**
     * <code>optional .DayPhoto cover_photo = 3;</code>
     *
     * <pre>
     * The cover photo.
     * </pre>
     */
    boolean hasCoverPhoto();
    /**
     * <code>optional .DayPhoto cover_photo = 3;</code>
     *
     * <pre>
     * The cover photo.
     * </pre>
     */
    co.viewfinder.proto.DayMetadataPB.DayPhoto getCoverPhoto();
    /**
     * <code>optional .DayPhoto cover_photo = 3;</code>
     *
     * <pre>
     * The cover photo.
     * </pre>
     */
    co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder getCoverPhotoOrBuilder();

    // repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;
    /**
     * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
     *
     * <pre>
     * Activity rows.
     * </pre>
     */
    java.util.List<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow> 
        getActivitiesList();
    /**
     * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
     *
     * <pre>
     * Activity rows.
     * </pre>
     */
    co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow getActivities(int index);
    /**
     * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
     *
     * <pre>
     * Activity rows.
     * </pre>
     */
    int getActivitiesCount();
    /**
     * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
     *
     * <pre>
     * Activity rows.
     * </pre>
     */
    java.util.List<? extends co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRowOrBuilder> 
        getActivitiesOrBuilderList();
    /**
     * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
     *
     * <pre>
     * Activity rows.
     * </pre>
     */
    co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRowOrBuilder getActivitiesOrBuilder(
        int index);

    // optional double earliest_timestamp = 5;
    /**
     * <code>optional double earliest_timestamp = 5;</code>
     *
     * <pre>
     * Initial activity timestamp.
     * </pre>
     */
    boolean hasEarliestTimestamp();
    /**
     * <code>optional double earliest_timestamp = 5;</code>
     *
     * <pre>
     * Initial activity timestamp.
     * </pre>
     */
    double getEarliestTimestamp();

    // optional double latest_timestamp = 6;
    /**
     * <code>optional double latest_timestamp = 6;</code>
     *
     * <pre>
     * Latest activity timestamp.
     * </pre>
     */
    boolean hasLatestTimestamp();
    /**
     * <code>optional double latest_timestamp = 6;</code>
     *
     * <pre>
     * Latest activity timestamp.
     * </pre>
     */
    double getLatestTimestamp();

    // optional int32 photo_count = 7;
    /**
     * <code>optional int32 photo_count = 7;</code>
     *
     * <pre>
     * Total count of photos in viewpoint.
     * </pre>
     */
    boolean hasPhotoCount();
    /**
     * <code>optional int32 photo_count = 7;</code>
     *
     * <pre>
     * Total count of photos in viewpoint.
     * </pre>
     */
    int getPhotoCount();

    // optional int32 comment_count = 8;
    /**
     * <code>optional int32 comment_count = 8;</code>
     *
     * <pre>
     * Total count of comments in viewpoint.
     * </pre>
     */
    boolean hasCommentCount();
    /**
     * <code>optional int32 comment_count = 8;</code>
     *
     * <pre>
     * Total count of comments in viewpoint.
     * </pre>
     */
    int getCommentCount();

    // optional int32 new_photo_count = 9;
    /**
     * <code>optional int32 new_photo_count = 9;</code>
     *
     * <pre>
     * Count of photos part of unviewed activities.
     * </pre>
     */
    boolean hasNewPhotoCount();
    /**
     * <code>optional int32 new_photo_count = 9;</code>
     *
     * <pre>
     * Count of photos part of unviewed activities.
     * </pre>
     */
    int getNewPhotoCount();

    // optional int32 new_comment_count = 10;
    /**
     * <code>optional int32 new_comment_count = 10;</code>
     *
     * <pre>
     * Count of comments part of unviewed activities.
     * </pre>
     */
    boolean hasNewCommentCount();
    /**
     * <code>optional int32 new_comment_count = 10;</code>
     *
     * <pre>
     * Count of comments part of unviewed activities.
     * </pre>
     */
    int getNewCommentCount();

    // optional bool provisional = 11;
    /**
     * <code>optional bool provisional = 11;</code>
     *
     * <pre>
     * True if the viewpoint is provisional.
     * </pre>
     */
    boolean hasProvisional();
    /**
     * <code>optional bool provisional = 11;</code>
     *
     * <pre>
     * True if the viewpoint is provisional.
     * </pre>
     */
    boolean getProvisional();

    // optional float scroll_to_row = 12;
    /**
     * <code>optional float scroll_to_row = 12;</code>
     *
     * <pre>
     * Scroll to this row when viewpoint is viewed.
     * </pre>
     */
    boolean hasScrollToRow();
    /**
     * <code>optional float scroll_to_row = 12;</code>
     *
     * <pre>
     * Scroll to this row when viewpoint is viewed.
     * </pre>
     */
    float getScrollToRow();
  }
  /**
   * Protobuf type {@code ViewpointSummaryMetadata}
   *
   * <pre>
   * Summary information for all activities in a viewpoint.
   * </pre>
   */
  public static final class ViewpointSummaryMetadata extends
      com.google.protobuf.GeneratedMessage
      implements ViewpointSummaryMetadataOrBuilder {
    // Use ViewpointSummaryMetadata.newBuilder() to construct.
    private ViewpointSummaryMetadata(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ViewpointSummaryMetadata(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ViewpointSummaryMetadata defaultInstance;
    public static ViewpointSummaryMetadata getDefaultInstance() {
      return defaultInstance;
    }

    public ViewpointSummaryMetadata getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ViewpointSummaryMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              viewpointId_ = input.readInt64();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                contributors_ = new java.util.ArrayList<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor>();
                mutable_bitField0_ |= 0x00000002;
              }
              contributors_.add(input.readMessage(co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = coverPhoto_.toBuilder();
              }
              coverPhoto_ = input.readMessage(co.viewfinder.proto.DayMetadataPB.DayPhoto.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(coverPhoto_);
                coverPhoto_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                activities_ = new java.util.ArrayList<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow>();
                mutable_bitField0_ |= 0x00000008;
              }
              activities_.add(input.readMessage(co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.PARSER, extensionRegistry));
              break;
            }
            case 41: {
              bitField0_ |= 0x00000004;
              earliestTimestamp_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000008;
              latestTimestamp_ = input.readDouble();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              photoCount_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              commentCount_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              newPhotoCount_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000080;
              newCommentCount_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000100;
              provisional_ = input.readBool();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000200;
              scrollToRow_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          contributors_ = java.util.Collections.unmodifiableList(contributors_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          activities_ = java.util.Collections.unmodifiableList(activities_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return co.viewfinder.proto.DayMetadataPB.internal_static_ViewpointSummaryMetadata_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return co.viewfinder.proto.DayMetadataPB.internal_static_ViewpointSummaryMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.class, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Builder.class);
    }

    public static com.google.protobuf.Parser<ViewpointSummaryMetadata> PARSER =
        new com.google.protobuf.AbstractParser<ViewpointSummaryMetadata>() {
      public ViewpointSummaryMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ViewpointSummaryMetadata(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ViewpointSummaryMetadata> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code ViewpointSummaryMetadata.ActivityRowType}
     */
    public enum ActivityRowType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>HEADER = 1;</code>
       */
      HEADER(0, 1),
      /**
       * <code>ACTIVITY = 2;</code>
       */
      ACTIVITY(1, 2),
      /**
       * <code>REPLY_ACTIVITY = 3;</code>
       */
      REPLY_ACTIVITY(2, 3),
      /**
       * <code>PHOTOS = 4;</code>
       */
      PHOTOS(3, 4),
      /**
       * <code>TITLE = 5;</code>
       */
      TITLE(4, 5),
      /**
       * <code>UPDATE = 6;</code>
       */
      UPDATE(5, 6),
      /**
       * <code>FOOTER = 7;</code>
       */
      FOOTER(6, 7),
      ;

      /**
       * <code>HEADER = 1;</code>
       */
      public static final int HEADER_VALUE = 1;
      /**
       * <code>ACTIVITY = 2;</code>
       */
      public static final int ACTIVITY_VALUE = 2;
      /**
       * <code>REPLY_ACTIVITY = 3;</code>
       */
      public static final int REPLY_ACTIVITY_VALUE = 3;
      /**
       * <code>PHOTOS = 4;</code>
       */
      public static final int PHOTOS_VALUE = 4;
      /**
       * <code>TITLE = 5;</code>
       */
      public static final int TITLE_VALUE = 5;
      /**
       * <code>UPDATE = 6;</code>
       */
      public static final int UPDATE_VALUE = 6;
      /**
       * <code>FOOTER = 7;</code>
       */
      public static final int FOOTER_VALUE = 7;


      public final int getNumber() { return value; }

      public static ActivityRowType valueOf(int value) {
        switch (value) {
          case 1: return HEADER;
          case 2: return ACTIVITY;
          case 3: return REPLY_ACTIVITY;
          case 4: return PHOTOS;
          case 5: return TITLE;
          case 6: return UPDATE;
          case 7: return FOOTER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ActivityRowType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ActivityRowType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ActivityRowType>() {
              public ActivityRowType findValueByNumber(int number) {
                return ActivityRowType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.getDescriptor().getEnumTypes().get(0);
      }

      private static final ActivityRowType[] VALUES = values();

      public static ActivityRowType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private ActivityRowType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:ViewpointSummaryMetadata.ActivityRowType)
    }

    public interface ContributorOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional int64 user_id = 1;
      /**
       * <code>optional int64 user_id = 1;</code>
       */
      boolean hasUserId();
      /**
       * <code>optional int64 user_id = 1;</code>
       */
      long getUserId();

      // optional double update_seq = 2;
      /**
       * <code>optional double update_seq = 2;</code>
       */
      boolean hasUpdateSeq();
      /**
       * <code>optional double update_seq = 2;</code>
       */
      double getUpdateSeq();

      // optional string identity = 3;
      /**
       * <code>optional string identity = 3;</code>
       *
       * <pre>
       * Identity is set only for contributors without user_ids; see comment in DayContributor above.
       * </pre>
       */
      boolean hasIdentity();
      /**
       * <code>optional string identity = 3;</code>
       *
       * <pre>
       * Identity is set only for contributors without user_ids; see comment in DayContributor above.
       * </pre>
       */
      java.lang.String getIdentity();
      /**
       * <code>optional string identity = 3;</code>
       *
       * <pre>
       * Identity is set only for contributors without user_ids; see comment in DayContributor above.
       * </pre>
       */
      com.google.protobuf.ByteString
          getIdentityBytes();
    }
    /**
     * Protobuf type {@code ViewpointSummaryMetadata.Contributor}
     */
    public static final class Contributor extends
        com.google.protobuf.GeneratedMessage
        implements ContributorOrBuilder {
      // Use Contributor.newBuilder() to construct.
      private Contributor(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Contributor(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Contributor defaultInstance;
      public static Contributor getDefaultInstance() {
        return defaultInstance;
      }

      public Contributor getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Contributor(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                userId_ = input.readInt64();
                break;
              }
              case 17: {
                bitField0_ |= 0x00000002;
                updateSeq_ = input.readDouble();
                break;
              }
              case 26: {
                bitField0_ |= 0x00000004;
                identity_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_ViewpointSummaryMetadata_Contributor_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_ViewpointSummaryMetadata_Contributor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor.class, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor.Builder.class);
      }

      public static com.google.protobuf.Parser<Contributor> PARSER =
          new com.google.protobuf.AbstractParser<Contributor>() {
        public Contributor parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Contributor(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Contributor> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional int64 user_id = 1;
      public static final int USER_ID_FIELD_NUMBER = 1;
      private long userId_;
      /**
       * <code>optional int64 user_id = 1;</code>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 user_id = 1;</code>
       */
      public long getUserId() {
        return userId_;
      }

      // optional double update_seq = 2;
      public static final int UPDATE_SEQ_FIELD_NUMBER = 2;
      private double updateSeq_;
      /**
       * <code>optional double update_seq = 2;</code>
       */
      public boolean hasUpdateSeq() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional double update_seq = 2;</code>
       */
      public double getUpdateSeq() {
        return updateSeq_;
      }

      // optional string identity = 3;
      public static final int IDENTITY_FIELD_NUMBER = 3;
      private java.lang.Object identity_;
      /**
       * <code>optional string identity = 3;</code>
       *
       * <pre>
       * Identity is set only for contributors without user_ids; see comment in DayContributor above.
       * </pre>
       */
      public boolean hasIdentity() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string identity = 3;</code>
       *
       * <pre>
       * Identity is set only for contributors without user_ids; see comment in DayContributor above.
       * </pre>
       */
      public java.lang.String getIdentity() {
        java.lang.Object ref = identity_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            identity_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string identity = 3;</code>
       *
       * <pre>
       * Identity is set only for contributors without user_ids; see comment in DayContributor above.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIdentityBytes() {
        java.lang.Object ref = identity_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          identity_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        userId_ = 0L;
        updateSeq_ = 0D;
        identity_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt64(1, userId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeDouble(2, updateSeq_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getIdentityBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, userId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, updateSeq_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getIdentityBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code ViewpointSummaryMetadata.Contributor}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ContributorOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return co.viewfinder.proto.DayMetadataPB.internal_static_ViewpointSummaryMetadata_Contributor_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return co.viewfinder.proto.DayMetadataPB.internal_static_ViewpointSummaryMetadata_Contributor_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor.class, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor.Builder.class);
        }

        // Construct using co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          userId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          updateSeq_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000002);
          identity_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return co.viewfinder.proto.DayMetadataPB.internal_static_ViewpointSummaryMetadata_Contributor_descriptor;
        }

        public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor getDefaultInstanceForType() {
          return co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor.getDefaultInstance();
        }

        public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor build() {
          co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor buildPartial() {
          co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor result = new co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.userId_ = userId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.updateSeq_ = updateSeq_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.identity_ = identity_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor) {
            return mergeFrom((co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor other) {
          if (other == co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor.getDefaultInstance()) return this;
          if (other.hasUserId()) {
            setUserId(other.getUserId());
          }
          if (other.hasUpdateSeq()) {
            setUpdateSeq(other.getUpdateSeq());
          }
          if (other.hasIdentity()) {
            bitField0_ |= 0x00000004;
            identity_ = other.identity_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional int64 user_id = 1;
        private long userId_ ;
        /**
         * <code>optional int64 user_id = 1;</code>
         */
        public boolean hasUserId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int64 user_id = 1;</code>
         */
        public long getUserId() {
          return userId_;
        }
        /**
         * <code>optional int64 user_id = 1;</code>
         */
        public Builder setUserId(long value) {
          bitField0_ |= 0x00000001;
          userId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 user_id = 1;</code>
         */
        public Builder clearUserId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          userId_ = 0L;
          onChanged();
          return this;
        }

        // optional double update_seq = 2;
        private double updateSeq_ ;
        /**
         * <code>optional double update_seq = 2;</code>
         */
        public boolean hasUpdateSeq() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional double update_seq = 2;</code>
         */
        public double getUpdateSeq() {
          return updateSeq_;
        }
        /**
         * <code>optional double update_seq = 2;</code>
         */
        public Builder setUpdateSeq(double value) {
          bitField0_ |= 0x00000002;
          updateSeq_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double update_seq = 2;</code>
         */
        public Builder clearUpdateSeq() {
          bitField0_ = (bitField0_ & ~0x00000002);
          updateSeq_ = 0D;
          onChanged();
          return this;
        }

        // optional string identity = 3;
        private java.lang.Object identity_ = "";
        /**
         * <code>optional string identity = 3;</code>
         *
         * <pre>
         * Identity is set only for contributors without user_ids; see comment in DayContributor above.
         * </pre>
         */
        public boolean hasIdentity() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string identity = 3;</code>
         *
         * <pre>
         * Identity is set only for contributors without user_ids; see comment in DayContributor above.
         * </pre>
         */
        public java.lang.String getIdentity() {
          java.lang.Object ref = identity_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            identity_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string identity = 3;</code>
         *
         * <pre>
         * Identity is set only for contributors without user_ids; see comment in DayContributor above.
         * </pre>
         */
        public com.google.protobuf.ByteString
            getIdentityBytes() {
          java.lang.Object ref = identity_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            identity_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string identity = 3;</code>
         *
         * <pre>
         * Identity is set only for contributors without user_ids; see comment in DayContributor above.
         * </pre>
         */
        public Builder setIdentity(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          identity_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string identity = 3;</code>
         *
         * <pre>
         * Identity is set only for contributors without user_ids; see comment in DayContributor above.
         * </pre>
         */
        public Builder clearIdentity() {
          bitField0_ = (bitField0_ & ~0x00000004);
          identity_ = getDefaultInstance().getIdentity();
          onChanged();
          return this;
        }
        /**
         * <code>optional string identity = 3;</code>
         *
         * <pre>
         * Identity is set only for contributors without user_ids; see comment in DayContributor above.
         * </pre>
         */
        public Builder setIdentityBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          identity_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:ViewpointSummaryMetadata.Contributor)
      }

      static {
        defaultInstance = new Contributor(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:ViewpointSummaryMetadata.Contributor)
    }

    public interface ActivityRowOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional int64 activity_id = 1;
      /**
       * <code>optional int64 activity_id = 1;</code>
       */
      boolean hasActivityId();
      /**
       * <code>optional int64 activity_id = 1;</code>
       */
      long getActivityId();

      // repeated int64 user_ids = 2;
      /**
       * <code>repeated int64 user_ids = 2;</code>
       *
       * <pre>
       * Contributors to activity. If share_new or add_followers, will
       * include all added followers as well.
       * </pre>
       */
      java.util.List<java.lang.Long> getUserIdsList();
      /**
       * <code>repeated int64 user_ids = 2;</code>
       *
       * <pre>
       * Contributors to activity. If share_new or add_followers, will
       * include all added followers as well.
       * </pre>
       */
      int getUserIdsCount();
      /**
       * <code>repeated int64 user_ids = 2;</code>
       *
       * <pre>
       * Contributors to activity. If share_new or add_followers, will
       * include all added followers as well.
       * </pre>
       */
      long getUserIds(int index);

      // repeated string user_identities = 14;
      /**
       * <code>repeated string user_identities = 14;</code>
       *
       * <pre>
       * Identities of any added followers without user ids.
       * </pre>
       */
      java.util.List<java.lang.String>
      getUserIdentitiesList();
      /**
       * <code>repeated string user_identities = 14;</code>
       *
       * <pre>
       * Identities of any added followers without user ids.
       * </pre>
       */
      int getUserIdentitiesCount();
      /**
       * <code>repeated string user_identities = 14;</code>
       *
       * <pre>
       * Identities of any added followers without user ids.
       * </pre>
       */
      java.lang.String getUserIdentities(int index);
      /**
       * <code>repeated string user_identities = 14;</code>
       *
       * <pre>
       * Identities of any added followers without user ids.
       * </pre>
       */
      com.google.protobuf.ByteString
          getUserIdentitiesBytes(int index);

      // optional double timestamp = 3;
      /**
       * <code>optional double timestamp = 3;</code>
       *
       * <pre>
       * Timestamp of activity.
       * </pre>
       */
      boolean hasTimestamp();
      /**
       * <code>optional double timestamp = 3;</code>
       *
       * <pre>
       * Timestamp of activity.
       * </pre>
       */
      double getTimestamp();

      // optional .ViewpointSummaryMetadata.ActivityRowType type = 4;
      /**
       * <code>optional .ViewpointSummaryMetadata.ActivityRowType type = 4;</code>
       *
       * <pre>
       * Type of activity row.
       * </pre>
       */
      boolean hasType();
      /**
       * <code>optional .ViewpointSummaryMetadata.ActivityRowType type = 4;</code>
       *
       * <pre>
       * Type of activity row.
       * </pre>
       */
      co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRowType getType();

      // optional float height = 5;
      /**
       * <code>optional float height = 5;</code>
       *
       * <pre>
       * Height of the activity row.
       * </pre>
       */
      boolean hasHeight();
      /**
       * <code>optional float height = 5;</code>
       *
       * <pre>
       * Height of the activity row.
       * </pre>
       */
      float getHeight();

      // optional float position = 6;
      /**
       * <code>optional float position = 6;</code>
       *
       * <pre>
       * Position of the activity row in the full viewpoint.
       * </pre>
       */
      boolean hasPosition();
      /**
       * <code>optional float position = 6;</code>
       *
       * <pre>
       * Position of the activity row in the full viewpoint.
       * </pre>
       */
      float getPosition();

      // optional int32 row_count = 7;
      /**
       * <code>optional int32 row_count = 7;</code>
       *
       * <pre>
       * Index of row, counting combined thread comments as a single row.
       * This is used to alternate background row colors.
       * </pre>
       */
      boolean hasRowCount();
      /**
       * <code>optional int32 row_count = 7;</code>
       *
       * <pre>
       * Index of row, counting combined thread comments as a single row.
       * This is used to alternate background row colors.
       * </pre>
       */
      int getRowCount();

      // optional int64 update_seq = 8;
      /**
       * <code>optional int64 update_seq = 8;</code>
       *
       * <pre>
       * True if activity is unviewed.
       * </pre>
       */
      boolean hasUpdateSeq();
      /**
       * <code>optional int64 update_seq = 8;</code>
       *
       * <pre>
       * True if activity is unviewed.
       * </pre>
       */
      long getUpdateSeq();

      // optional bool pending = 9;
      /**
       * <code>optional bool pending = 9;</code>
       *
       * <pre>
       * True if activity is pending.
       * </pre>
       */
      boolean hasPending();
      /**
       * <code>optional bool pending = 9;</code>
       *
       * <pre>
       * True if activity is pending.
       * </pre>
       */
      boolean getPending();

      // optional int32 thread_type = 10;
      /**
       * <code>optional int32 thread_type = 10;</code>
       *
       * <pre>
       * Type of thread connecting this activity to previous or next activity.
       * </pre>
       */
      boolean hasThreadType();
      /**
       * <code>optional int32 thread_type = 10;</code>
       *
       * <pre>
       * Type of thread connecting this activity to previous or next activity.
       * </pre>
       */
      int getThreadType();

      // repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
       *
       * <pre>
       * List of photos in this activity (applies to share_{new|existing}.
       * This list is filtered based on preceeding activities which may
       * already have included the same photo ids. There will be exactly
       * one photo here in the case of REPLY_ACTIVITY.
       * </pre>
       */
      java.util.List<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo> 
          getPhotosList();
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
       *
       * <pre>
       * List of photos in this activity (applies to share_{new|existing}.
       * This list is filtered based on preceeding activities which may
       * already have included the same photo ids. There will be exactly
       * one photo here in the case of REPLY_ACTIVITY.
       * </pre>
       */
      co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo getPhotos(int index);
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
       *
       * <pre>
       * List of photos in this activity (applies to share_{new|existing}.
       * This list is filtered based on preceeding activities which may
       * already have included the same photo ids. There will be exactly
       * one photo here in the case of REPLY_ACTIVITY.
       * </pre>
       */
      int getPhotosCount();
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
       *
       * <pre>
       * List of photos in this activity (applies to share_{new|existing}.
       * This list is filtered based on preceeding activities which may
       * already have included the same photo ids. There will be exactly
       * one photo here in the case of REPLY_ACTIVITY.
       * </pre>
       */
      java.util.List<? extends co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.PhotoOrBuilder> 
          getPhotosOrBuilderList();
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
       *
       * <pre>
       * List of photos in this activity (applies to share_{new|existing}.
       * This list is filtered based on preceeding activities which may
       * already have included the same photo ids. There will be exactly
       * one photo here in the case of REPLY_ACTIVITY.
       * </pre>
       */
      co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.PhotoOrBuilder getPhotosOrBuilder(
          int index);

      // optional bool is_comment = 12;
      /**
       * <code>optional bool is_comment = 12;</code>
       *
       * <pre>
       * True if this activity is a comment.
       * </pre>
       */
      boolean hasIsComment();
      /**
       * <code>optional bool is_comment = 12;</code>
       *
       * <pre>
       * True if this activity is a comment.
       * </pre>
       */
      boolean getIsComment();

      // optional bool is_provisional_hint = 13;
      /**
       * <code>optional bool is_provisional_hint = 13;</code>
       *
       * <pre>
       * True if the activity is provisional (i.e. hasn't been cleared for send
       * to the server). Necessary so that we can properly enter edit mode when a
       * viewpoint with provisional activities is viewed.
       *
       * TODO(peter): Would it be better to just have a "provisional_activity_id"
       * field in ViewpointSummaryMetadata.
       * </pre>
       */
      boolean hasIsProvisionalHint();
      /**
       * <code>optional bool is_provisional_hint = 13;</code>
       *
       * <pre>
       * True if the activity is provisional (i.e. hasn't been cleared for send
       * to the server). Necessary so that we can properly enter edit mode when a
       * viewpoint with provisional activities is viewed.
       *
       * TODO(peter): Would it be better to just have a "provisional_activity_id"
       * field in ViewpointSummaryMetadata.
       * </pre>
       */
      boolean getIsProvisionalHint();
    }
    /**
     * Protobuf type {@code ViewpointSummaryMetadata.ActivityRow}
     */
    public static final class ActivityRow extends
        com.google.protobuf.GeneratedMessage
        implements ActivityRowOrBuilder {
      // Use ActivityRow.newBuilder() to construct.
      private ActivityRow(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private ActivityRow(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final ActivityRow defaultInstance;
      public static ActivityRow getDefaultInstance() {
        return defaultInstance;
      }

      public ActivityRow getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private ActivityRow(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                activityId_ = input.readInt64();
                break;
              }
              case 16: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  userIds_ = new java.util.ArrayList<java.lang.Long>();
                  mutable_bitField0_ |= 0x00000002;
                }
                userIds_.add(input.readInt64());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  userIds_ = new java.util.ArrayList<java.lang.Long>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  userIds_.add(input.readInt64());
                }
                input.popLimit(limit);
                break;
              }
              case 25: {
                bitField0_ |= 0x00000002;
                timestamp_ = input.readDouble();
                break;
              }
              case 32: {
                int rawValue = input.readEnum();
                co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRowType value = co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRowType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(4, rawValue);
                } else {
                  bitField0_ |= 0x00000004;
                  type_ = value;
                }
                break;
              }
              case 45: {
                bitField0_ |= 0x00000008;
                height_ = input.readFloat();
                break;
              }
              case 53: {
                bitField0_ |= 0x00000010;
                position_ = input.readFloat();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000020;
                rowCount_ = input.readInt32();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000040;
                updateSeq_ = input.readInt64();
                break;
              }
              case 72: {
                bitField0_ |= 0x00000080;
                pending_ = input.readBool();
                break;
              }
              case 80: {
                bitField0_ |= 0x00000100;
                threadType_ = input.readInt32();
                break;
              }
              case 90: {
                if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                  photos_ = new java.util.ArrayList<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo>();
                  mutable_bitField0_ |= 0x00000800;
                }
                photos_.add(input.readMessage(co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo.PARSER, extensionRegistry));
                break;
              }
              case 96: {
                bitField0_ |= 0x00000200;
                isComment_ = input.readBool();
                break;
              }
              case 104: {
                bitField0_ |= 0x00000400;
                isProvisionalHint_ = input.readBool();
                break;
              }
              case 114: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  userIdentities_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000004;
                }
                userIdentities_.add(input.readBytes());
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            userIds_ = java.util.Collections.unmodifiableList(userIds_);
          }
          if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
            photos_ = java.util.Collections.unmodifiableList(photos_);
          }
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            userIdentities_ = new com.google.protobuf.UnmodifiableLazyStringList(userIdentities_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_ViewpointSummaryMetadata_ActivityRow_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_ViewpointSummaryMetadata_ActivityRow_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.class, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Builder.class);
      }

      public static com.google.protobuf.Parser<ActivityRow> PARSER =
          new com.google.protobuf.AbstractParser<ActivityRow>() {
        public ActivityRow parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ActivityRow(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<ActivityRow> getParserForType() {
        return PARSER;
      }

      public interface PhotoOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional int64 photo_id = 1;
        /**
         * <code>optional int64 photo_id = 1;</code>
         */
        boolean hasPhotoId();
        /**
         * <code>optional int64 photo_id = 1;</code>
         */
        long getPhotoId();

        // optional int64 episode_id = 2;
        /**
         * <code>optional int64 episode_id = 2;</code>
         */
        boolean hasEpisodeId();
        /**
         * <code>optional int64 episode_id = 2;</code>
         */
        long getEpisodeId();

        // optional int64 parent_episode_id = 3;
        /**
         * <code>optional int64 parent_episode_id = 3;</code>
         */
        boolean hasParentEpisodeId();
        /**
         * <code>optional int64 parent_episode_id = 3;</code>
         */
        long getParentEpisodeId();
      }
      /**
       * Protobuf type {@code ViewpointSummaryMetadata.ActivityRow.Photo}
       */
      public static final class Photo extends
          com.google.protobuf.GeneratedMessage
          implements PhotoOrBuilder {
        // Use Photo.newBuilder() to construct.
        private Photo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Photo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Photo defaultInstance;
        public static Photo getDefaultInstance() {
          return defaultInstance;
        }

        public Photo getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Photo(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  photoId_ = input.readInt64();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  episodeId_ = input.readInt64();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  parentEpisodeId_ = input.readInt64();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return co.viewfinder.proto.DayMetadataPB.internal_static_ViewpointSummaryMetadata_ActivityRow_Photo_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return co.viewfinder.proto.DayMetadataPB.internal_static_ViewpointSummaryMetadata_ActivityRow_Photo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo.class, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo.Builder.class);
        }

        public static com.google.protobuf.Parser<Photo> PARSER =
            new com.google.protobuf.AbstractParser<Photo>() {
          public Photo parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Photo(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Photo> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // optional int64 photo_id = 1;
        public static final int PHOTO_ID_FIELD_NUMBER = 1;
        private long photoId_;
        /**
         * <code>optional int64 photo_id = 1;</code>
         */
        public boolean hasPhotoId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int64 photo_id = 1;</code>
         */
        public long getPhotoId() {
          return photoId_;
        }

        // optional int64 episode_id = 2;
        public static final int EPISODE_ID_FIELD_NUMBER = 2;
        private long episodeId_;
        /**
         * <code>optional int64 episode_id = 2;</code>
         */
        public boolean hasEpisodeId() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int64 episode_id = 2;</code>
         */
        public long getEpisodeId() {
          return episodeId_;
        }

        // optional int64 parent_episode_id = 3;
        public static final int PARENT_EPISODE_ID_FIELD_NUMBER = 3;
        private long parentEpisodeId_;
        /**
         * <code>optional int64 parent_episode_id = 3;</code>
         */
        public boolean hasParentEpisodeId() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int64 parent_episode_id = 3;</code>
         */
        public long getParentEpisodeId() {
          return parentEpisodeId_;
        }

        private void initFields() {
          photoId_ = 0L;
          episodeId_ = 0L;
          parentEpisodeId_ = 0L;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeInt64(1, photoId_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeInt64(2, episodeId_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeInt64(3, parentEpisodeId_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt64Size(1, photoId_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt64Size(2, episodeId_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt64Size(3, parentEpisodeId_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code ViewpointSummaryMetadata.ActivityRow.Photo}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.PhotoOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return co.viewfinder.proto.DayMetadataPB.internal_static_ViewpointSummaryMetadata_ActivityRow_Photo_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return co.viewfinder.proto.DayMetadataPB.internal_static_ViewpointSummaryMetadata_ActivityRow_Photo_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo.class, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo.Builder.class);
          }

          // Construct using co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            photoId_ = 0L;
            bitField0_ = (bitField0_ & ~0x00000001);
            episodeId_ = 0L;
            bitField0_ = (bitField0_ & ~0x00000002);
            parentEpisodeId_ = 0L;
            bitField0_ = (bitField0_ & ~0x00000004);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return co.viewfinder.proto.DayMetadataPB.internal_static_ViewpointSummaryMetadata_ActivityRow_Photo_descriptor;
          }

          public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo getDefaultInstanceForType() {
            return co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo.getDefaultInstance();
          }

          public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo build() {
            co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo buildPartial() {
            co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo result = new co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.photoId_ = photoId_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.episodeId_ = episodeId_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            result.parentEpisodeId_ = parentEpisodeId_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo) {
              return mergeFrom((co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo other) {
            if (other == co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo.getDefaultInstance()) return this;
            if (other.hasPhotoId()) {
              setPhotoId(other.getPhotoId());
            }
            if (other.hasEpisodeId()) {
              setEpisodeId(other.getEpisodeId());
            }
            if (other.hasParentEpisodeId()) {
              setParentEpisodeId(other.getParentEpisodeId());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional int64 photo_id = 1;
          private long photoId_ ;
          /**
           * <code>optional int64 photo_id = 1;</code>
           */
          public boolean hasPhotoId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional int64 photo_id = 1;</code>
           */
          public long getPhotoId() {
            return photoId_;
          }
          /**
           * <code>optional int64 photo_id = 1;</code>
           */
          public Builder setPhotoId(long value) {
            bitField0_ |= 0x00000001;
            photoId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int64 photo_id = 1;</code>
           */
          public Builder clearPhotoId() {
            bitField0_ = (bitField0_ & ~0x00000001);
            photoId_ = 0L;
            onChanged();
            return this;
          }

          // optional int64 episode_id = 2;
          private long episodeId_ ;
          /**
           * <code>optional int64 episode_id = 2;</code>
           */
          public boolean hasEpisodeId() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional int64 episode_id = 2;</code>
           */
          public long getEpisodeId() {
            return episodeId_;
          }
          /**
           * <code>optional int64 episode_id = 2;</code>
           */
          public Builder setEpisodeId(long value) {
            bitField0_ |= 0x00000002;
            episodeId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int64 episode_id = 2;</code>
           */
          public Builder clearEpisodeId() {
            bitField0_ = (bitField0_ & ~0x00000002);
            episodeId_ = 0L;
            onChanged();
            return this;
          }

          // optional int64 parent_episode_id = 3;
          private long parentEpisodeId_ ;
          /**
           * <code>optional int64 parent_episode_id = 3;</code>
           */
          public boolean hasParentEpisodeId() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional int64 parent_episode_id = 3;</code>
           */
          public long getParentEpisodeId() {
            return parentEpisodeId_;
          }
          /**
           * <code>optional int64 parent_episode_id = 3;</code>
           */
          public Builder setParentEpisodeId(long value) {
            bitField0_ |= 0x00000004;
            parentEpisodeId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int64 parent_episode_id = 3;</code>
           */
          public Builder clearParentEpisodeId() {
            bitField0_ = (bitField0_ & ~0x00000004);
            parentEpisodeId_ = 0L;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:ViewpointSummaryMetadata.ActivityRow.Photo)
        }

        static {
          defaultInstance = new Photo(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:ViewpointSummaryMetadata.ActivityRow.Photo)
      }

      private int bitField0_;
      // optional int64 activity_id = 1;
      public static final int ACTIVITY_ID_FIELD_NUMBER = 1;
      private long activityId_;
      /**
       * <code>optional int64 activity_id = 1;</code>
       */
      public boolean hasActivityId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 activity_id = 1;</code>
       */
      public long getActivityId() {
        return activityId_;
      }

      // repeated int64 user_ids = 2;
      public static final int USER_IDS_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Long> userIds_;
      /**
       * <code>repeated int64 user_ids = 2;</code>
       *
       * <pre>
       * Contributors to activity. If share_new or add_followers, will
       * include all added followers as well.
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getUserIdsList() {
        return userIds_;
      }
      /**
       * <code>repeated int64 user_ids = 2;</code>
       *
       * <pre>
       * Contributors to activity. If share_new or add_followers, will
       * include all added followers as well.
       * </pre>
       */
      public int getUserIdsCount() {
        return userIds_.size();
      }
      /**
       * <code>repeated int64 user_ids = 2;</code>
       *
       * <pre>
       * Contributors to activity. If share_new or add_followers, will
       * include all added followers as well.
       * </pre>
       */
      public long getUserIds(int index) {
        return userIds_.get(index);
      }

      // repeated string user_identities = 14;
      public static final int USER_IDENTITIES_FIELD_NUMBER = 14;
      private com.google.protobuf.LazyStringList userIdentities_;
      /**
       * <code>repeated string user_identities = 14;</code>
       *
       * <pre>
       * Identities of any added followers without user ids.
       * </pre>
       */
      public java.util.List<java.lang.String>
          getUserIdentitiesList() {
        return userIdentities_;
      }
      /**
       * <code>repeated string user_identities = 14;</code>
       *
       * <pre>
       * Identities of any added followers without user ids.
       * </pre>
       */
      public int getUserIdentitiesCount() {
        return userIdentities_.size();
      }
      /**
       * <code>repeated string user_identities = 14;</code>
       *
       * <pre>
       * Identities of any added followers without user ids.
       * </pre>
       */
      public java.lang.String getUserIdentities(int index) {
        return userIdentities_.get(index);
      }
      /**
       * <code>repeated string user_identities = 14;</code>
       *
       * <pre>
       * Identities of any added followers without user ids.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserIdentitiesBytes(int index) {
        return userIdentities_.getByteString(index);
      }

      // optional double timestamp = 3;
      public static final int TIMESTAMP_FIELD_NUMBER = 3;
      private double timestamp_;
      /**
       * <code>optional double timestamp = 3;</code>
       *
       * <pre>
       * Timestamp of activity.
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional double timestamp = 3;</code>
       *
       * <pre>
       * Timestamp of activity.
       * </pre>
       */
      public double getTimestamp() {
        return timestamp_;
      }

      // optional .ViewpointSummaryMetadata.ActivityRowType type = 4;
      public static final int TYPE_FIELD_NUMBER = 4;
      private co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRowType type_;
      /**
       * <code>optional .ViewpointSummaryMetadata.ActivityRowType type = 4;</code>
       *
       * <pre>
       * Type of activity row.
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .ViewpointSummaryMetadata.ActivityRowType type = 4;</code>
       *
       * <pre>
       * Type of activity row.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRowType getType() {
        return type_;
      }

      // optional float height = 5;
      public static final int HEIGHT_FIELD_NUMBER = 5;
      private float height_;
      /**
       * <code>optional float height = 5;</code>
       *
       * <pre>
       * Height of the activity row.
       * </pre>
       */
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float height = 5;</code>
       *
       * <pre>
       * Height of the activity row.
       * </pre>
       */
      public float getHeight() {
        return height_;
      }

      // optional float position = 6;
      public static final int POSITION_FIELD_NUMBER = 6;
      private float position_;
      /**
       * <code>optional float position = 6;</code>
       *
       * <pre>
       * Position of the activity row in the full viewpoint.
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float position = 6;</code>
       *
       * <pre>
       * Position of the activity row in the full viewpoint.
       * </pre>
       */
      public float getPosition() {
        return position_;
      }

      // optional int32 row_count = 7;
      public static final int ROW_COUNT_FIELD_NUMBER = 7;
      private int rowCount_;
      /**
       * <code>optional int32 row_count = 7;</code>
       *
       * <pre>
       * Index of row, counting combined thread comments as a single row.
       * This is used to alternate background row colors.
       * </pre>
       */
      public boolean hasRowCount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 row_count = 7;</code>
       *
       * <pre>
       * Index of row, counting combined thread comments as a single row.
       * This is used to alternate background row colors.
       * </pre>
       */
      public int getRowCount() {
        return rowCount_;
      }

      // optional int64 update_seq = 8;
      public static final int UPDATE_SEQ_FIELD_NUMBER = 8;
      private long updateSeq_;
      /**
       * <code>optional int64 update_seq = 8;</code>
       *
       * <pre>
       * True if activity is unviewed.
       * </pre>
       */
      public boolean hasUpdateSeq() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 update_seq = 8;</code>
       *
       * <pre>
       * True if activity is unviewed.
       * </pre>
       */
      public long getUpdateSeq() {
        return updateSeq_;
      }

      // optional bool pending = 9;
      public static final int PENDING_FIELD_NUMBER = 9;
      private boolean pending_;
      /**
       * <code>optional bool pending = 9;</code>
       *
       * <pre>
       * True if activity is pending.
       * </pre>
       */
      public boolean hasPending() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool pending = 9;</code>
       *
       * <pre>
       * True if activity is pending.
       * </pre>
       */
      public boolean getPending() {
        return pending_;
      }

      // optional int32 thread_type = 10;
      public static final int THREAD_TYPE_FIELD_NUMBER = 10;
      private int threadType_;
      /**
       * <code>optional int32 thread_type = 10;</code>
       *
       * <pre>
       * Type of thread connecting this activity to previous or next activity.
       * </pre>
       */
      public boolean hasThreadType() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 thread_type = 10;</code>
       *
       * <pre>
       * Type of thread connecting this activity to previous or next activity.
       * </pre>
       */
      public int getThreadType() {
        return threadType_;
      }

      // repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;
      public static final int PHOTOS_FIELD_NUMBER = 11;
      private java.util.List<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo> photos_;
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
       *
       * <pre>
       * List of photos in this activity (applies to share_{new|existing}.
       * This list is filtered based on preceeding activities which may
       * already have included the same photo ids. There will be exactly
       * one photo here in the case of REPLY_ACTIVITY.
       * </pre>
       */
      public java.util.List<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo> getPhotosList() {
        return photos_;
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
       *
       * <pre>
       * List of photos in this activity (applies to share_{new|existing}.
       * This list is filtered based on preceeding activities which may
       * already have included the same photo ids. There will be exactly
       * one photo here in the case of REPLY_ACTIVITY.
       * </pre>
       */
      public java.util.List<? extends co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.PhotoOrBuilder> 
          getPhotosOrBuilderList() {
        return photos_;
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
       *
       * <pre>
       * List of photos in this activity (applies to share_{new|existing}.
       * This list is filtered based on preceeding activities which may
       * already have included the same photo ids. There will be exactly
       * one photo here in the case of REPLY_ACTIVITY.
       * </pre>
       */
      public int getPhotosCount() {
        return photos_.size();
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
       *
       * <pre>
       * List of photos in this activity (applies to share_{new|existing}.
       * This list is filtered based on preceeding activities which may
       * already have included the same photo ids. There will be exactly
       * one photo here in the case of REPLY_ACTIVITY.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo getPhotos(int index) {
        return photos_.get(index);
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
       *
       * <pre>
       * List of photos in this activity (applies to share_{new|existing}.
       * This list is filtered based on preceeding activities which may
       * already have included the same photo ids. There will be exactly
       * one photo here in the case of REPLY_ACTIVITY.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.PhotoOrBuilder getPhotosOrBuilder(
          int index) {
        return photos_.get(index);
      }

      // optional bool is_comment = 12;
      public static final int IS_COMMENT_FIELD_NUMBER = 12;
      private boolean isComment_;
      /**
       * <code>optional bool is_comment = 12;</code>
       *
       * <pre>
       * True if this activity is a comment.
       * </pre>
       */
      public boolean hasIsComment() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool is_comment = 12;</code>
       *
       * <pre>
       * True if this activity is a comment.
       * </pre>
       */
      public boolean getIsComment() {
        return isComment_;
      }

      // optional bool is_provisional_hint = 13;
      public static final int IS_PROVISIONAL_HINT_FIELD_NUMBER = 13;
      private boolean isProvisionalHint_;
      /**
       * <code>optional bool is_provisional_hint = 13;</code>
       *
       * <pre>
       * True if the activity is provisional (i.e. hasn't been cleared for send
       * to the server). Necessary so that we can properly enter edit mode when a
       * viewpoint with provisional activities is viewed.
       *
       * TODO(peter): Would it be better to just have a "provisional_activity_id"
       * field in ViewpointSummaryMetadata.
       * </pre>
       */
      public boolean hasIsProvisionalHint() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool is_provisional_hint = 13;</code>
       *
       * <pre>
       * True if the activity is provisional (i.e. hasn't been cleared for send
       * to the server). Necessary so that we can properly enter edit mode when a
       * viewpoint with provisional activities is viewed.
       *
       * TODO(peter): Would it be better to just have a "provisional_activity_id"
       * field in ViewpointSummaryMetadata.
       * </pre>
       */
      public boolean getIsProvisionalHint() {
        return isProvisionalHint_;
      }

      private void initFields() {
        activityId_ = 0L;
        userIds_ = java.util.Collections.emptyList();
        userIdentities_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        timestamp_ = 0D;
        type_ = co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRowType.HEADER;
        height_ = 0F;
        position_ = 0F;
        rowCount_ = 0;
        updateSeq_ = 0L;
        pending_ = false;
        threadType_ = 0;
        photos_ = java.util.Collections.emptyList();
        isComment_ = false;
        isProvisionalHint_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt64(1, activityId_);
        }
        for (int i = 0; i < userIds_.size(); i++) {
          output.writeInt64(2, userIds_.get(i));
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeDouble(3, timestamp_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeEnum(4, type_.getNumber());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeFloat(5, height_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeFloat(6, position_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeInt32(7, rowCount_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeInt64(8, updateSeq_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeBool(9, pending_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeInt32(10, threadType_);
        }
        for (int i = 0; i < photos_.size(); i++) {
          output.writeMessage(11, photos_.get(i));
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeBool(12, isComment_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeBool(13, isProvisionalHint_);
        }
        for (int i = 0; i < userIdentities_.size(); i++) {
          output.writeBytes(14, userIdentities_.getByteString(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, activityId_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < userIds_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt64SizeNoTag(userIds_.get(i));
          }
          size += dataSize;
          size += 1 * getUserIdsList().size();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, timestamp_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, type_.getNumber());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(5, height_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(6, position_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(7, rowCount_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(8, updateSeq_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(9, pending_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10, threadType_);
        }
        for (int i = 0; i < photos_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, photos_.get(i));
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(12, isComment_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(13, isProvisionalHint_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < userIdentities_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(userIdentities_.getByteString(i));
          }
          size += dataSize;
          size += 1 * getUserIdentitiesList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code ViewpointSummaryMetadata.ActivityRow}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return co.viewfinder.proto.DayMetadataPB.internal_static_ViewpointSummaryMetadata_ActivityRow_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return co.viewfinder.proto.DayMetadataPB.internal_static_ViewpointSummaryMetadata_ActivityRow_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.class, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Builder.class);
        }

        // Construct using co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPhotosFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          activityId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          userIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          userIdentities_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000004);
          timestamp_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000008);
          type_ = co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRowType.HEADER;
          bitField0_ = (bitField0_ & ~0x00000010);
          height_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000020);
          position_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000040);
          rowCount_ = 0;
          bitField0_ = (bitField0_ & ~0x00000080);
          updateSeq_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000100);
          pending_ = false;
          bitField0_ = (bitField0_ & ~0x00000200);
          threadType_ = 0;
          bitField0_ = (bitField0_ & ~0x00000400);
          if (photosBuilder_ == null) {
            photos_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            photosBuilder_.clear();
          }
          isComment_ = false;
          bitField0_ = (bitField0_ & ~0x00001000);
          isProvisionalHint_ = false;
          bitField0_ = (bitField0_ & ~0x00002000);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return co.viewfinder.proto.DayMetadataPB.internal_static_ViewpointSummaryMetadata_ActivityRow_descriptor;
        }

        public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow getDefaultInstanceForType() {
          return co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.getDefaultInstance();
        }

        public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow build() {
          co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow buildPartial() {
          co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow result = new co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.activityId_ = activityId_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            userIds_ = java.util.Collections.unmodifiableList(userIds_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.userIds_ = userIds_;
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            userIdentities_ = new com.google.protobuf.UnmodifiableLazyStringList(
                userIdentities_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.userIdentities_ = userIdentities_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000002;
          }
          result.timestamp_ = timestamp_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000004;
          }
          result.type_ = type_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000008;
          }
          result.height_ = height_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000010;
          }
          result.position_ = position_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000020;
          }
          result.rowCount_ = rowCount_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000040;
          }
          result.updateSeq_ = updateSeq_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000080;
          }
          result.pending_ = pending_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000100;
          }
          result.threadType_ = threadType_;
          if (photosBuilder_ == null) {
            if (((bitField0_ & 0x00000800) == 0x00000800)) {
              photos_ = java.util.Collections.unmodifiableList(photos_);
              bitField0_ = (bitField0_ & ~0x00000800);
            }
            result.photos_ = photos_;
          } else {
            result.photos_ = photosBuilder_.build();
          }
          if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
            to_bitField0_ |= 0x00000200;
          }
          result.isComment_ = isComment_;
          if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
            to_bitField0_ |= 0x00000400;
          }
          result.isProvisionalHint_ = isProvisionalHint_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow) {
            return mergeFrom((co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow other) {
          if (other == co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.getDefaultInstance()) return this;
          if (other.hasActivityId()) {
            setActivityId(other.getActivityId());
          }
          if (!other.userIds_.isEmpty()) {
            if (userIds_.isEmpty()) {
              userIds_ = other.userIds_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureUserIdsIsMutable();
              userIds_.addAll(other.userIds_);
            }
            onChanged();
          }
          if (!other.userIdentities_.isEmpty()) {
            if (userIdentities_.isEmpty()) {
              userIdentities_ = other.userIdentities_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureUserIdentitiesIsMutable();
              userIdentities_.addAll(other.userIdentities_);
            }
            onChanged();
          }
          if (other.hasTimestamp()) {
            setTimestamp(other.getTimestamp());
          }
          if (other.hasType()) {
            setType(other.getType());
          }
          if (other.hasHeight()) {
            setHeight(other.getHeight());
          }
          if (other.hasPosition()) {
            setPosition(other.getPosition());
          }
          if (other.hasRowCount()) {
            setRowCount(other.getRowCount());
          }
          if (other.hasUpdateSeq()) {
            setUpdateSeq(other.getUpdateSeq());
          }
          if (other.hasPending()) {
            setPending(other.getPending());
          }
          if (other.hasThreadType()) {
            setThreadType(other.getThreadType());
          }
          if (photosBuilder_ == null) {
            if (!other.photos_.isEmpty()) {
              if (photos_.isEmpty()) {
                photos_ = other.photos_;
                bitField0_ = (bitField0_ & ~0x00000800);
              } else {
                ensurePhotosIsMutable();
                photos_.addAll(other.photos_);
              }
              onChanged();
            }
          } else {
            if (!other.photos_.isEmpty()) {
              if (photosBuilder_.isEmpty()) {
                photosBuilder_.dispose();
                photosBuilder_ = null;
                photos_ = other.photos_;
                bitField0_ = (bitField0_ & ~0x00000800);
                photosBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getPhotosFieldBuilder() : null;
              } else {
                photosBuilder_.addAllMessages(other.photos_);
              }
            }
          }
          if (other.hasIsComment()) {
            setIsComment(other.getIsComment());
          }
          if (other.hasIsProvisionalHint()) {
            setIsProvisionalHint(other.getIsProvisionalHint());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional int64 activity_id = 1;
        private long activityId_ ;
        /**
         * <code>optional int64 activity_id = 1;</code>
         */
        public boolean hasActivityId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int64 activity_id = 1;</code>
         */
        public long getActivityId() {
          return activityId_;
        }
        /**
         * <code>optional int64 activity_id = 1;</code>
         */
        public Builder setActivityId(long value) {
          bitField0_ |= 0x00000001;
          activityId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 activity_id = 1;</code>
         */
        public Builder clearActivityId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          activityId_ = 0L;
          onChanged();
          return this;
        }

        // repeated int64 user_ids = 2;
        private java.util.List<java.lang.Long> userIds_ = java.util.Collections.emptyList();
        private void ensureUserIdsIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            userIds_ = new java.util.ArrayList<java.lang.Long>(userIds_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated int64 user_ids = 2;</code>
         *
         * <pre>
         * Contributors to activity. If share_new or add_followers, will
         * include all added followers as well.
         * </pre>
         */
        public java.util.List<java.lang.Long>
            getUserIdsList() {
          return java.util.Collections.unmodifiableList(userIds_);
        }
        /**
         * <code>repeated int64 user_ids = 2;</code>
         *
         * <pre>
         * Contributors to activity. If share_new or add_followers, will
         * include all added followers as well.
         * </pre>
         */
        public int getUserIdsCount() {
          return userIds_.size();
        }
        /**
         * <code>repeated int64 user_ids = 2;</code>
         *
         * <pre>
         * Contributors to activity. If share_new or add_followers, will
         * include all added followers as well.
         * </pre>
         */
        public long getUserIds(int index) {
          return userIds_.get(index);
        }
        /**
         * <code>repeated int64 user_ids = 2;</code>
         *
         * <pre>
         * Contributors to activity. If share_new or add_followers, will
         * include all added followers as well.
         * </pre>
         */
        public Builder setUserIds(
            int index, long value) {
          ensureUserIdsIsMutable();
          userIds_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int64 user_ids = 2;</code>
         *
         * <pre>
         * Contributors to activity. If share_new or add_followers, will
         * include all added followers as well.
         * </pre>
         */
        public Builder addUserIds(long value) {
          ensureUserIdsIsMutable();
          userIds_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int64 user_ids = 2;</code>
         *
         * <pre>
         * Contributors to activity. If share_new or add_followers, will
         * include all added followers as well.
         * </pre>
         */
        public Builder addAllUserIds(
            java.lang.Iterable<? extends java.lang.Long> values) {
          ensureUserIdsIsMutable();
          super.addAll(values, userIds_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int64 user_ids = 2;</code>
         *
         * <pre>
         * Contributors to activity. If share_new or add_followers, will
         * include all added followers as well.
         * </pre>
         */
        public Builder clearUserIds() {
          userIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        // repeated string user_identities = 14;
        private com.google.protobuf.LazyStringList userIdentities_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureUserIdentitiesIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            userIdentities_ = new com.google.protobuf.LazyStringArrayList(userIdentities_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <code>repeated string user_identities = 14;</code>
         *
         * <pre>
         * Identities of any added followers without user ids.
         * </pre>
         */
        public java.util.List<java.lang.String>
            getUserIdentitiesList() {
          return java.util.Collections.unmodifiableList(userIdentities_);
        }
        /**
         * <code>repeated string user_identities = 14;</code>
         *
         * <pre>
         * Identities of any added followers without user ids.
         * </pre>
         */
        public int getUserIdentitiesCount() {
          return userIdentities_.size();
        }
        /**
         * <code>repeated string user_identities = 14;</code>
         *
         * <pre>
         * Identities of any added followers without user ids.
         * </pre>
         */
        public java.lang.String getUserIdentities(int index) {
          return userIdentities_.get(index);
        }
        /**
         * <code>repeated string user_identities = 14;</code>
         *
         * <pre>
         * Identities of any added followers without user ids.
         * </pre>
         */
        public com.google.protobuf.ByteString
            getUserIdentitiesBytes(int index) {
          return userIdentities_.getByteString(index);
        }
        /**
         * <code>repeated string user_identities = 14;</code>
         *
         * <pre>
         * Identities of any added followers without user ids.
         * </pre>
         */
        public Builder setUserIdentities(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureUserIdentitiesIsMutable();
          userIdentities_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string user_identities = 14;</code>
         *
         * <pre>
         * Identities of any added followers without user ids.
         * </pre>
         */
        public Builder addUserIdentities(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureUserIdentitiesIsMutable();
          userIdentities_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string user_identities = 14;</code>
         *
         * <pre>
         * Identities of any added followers without user ids.
         * </pre>
         */
        public Builder addAllUserIdentities(
            java.lang.Iterable<java.lang.String> values) {
          ensureUserIdentitiesIsMutable();
          super.addAll(values, userIdentities_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string user_identities = 14;</code>
         *
         * <pre>
         * Identities of any added followers without user ids.
         * </pre>
         */
        public Builder clearUserIdentities() {
          userIdentities_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string user_identities = 14;</code>
         *
         * <pre>
         * Identities of any added followers without user ids.
         * </pre>
         */
        public Builder addUserIdentitiesBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureUserIdentitiesIsMutable();
          userIdentities_.add(value);
          onChanged();
          return this;
        }

        // optional double timestamp = 3;
        private double timestamp_ ;
        /**
         * <code>optional double timestamp = 3;</code>
         *
         * <pre>
         * Timestamp of activity.
         * </pre>
         */
        public boolean hasTimestamp() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional double timestamp = 3;</code>
         *
         * <pre>
         * Timestamp of activity.
         * </pre>
         */
        public double getTimestamp() {
          return timestamp_;
        }
        /**
         * <code>optional double timestamp = 3;</code>
         *
         * <pre>
         * Timestamp of activity.
         * </pre>
         */
        public Builder setTimestamp(double value) {
          bitField0_ |= 0x00000008;
          timestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double timestamp = 3;</code>
         *
         * <pre>
         * Timestamp of activity.
         * </pre>
         */
        public Builder clearTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000008);
          timestamp_ = 0D;
          onChanged();
          return this;
        }

        // optional .ViewpointSummaryMetadata.ActivityRowType type = 4;
        private co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRowType type_ = co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRowType.HEADER;
        /**
         * <code>optional .ViewpointSummaryMetadata.ActivityRowType type = 4;</code>
         *
         * <pre>
         * Type of activity row.
         * </pre>
         */
        public boolean hasType() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional .ViewpointSummaryMetadata.ActivityRowType type = 4;</code>
         *
         * <pre>
         * Type of activity row.
         * </pre>
         */
        public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRowType getType() {
          return type_;
        }
        /**
         * <code>optional .ViewpointSummaryMetadata.ActivityRowType type = 4;</code>
         *
         * <pre>
         * Type of activity row.
         * </pre>
         */
        public Builder setType(co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRowType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000010;
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .ViewpointSummaryMetadata.ActivityRowType type = 4;</code>
         *
         * <pre>
         * Type of activity row.
         * </pre>
         */
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000010);
          type_ = co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRowType.HEADER;
          onChanged();
          return this;
        }

        // optional float height = 5;
        private float height_ ;
        /**
         * <code>optional float height = 5;</code>
         *
         * <pre>
         * Height of the activity row.
         * </pre>
         */
        public boolean hasHeight() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional float height = 5;</code>
         *
         * <pre>
         * Height of the activity row.
         * </pre>
         */
        public float getHeight() {
          return height_;
        }
        /**
         * <code>optional float height = 5;</code>
         *
         * <pre>
         * Height of the activity row.
         * </pre>
         */
        public Builder setHeight(float value) {
          bitField0_ |= 0x00000020;
          height_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float height = 5;</code>
         *
         * <pre>
         * Height of the activity row.
         * </pre>
         */
        public Builder clearHeight() {
          bitField0_ = (bitField0_ & ~0x00000020);
          height_ = 0F;
          onChanged();
          return this;
        }

        // optional float position = 6;
        private float position_ ;
        /**
         * <code>optional float position = 6;</code>
         *
         * <pre>
         * Position of the activity row in the full viewpoint.
         * </pre>
         */
        public boolean hasPosition() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional float position = 6;</code>
         *
         * <pre>
         * Position of the activity row in the full viewpoint.
         * </pre>
         */
        public float getPosition() {
          return position_;
        }
        /**
         * <code>optional float position = 6;</code>
         *
         * <pre>
         * Position of the activity row in the full viewpoint.
         * </pre>
         */
        public Builder setPosition(float value) {
          bitField0_ |= 0x00000040;
          position_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float position = 6;</code>
         *
         * <pre>
         * Position of the activity row in the full viewpoint.
         * </pre>
         */
        public Builder clearPosition() {
          bitField0_ = (bitField0_ & ~0x00000040);
          position_ = 0F;
          onChanged();
          return this;
        }

        // optional int32 row_count = 7;
        private int rowCount_ ;
        /**
         * <code>optional int32 row_count = 7;</code>
         *
         * <pre>
         * Index of row, counting combined thread comments as a single row.
         * This is used to alternate background row colors.
         * </pre>
         */
        public boolean hasRowCount() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional int32 row_count = 7;</code>
         *
         * <pre>
         * Index of row, counting combined thread comments as a single row.
         * This is used to alternate background row colors.
         * </pre>
         */
        public int getRowCount() {
          return rowCount_;
        }
        /**
         * <code>optional int32 row_count = 7;</code>
         *
         * <pre>
         * Index of row, counting combined thread comments as a single row.
         * This is used to alternate background row colors.
         * </pre>
         */
        public Builder setRowCount(int value) {
          bitField0_ |= 0x00000080;
          rowCount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_count = 7;</code>
         *
         * <pre>
         * Index of row, counting combined thread comments as a single row.
         * This is used to alternate background row colors.
         * </pre>
         */
        public Builder clearRowCount() {
          bitField0_ = (bitField0_ & ~0x00000080);
          rowCount_ = 0;
          onChanged();
          return this;
        }

        // optional int64 update_seq = 8;
        private long updateSeq_ ;
        /**
         * <code>optional int64 update_seq = 8;</code>
         *
         * <pre>
         * True if activity is unviewed.
         * </pre>
         */
        public boolean hasUpdateSeq() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional int64 update_seq = 8;</code>
         *
         * <pre>
         * True if activity is unviewed.
         * </pre>
         */
        public long getUpdateSeq() {
          return updateSeq_;
        }
        /**
         * <code>optional int64 update_seq = 8;</code>
         *
         * <pre>
         * True if activity is unviewed.
         * </pre>
         */
        public Builder setUpdateSeq(long value) {
          bitField0_ |= 0x00000100;
          updateSeq_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 update_seq = 8;</code>
         *
         * <pre>
         * True if activity is unviewed.
         * </pre>
         */
        public Builder clearUpdateSeq() {
          bitField0_ = (bitField0_ & ~0x00000100);
          updateSeq_ = 0L;
          onChanged();
          return this;
        }

        // optional bool pending = 9;
        private boolean pending_ ;
        /**
         * <code>optional bool pending = 9;</code>
         *
         * <pre>
         * True if activity is pending.
         * </pre>
         */
        public boolean hasPending() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional bool pending = 9;</code>
         *
         * <pre>
         * True if activity is pending.
         * </pre>
         */
        public boolean getPending() {
          return pending_;
        }
        /**
         * <code>optional bool pending = 9;</code>
         *
         * <pre>
         * True if activity is pending.
         * </pre>
         */
        public Builder setPending(boolean value) {
          bitField0_ |= 0x00000200;
          pending_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool pending = 9;</code>
         *
         * <pre>
         * True if activity is pending.
         * </pre>
         */
        public Builder clearPending() {
          bitField0_ = (bitField0_ & ~0x00000200);
          pending_ = false;
          onChanged();
          return this;
        }

        // optional int32 thread_type = 10;
        private int threadType_ ;
        /**
         * <code>optional int32 thread_type = 10;</code>
         *
         * <pre>
         * Type of thread connecting this activity to previous or next activity.
         * </pre>
         */
        public boolean hasThreadType() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional int32 thread_type = 10;</code>
         *
         * <pre>
         * Type of thread connecting this activity to previous or next activity.
         * </pre>
         */
        public int getThreadType() {
          return threadType_;
        }
        /**
         * <code>optional int32 thread_type = 10;</code>
         *
         * <pre>
         * Type of thread connecting this activity to previous or next activity.
         * </pre>
         */
        public Builder setThreadType(int value) {
          bitField0_ |= 0x00000400;
          threadType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 thread_type = 10;</code>
         *
         * <pre>
         * Type of thread connecting this activity to previous or next activity.
         * </pre>
         */
        public Builder clearThreadType() {
          bitField0_ = (bitField0_ & ~0x00000400);
          threadType_ = 0;
          onChanged();
          return this;
        }

        // repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;
        private java.util.List<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo> photos_ =
          java.util.Collections.emptyList();
        private void ensurePhotosIsMutable() {
          if (!((bitField0_ & 0x00000800) == 0x00000800)) {
            photos_ = new java.util.ArrayList<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo>(photos_);
            bitField0_ |= 0x00000800;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo.Builder, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.PhotoOrBuilder> photosBuilder_;

        /**
         * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
         *
         * <pre>
         * List of photos in this activity (applies to share_{new|existing}.
         * This list is filtered based on preceeding activities which may
         * already have included the same photo ids. There will be exactly
         * one photo here in the case of REPLY_ACTIVITY.
         * </pre>
         */
        public java.util.List<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo> getPhotosList() {
          if (photosBuilder_ == null) {
            return java.util.Collections.unmodifiableList(photos_);
          } else {
            return photosBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
         *
         * <pre>
         * List of photos in this activity (applies to share_{new|existing}.
         * This list is filtered based on preceeding activities which may
         * already have included the same photo ids. There will be exactly
         * one photo here in the case of REPLY_ACTIVITY.
         * </pre>
         */
        public int getPhotosCount() {
          if (photosBuilder_ == null) {
            return photos_.size();
          } else {
            return photosBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
         *
         * <pre>
         * List of photos in this activity (applies to share_{new|existing}.
         * This list is filtered based on preceeding activities which may
         * already have included the same photo ids. There will be exactly
         * one photo here in the case of REPLY_ACTIVITY.
         * </pre>
         */
        public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo getPhotos(int index) {
          if (photosBuilder_ == null) {
            return photos_.get(index);
          } else {
            return photosBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
         *
         * <pre>
         * List of photos in this activity (applies to share_{new|existing}.
         * This list is filtered based on preceeding activities which may
         * already have included the same photo ids. There will be exactly
         * one photo here in the case of REPLY_ACTIVITY.
         * </pre>
         */
        public Builder setPhotos(
            int index, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo value) {
          if (photosBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePhotosIsMutable();
            photos_.set(index, value);
            onChanged();
          } else {
            photosBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
         *
         * <pre>
         * List of photos in this activity (applies to share_{new|existing}.
         * This list is filtered based on preceeding activities which may
         * already have included the same photo ids. There will be exactly
         * one photo here in the case of REPLY_ACTIVITY.
         * </pre>
         */
        public Builder setPhotos(
            int index, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo.Builder builderForValue) {
          if (photosBuilder_ == null) {
            ensurePhotosIsMutable();
            photos_.set(index, builderForValue.build());
            onChanged();
          } else {
            photosBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
         *
         * <pre>
         * List of photos in this activity (applies to share_{new|existing}.
         * This list is filtered based on preceeding activities which may
         * already have included the same photo ids. There will be exactly
         * one photo here in the case of REPLY_ACTIVITY.
         * </pre>
         */
        public Builder addPhotos(co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo value) {
          if (photosBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePhotosIsMutable();
            photos_.add(value);
            onChanged();
          } else {
            photosBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
         *
         * <pre>
         * List of photos in this activity (applies to share_{new|existing}.
         * This list is filtered based on preceeding activities which may
         * already have included the same photo ids. There will be exactly
         * one photo here in the case of REPLY_ACTIVITY.
         * </pre>
         */
        public Builder addPhotos(
            int index, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo value) {
          if (photosBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePhotosIsMutable();
            photos_.add(index, value);
            onChanged();
          } else {
            photosBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
         *
         * <pre>
         * List of photos in this activity (applies to share_{new|existing}.
         * This list is filtered based on preceeding activities which may
         * already have included the same photo ids. There will be exactly
         * one photo here in the case of REPLY_ACTIVITY.
         * </pre>
         */
        public Builder addPhotos(
            co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo.Builder builderForValue) {
          if (photosBuilder_ == null) {
            ensurePhotosIsMutable();
            photos_.add(builderForValue.build());
            onChanged();
          } else {
            photosBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
         *
         * <pre>
         * List of photos in this activity (applies to share_{new|existing}.
         * This list is filtered based on preceeding activities which may
         * already have included the same photo ids. There will be exactly
         * one photo here in the case of REPLY_ACTIVITY.
         * </pre>
         */
        public Builder addPhotos(
            int index, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo.Builder builderForValue) {
          if (photosBuilder_ == null) {
            ensurePhotosIsMutable();
            photos_.add(index, builderForValue.build());
            onChanged();
          } else {
            photosBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
         *
         * <pre>
         * List of photos in this activity (applies to share_{new|existing}.
         * This list is filtered based on preceeding activities which may
         * already have included the same photo ids. There will be exactly
         * one photo here in the case of REPLY_ACTIVITY.
         * </pre>
         */
        public Builder addAllPhotos(
            java.lang.Iterable<? extends co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo> values) {
          if (photosBuilder_ == null) {
            ensurePhotosIsMutable();
            super.addAll(values, photos_);
            onChanged();
          } else {
            photosBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
         *
         * <pre>
         * List of photos in this activity (applies to share_{new|existing}.
         * This list is filtered based on preceeding activities which may
         * already have included the same photo ids. There will be exactly
         * one photo here in the case of REPLY_ACTIVITY.
         * </pre>
         */
        public Builder clearPhotos() {
          if (photosBuilder_ == null) {
            photos_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000800);
            onChanged();
          } else {
            photosBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
         *
         * <pre>
         * List of photos in this activity (applies to share_{new|existing}.
         * This list is filtered based on preceeding activities which may
         * already have included the same photo ids. There will be exactly
         * one photo here in the case of REPLY_ACTIVITY.
         * </pre>
         */
        public Builder removePhotos(int index) {
          if (photosBuilder_ == null) {
            ensurePhotosIsMutable();
            photos_.remove(index);
            onChanged();
          } else {
            photosBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
         *
         * <pre>
         * List of photos in this activity (applies to share_{new|existing}.
         * This list is filtered based on preceeding activities which may
         * already have included the same photo ids. There will be exactly
         * one photo here in the case of REPLY_ACTIVITY.
         * </pre>
         */
        public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo.Builder getPhotosBuilder(
            int index) {
          return getPhotosFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
         *
         * <pre>
         * List of photos in this activity (applies to share_{new|existing}.
         * This list is filtered based on preceeding activities which may
         * already have included the same photo ids. There will be exactly
         * one photo here in the case of REPLY_ACTIVITY.
         * </pre>
         */
        public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.PhotoOrBuilder getPhotosOrBuilder(
            int index) {
          if (photosBuilder_ == null) {
            return photos_.get(index);  } else {
            return photosBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
         *
         * <pre>
         * List of photos in this activity (applies to share_{new|existing}.
         * This list is filtered based on preceeding activities which may
         * already have included the same photo ids. There will be exactly
         * one photo here in the case of REPLY_ACTIVITY.
         * </pre>
         */
        public java.util.List<? extends co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.PhotoOrBuilder> 
             getPhotosOrBuilderList() {
          if (photosBuilder_ != null) {
            return photosBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(photos_);
          }
        }
        /**
         * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
         *
         * <pre>
         * List of photos in this activity (applies to share_{new|existing}.
         * This list is filtered based on preceeding activities which may
         * already have included the same photo ids. There will be exactly
         * one photo here in the case of REPLY_ACTIVITY.
         * </pre>
         */
        public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo.Builder addPhotosBuilder() {
          return getPhotosFieldBuilder().addBuilder(
              co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo.getDefaultInstance());
        }
        /**
         * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
         *
         * <pre>
         * List of photos in this activity (applies to share_{new|existing}.
         * This list is filtered based on preceeding activities which may
         * already have included the same photo ids. There will be exactly
         * one photo here in the case of REPLY_ACTIVITY.
         * </pre>
         */
        public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo.Builder addPhotosBuilder(
            int index) {
          return getPhotosFieldBuilder().addBuilder(
              index, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo.getDefaultInstance());
        }
        /**
         * <code>repeated .ViewpointSummaryMetadata.ActivityRow.Photo photos = 11;</code>
         *
         * <pre>
         * List of photos in this activity (applies to share_{new|existing}.
         * This list is filtered based on preceeding activities which may
         * already have included the same photo ids. There will be exactly
         * one photo here in the case of REPLY_ACTIVITY.
         * </pre>
         */
        public java.util.List<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo.Builder> 
             getPhotosBuilderList() {
          return getPhotosFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo.Builder, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.PhotoOrBuilder> 
            getPhotosFieldBuilder() {
          if (photosBuilder_ == null) {
            photosBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Photo.Builder, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.PhotoOrBuilder>(
                    photos_,
                    ((bitField0_ & 0x00000800) == 0x00000800),
                    getParentForChildren(),
                    isClean());
            photos_ = null;
          }
          return photosBuilder_;
        }

        // optional bool is_comment = 12;
        private boolean isComment_ ;
        /**
         * <code>optional bool is_comment = 12;</code>
         *
         * <pre>
         * True if this activity is a comment.
         * </pre>
         */
        public boolean hasIsComment() {
          return ((bitField0_ & 0x00001000) == 0x00001000);
        }
        /**
         * <code>optional bool is_comment = 12;</code>
         *
         * <pre>
         * True if this activity is a comment.
         * </pre>
         */
        public boolean getIsComment() {
          return isComment_;
        }
        /**
         * <code>optional bool is_comment = 12;</code>
         *
         * <pre>
         * True if this activity is a comment.
         * </pre>
         */
        public Builder setIsComment(boolean value) {
          bitField0_ |= 0x00001000;
          isComment_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool is_comment = 12;</code>
         *
         * <pre>
         * True if this activity is a comment.
         * </pre>
         */
        public Builder clearIsComment() {
          bitField0_ = (bitField0_ & ~0x00001000);
          isComment_ = false;
          onChanged();
          return this;
        }

        // optional bool is_provisional_hint = 13;
        private boolean isProvisionalHint_ ;
        /**
         * <code>optional bool is_provisional_hint = 13;</code>
         *
         * <pre>
         * True if the activity is provisional (i.e. hasn't been cleared for send
         * to the server). Necessary so that we can properly enter edit mode when a
         * viewpoint with provisional activities is viewed.
         *
         * TODO(peter): Would it be better to just have a "provisional_activity_id"
         * field in ViewpointSummaryMetadata.
         * </pre>
         */
        public boolean hasIsProvisionalHint() {
          return ((bitField0_ & 0x00002000) == 0x00002000);
        }
        /**
         * <code>optional bool is_provisional_hint = 13;</code>
         *
         * <pre>
         * True if the activity is provisional (i.e. hasn't been cleared for send
         * to the server). Necessary so that we can properly enter edit mode when a
         * viewpoint with provisional activities is viewed.
         *
         * TODO(peter): Would it be better to just have a "provisional_activity_id"
         * field in ViewpointSummaryMetadata.
         * </pre>
         */
        public boolean getIsProvisionalHint() {
          return isProvisionalHint_;
        }
        /**
         * <code>optional bool is_provisional_hint = 13;</code>
         *
         * <pre>
         * True if the activity is provisional (i.e. hasn't been cleared for send
         * to the server). Necessary so that we can properly enter edit mode when a
         * viewpoint with provisional activities is viewed.
         *
         * TODO(peter): Would it be better to just have a "provisional_activity_id"
         * field in ViewpointSummaryMetadata.
         * </pre>
         */
        public Builder setIsProvisionalHint(boolean value) {
          bitField0_ |= 0x00002000;
          isProvisionalHint_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool is_provisional_hint = 13;</code>
         *
         * <pre>
         * True if the activity is provisional (i.e. hasn't been cleared for send
         * to the server). Necessary so that we can properly enter edit mode when a
         * viewpoint with provisional activities is viewed.
         *
         * TODO(peter): Would it be better to just have a "provisional_activity_id"
         * field in ViewpointSummaryMetadata.
         * </pre>
         */
        public Builder clearIsProvisionalHint() {
          bitField0_ = (bitField0_ & ~0x00002000);
          isProvisionalHint_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:ViewpointSummaryMetadata.ActivityRow)
      }

      static {
        defaultInstance = new ActivityRow(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:ViewpointSummaryMetadata.ActivityRow)
    }

    private int bitField0_;
    // optional int64 viewpoint_id = 1;
    public static final int VIEWPOINT_ID_FIELD_NUMBER = 1;
    private long viewpointId_;
    /**
     * <code>optional int64 viewpoint_id = 1;</code>
     *
     * <pre>
     * The viewpoint.
     * </pre>
     */
    public boolean hasViewpointId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 viewpoint_id = 1;</code>
     *
     * <pre>
     * The viewpoint.
     * </pre>
     */
    public long getViewpointId() {
      return viewpointId_;
    }

    // repeated .ViewpointSummaryMetadata.Contributor contributors = 2;
    public static final int CONTRIBUTORS_FIELD_NUMBER = 2;
    private java.util.List<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor> contributors_;
    /**
     * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
     *
     * <pre>
     * Contributors, sorted by most recent activity.
     * </pre>
     */
    public java.util.List<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor> getContributorsList() {
      return contributors_;
    }
    /**
     * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
     *
     * <pre>
     * Contributors, sorted by most recent activity.
     * </pre>
     */
    public java.util.List<? extends co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ContributorOrBuilder> 
        getContributorsOrBuilderList() {
      return contributors_;
    }
    /**
     * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
     *
     * <pre>
     * Contributors, sorted by most recent activity.
     * </pre>
     */
    public int getContributorsCount() {
      return contributors_.size();
    }
    /**
     * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
     *
     * <pre>
     * Contributors, sorted by most recent activity.
     * </pre>
     */
    public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor getContributors(int index) {
      return contributors_.get(index);
    }
    /**
     * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
     *
     * <pre>
     * Contributors, sorted by most recent activity.
     * </pre>
     */
    public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ContributorOrBuilder getContributorsOrBuilder(
        int index) {
      return contributors_.get(index);
    }

    // optional .DayPhoto cover_photo = 3;
    public static final int COVER_PHOTO_FIELD_NUMBER = 3;
    private co.viewfinder.proto.DayMetadataPB.DayPhoto coverPhoto_;
    /**
     * <code>optional .DayPhoto cover_photo = 3;</code>
     *
     * <pre>
     * The cover photo.
     * </pre>
     */
    public boolean hasCoverPhoto() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .DayPhoto cover_photo = 3;</code>
     *
     * <pre>
     * The cover photo.
     * </pre>
     */
    public co.viewfinder.proto.DayMetadataPB.DayPhoto getCoverPhoto() {
      return coverPhoto_;
    }
    /**
     * <code>optional .DayPhoto cover_photo = 3;</code>
     *
     * <pre>
     * The cover photo.
     * </pre>
     */
    public co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder getCoverPhotoOrBuilder() {
      return coverPhoto_;
    }

    // repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;
    public static final int ACTIVITIES_FIELD_NUMBER = 4;
    private java.util.List<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow> activities_;
    /**
     * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
     *
     * <pre>
     * Activity rows.
     * </pre>
     */
    public java.util.List<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow> getActivitiesList() {
      return activities_;
    }
    /**
     * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
     *
     * <pre>
     * Activity rows.
     * </pre>
     */
    public java.util.List<? extends co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRowOrBuilder> 
        getActivitiesOrBuilderList() {
      return activities_;
    }
    /**
     * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
     *
     * <pre>
     * Activity rows.
     * </pre>
     */
    public int getActivitiesCount() {
      return activities_.size();
    }
    /**
     * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
     *
     * <pre>
     * Activity rows.
     * </pre>
     */
    public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow getActivities(int index) {
      return activities_.get(index);
    }
    /**
     * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
     *
     * <pre>
     * Activity rows.
     * </pre>
     */
    public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRowOrBuilder getActivitiesOrBuilder(
        int index) {
      return activities_.get(index);
    }

    // optional double earliest_timestamp = 5;
    public static final int EARLIEST_TIMESTAMP_FIELD_NUMBER = 5;
    private double earliestTimestamp_;
    /**
     * <code>optional double earliest_timestamp = 5;</code>
     *
     * <pre>
     * Initial activity timestamp.
     * </pre>
     */
    public boolean hasEarliestTimestamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional double earliest_timestamp = 5;</code>
     *
     * <pre>
     * Initial activity timestamp.
     * </pre>
     */
    public double getEarliestTimestamp() {
      return earliestTimestamp_;
    }

    // optional double latest_timestamp = 6;
    public static final int LATEST_TIMESTAMP_FIELD_NUMBER = 6;
    private double latestTimestamp_;
    /**
     * <code>optional double latest_timestamp = 6;</code>
     *
     * <pre>
     * Latest activity timestamp.
     * </pre>
     */
    public boolean hasLatestTimestamp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional double latest_timestamp = 6;</code>
     *
     * <pre>
     * Latest activity timestamp.
     * </pre>
     */
    public double getLatestTimestamp() {
      return latestTimestamp_;
    }

    // optional int32 photo_count = 7;
    public static final int PHOTO_COUNT_FIELD_NUMBER = 7;
    private int photoCount_;
    /**
     * <code>optional int32 photo_count = 7;</code>
     *
     * <pre>
     * Total count of photos in viewpoint.
     * </pre>
     */
    public boolean hasPhotoCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 photo_count = 7;</code>
     *
     * <pre>
     * Total count of photos in viewpoint.
     * </pre>
     */
    public int getPhotoCount() {
      return photoCount_;
    }

    // optional int32 comment_count = 8;
    public static final int COMMENT_COUNT_FIELD_NUMBER = 8;
    private int commentCount_;
    /**
     * <code>optional int32 comment_count = 8;</code>
     *
     * <pre>
     * Total count of comments in viewpoint.
     * </pre>
     */
    public boolean hasCommentCount() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 comment_count = 8;</code>
     *
     * <pre>
     * Total count of comments in viewpoint.
     * </pre>
     */
    public int getCommentCount() {
      return commentCount_;
    }

    // optional int32 new_photo_count = 9;
    public static final int NEW_PHOTO_COUNT_FIELD_NUMBER = 9;
    private int newPhotoCount_;
    /**
     * <code>optional int32 new_photo_count = 9;</code>
     *
     * <pre>
     * Count of photos part of unviewed activities.
     * </pre>
     */
    public boolean hasNewPhotoCount() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 new_photo_count = 9;</code>
     *
     * <pre>
     * Count of photos part of unviewed activities.
     * </pre>
     */
    public int getNewPhotoCount() {
      return newPhotoCount_;
    }

    // optional int32 new_comment_count = 10;
    public static final int NEW_COMMENT_COUNT_FIELD_NUMBER = 10;
    private int newCommentCount_;
    /**
     * <code>optional int32 new_comment_count = 10;</code>
     *
     * <pre>
     * Count of comments part of unviewed activities.
     * </pre>
     */
    public boolean hasNewCommentCount() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 new_comment_count = 10;</code>
     *
     * <pre>
     * Count of comments part of unviewed activities.
     * </pre>
     */
    public int getNewCommentCount() {
      return newCommentCount_;
    }

    // optional bool provisional = 11;
    public static final int PROVISIONAL_FIELD_NUMBER = 11;
    private boolean provisional_;
    /**
     * <code>optional bool provisional = 11;</code>
     *
     * <pre>
     * True if the viewpoint is provisional.
     * </pre>
     */
    public boolean hasProvisional() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool provisional = 11;</code>
     *
     * <pre>
     * True if the viewpoint is provisional.
     * </pre>
     */
    public boolean getProvisional() {
      return provisional_;
    }

    // optional float scroll_to_row = 12;
    public static final int SCROLL_TO_ROW_FIELD_NUMBER = 12;
    private float scrollToRow_;
    /**
     * <code>optional float scroll_to_row = 12;</code>
     *
     * <pre>
     * Scroll to this row when viewpoint is viewed.
     * </pre>
     */
    public boolean hasScrollToRow() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float scroll_to_row = 12;</code>
     *
     * <pre>
     * Scroll to this row when viewpoint is viewed.
     * </pre>
     */
    public float getScrollToRow() {
      return scrollToRow_;
    }

    private void initFields() {
      viewpointId_ = 0L;
      contributors_ = java.util.Collections.emptyList();
      coverPhoto_ = co.viewfinder.proto.DayMetadataPB.DayPhoto.getDefaultInstance();
      activities_ = java.util.Collections.emptyList();
      earliestTimestamp_ = 0D;
      latestTimestamp_ = 0D;
      photoCount_ = 0;
      commentCount_ = 0;
      newPhotoCount_ = 0;
      newCommentCount_ = 0;
      provisional_ = false;
      scrollToRow_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, viewpointId_);
      }
      for (int i = 0; i < contributors_.size(); i++) {
        output.writeMessage(2, contributors_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, coverPhoto_);
      }
      for (int i = 0; i < activities_.size(); i++) {
        output.writeMessage(4, activities_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(5, earliestTimestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(6, latestTimestamp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(7, photoCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(8, commentCount_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(9, newPhotoCount_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(10, newCommentCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(11, provisional_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(12, scrollToRow_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, viewpointId_);
      }
      for (int i = 0; i < contributors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, contributors_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, coverPhoto_);
      }
      for (int i = 0; i < activities_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, activities_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, earliestTimestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, latestTimestamp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, photoCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, commentCount_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, newPhotoCount_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, newCommentCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, provisional_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, scrollToRow_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ViewpointSummaryMetadata}
     *
     * <pre>
     * Summary information for all activities in a viewpoint.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_ViewpointSummaryMetadata_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_ViewpointSummaryMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.class, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Builder.class);
      }

      // Construct using co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getContributorsFieldBuilder();
          getCoverPhotoFieldBuilder();
          getActivitiesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        viewpointId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (contributorsBuilder_ == null) {
          contributors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          contributorsBuilder_.clear();
        }
        if (coverPhotoBuilder_ == null) {
          coverPhoto_ = co.viewfinder.proto.DayMetadataPB.DayPhoto.getDefaultInstance();
        } else {
          coverPhotoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (activitiesBuilder_ == null) {
          activities_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          activitiesBuilder_.clear();
        }
        earliestTimestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        latestTimestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        photoCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        commentCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        newPhotoCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        newCommentCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        provisional_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        scrollToRow_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return co.viewfinder.proto.DayMetadataPB.internal_static_ViewpointSummaryMetadata_descriptor;
      }

      public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata getDefaultInstanceForType() {
        return co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.getDefaultInstance();
      }

      public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata build() {
        co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata buildPartial() {
        co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata result = new co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.viewpointId_ = viewpointId_;
        if (contributorsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            contributors_ = java.util.Collections.unmodifiableList(contributors_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.contributors_ = contributors_;
        } else {
          result.contributors_ = contributorsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        if (coverPhotoBuilder_ == null) {
          result.coverPhoto_ = coverPhoto_;
        } else {
          result.coverPhoto_ = coverPhotoBuilder_.build();
        }
        if (activitiesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            activities_ = java.util.Collections.unmodifiableList(activities_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.activities_ = activities_;
        } else {
          result.activities_ = activitiesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.earliestTimestamp_ = earliestTimestamp_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.latestTimestamp_ = latestTimestamp_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.photoCount_ = photoCount_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.commentCount_ = commentCount_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.newPhotoCount_ = newPhotoCount_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        result.newCommentCount_ = newCommentCount_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000100;
        }
        result.provisional_ = provisional_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000200;
        }
        result.scrollToRow_ = scrollToRow_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata) {
          return mergeFrom((co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata other) {
        if (other == co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.getDefaultInstance()) return this;
        if (other.hasViewpointId()) {
          setViewpointId(other.getViewpointId());
        }
        if (contributorsBuilder_ == null) {
          if (!other.contributors_.isEmpty()) {
            if (contributors_.isEmpty()) {
              contributors_ = other.contributors_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureContributorsIsMutable();
              contributors_.addAll(other.contributors_);
            }
            onChanged();
          }
        } else {
          if (!other.contributors_.isEmpty()) {
            if (contributorsBuilder_.isEmpty()) {
              contributorsBuilder_.dispose();
              contributorsBuilder_ = null;
              contributors_ = other.contributors_;
              bitField0_ = (bitField0_ & ~0x00000002);
              contributorsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getContributorsFieldBuilder() : null;
            } else {
              contributorsBuilder_.addAllMessages(other.contributors_);
            }
          }
        }
        if (other.hasCoverPhoto()) {
          mergeCoverPhoto(other.getCoverPhoto());
        }
        if (activitiesBuilder_ == null) {
          if (!other.activities_.isEmpty()) {
            if (activities_.isEmpty()) {
              activities_ = other.activities_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureActivitiesIsMutable();
              activities_.addAll(other.activities_);
            }
            onChanged();
          }
        } else {
          if (!other.activities_.isEmpty()) {
            if (activitiesBuilder_.isEmpty()) {
              activitiesBuilder_.dispose();
              activitiesBuilder_ = null;
              activities_ = other.activities_;
              bitField0_ = (bitField0_ & ~0x00000008);
              activitiesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getActivitiesFieldBuilder() : null;
            } else {
              activitiesBuilder_.addAllMessages(other.activities_);
            }
          }
        }
        if (other.hasEarliestTimestamp()) {
          setEarliestTimestamp(other.getEarliestTimestamp());
        }
        if (other.hasLatestTimestamp()) {
          setLatestTimestamp(other.getLatestTimestamp());
        }
        if (other.hasPhotoCount()) {
          setPhotoCount(other.getPhotoCount());
        }
        if (other.hasCommentCount()) {
          setCommentCount(other.getCommentCount());
        }
        if (other.hasNewPhotoCount()) {
          setNewPhotoCount(other.getNewPhotoCount());
        }
        if (other.hasNewCommentCount()) {
          setNewCommentCount(other.getNewCommentCount());
        }
        if (other.hasProvisional()) {
          setProvisional(other.getProvisional());
        }
        if (other.hasScrollToRow()) {
          setScrollToRow(other.getScrollToRow());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 viewpoint_id = 1;
      private long viewpointId_ ;
      /**
       * <code>optional int64 viewpoint_id = 1;</code>
       *
       * <pre>
       * The viewpoint.
       * </pre>
       */
      public boolean hasViewpointId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 viewpoint_id = 1;</code>
       *
       * <pre>
       * The viewpoint.
       * </pre>
       */
      public long getViewpointId() {
        return viewpointId_;
      }
      /**
       * <code>optional int64 viewpoint_id = 1;</code>
       *
       * <pre>
       * The viewpoint.
       * </pre>
       */
      public Builder setViewpointId(long value) {
        bitField0_ |= 0x00000001;
        viewpointId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 viewpoint_id = 1;</code>
       *
       * <pre>
       * The viewpoint.
       * </pre>
       */
      public Builder clearViewpointId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        viewpointId_ = 0L;
        onChanged();
        return this;
      }

      // repeated .ViewpointSummaryMetadata.Contributor contributors = 2;
      private java.util.List<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor> contributors_ =
        java.util.Collections.emptyList();
      private void ensureContributorsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          contributors_ = new java.util.ArrayList<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor>(contributors_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor.Builder, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ContributorOrBuilder> contributorsBuilder_;

      /**
       * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
       *
       * <pre>
       * Contributors, sorted by most recent activity.
       * </pre>
       */
      public java.util.List<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor> getContributorsList() {
        if (contributorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(contributors_);
        } else {
          return contributorsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
       *
       * <pre>
       * Contributors, sorted by most recent activity.
       * </pre>
       */
      public int getContributorsCount() {
        if (contributorsBuilder_ == null) {
          return contributors_.size();
        } else {
          return contributorsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
       *
       * <pre>
       * Contributors, sorted by most recent activity.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor getContributors(int index) {
        if (contributorsBuilder_ == null) {
          return contributors_.get(index);
        } else {
          return contributorsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
       *
       * <pre>
       * Contributors, sorted by most recent activity.
       * </pre>
       */
      public Builder setContributors(
          int index, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor value) {
        if (contributorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContributorsIsMutable();
          contributors_.set(index, value);
          onChanged();
        } else {
          contributorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
       *
       * <pre>
       * Contributors, sorted by most recent activity.
       * </pre>
       */
      public Builder setContributors(
          int index, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor.Builder builderForValue) {
        if (contributorsBuilder_ == null) {
          ensureContributorsIsMutable();
          contributors_.set(index, builderForValue.build());
          onChanged();
        } else {
          contributorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
       *
       * <pre>
       * Contributors, sorted by most recent activity.
       * </pre>
       */
      public Builder addContributors(co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor value) {
        if (contributorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContributorsIsMutable();
          contributors_.add(value);
          onChanged();
        } else {
          contributorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
       *
       * <pre>
       * Contributors, sorted by most recent activity.
       * </pre>
       */
      public Builder addContributors(
          int index, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor value) {
        if (contributorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContributorsIsMutable();
          contributors_.add(index, value);
          onChanged();
        } else {
          contributorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
       *
       * <pre>
       * Contributors, sorted by most recent activity.
       * </pre>
       */
      public Builder addContributors(
          co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor.Builder builderForValue) {
        if (contributorsBuilder_ == null) {
          ensureContributorsIsMutable();
          contributors_.add(builderForValue.build());
          onChanged();
        } else {
          contributorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
       *
       * <pre>
       * Contributors, sorted by most recent activity.
       * </pre>
       */
      public Builder addContributors(
          int index, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor.Builder builderForValue) {
        if (contributorsBuilder_ == null) {
          ensureContributorsIsMutable();
          contributors_.add(index, builderForValue.build());
          onChanged();
        } else {
          contributorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
       *
       * <pre>
       * Contributors, sorted by most recent activity.
       * </pre>
       */
      public Builder addAllContributors(
          java.lang.Iterable<? extends co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor> values) {
        if (contributorsBuilder_ == null) {
          ensureContributorsIsMutable();
          super.addAll(values, contributors_);
          onChanged();
        } else {
          contributorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
       *
       * <pre>
       * Contributors, sorted by most recent activity.
       * </pre>
       */
      public Builder clearContributors() {
        if (contributorsBuilder_ == null) {
          contributors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          contributorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
       *
       * <pre>
       * Contributors, sorted by most recent activity.
       * </pre>
       */
      public Builder removeContributors(int index) {
        if (contributorsBuilder_ == null) {
          ensureContributorsIsMutable();
          contributors_.remove(index);
          onChanged();
        } else {
          contributorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
       *
       * <pre>
       * Contributors, sorted by most recent activity.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor.Builder getContributorsBuilder(
          int index) {
        return getContributorsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
       *
       * <pre>
       * Contributors, sorted by most recent activity.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ContributorOrBuilder getContributorsOrBuilder(
          int index) {
        if (contributorsBuilder_ == null) {
          return contributors_.get(index);  } else {
          return contributorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
       *
       * <pre>
       * Contributors, sorted by most recent activity.
       * </pre>
       */
      public java.util.List<? extends co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ContributorOrBuilder> 
           getContributorsOrBuilderList() {
        if (contributorsBuilder_ != null) {
          return contributorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(contributors_);
        }
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
       *
       * <pre>
       * Contributors, sorted by most recent activity.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor.Builder addContributorsBuilder() {
        return getContributorsFieldBuilder().addBuilder(
            co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor.getDefaultInstance());
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
       *
       * <pre>
       * Contributors, sorted by most recent activity.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor.Builder addContributorsBuilder(
          int index) {
        return getContributorsFieldBuilder().addBuilder(
            index, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor.getDefaultInstance());
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.Contributor contributors = 2;</code>
       *
       * <pre>
       * Contributors, sorted by most recent activity.
       * </pre>
       */
      public java.util.List<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor.Builder> 
           getContributorsBuilderList() {
        return getContributorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor.Builder, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ContributorOrBuilder> 
          getContributorsFieldBuilder() {
        if (contributorsBuilder_ == null) {
          contributorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.Contributor.Builder, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ContributorOrBuilder>(
                  contributors_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          contributors_ = null;
        }
        return contributorsBuilder_;
      }

      // optional .DayPhoto cover_photo = 3;
      private co.viewfinder.proto.DayMetadataPB.DayPhoto coverPhoto_ = co.viewfinder.proto.DayMetadataPB.DayPhoto.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.DayPhoto, co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder, co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder> coverPhotoBuilder_;
      /**
       * <code>optional .DayPhoto cover_photo = 3;</code>
       *
       * <pre>
       * The cover photo.
       * </pre>
       */
      public boolean hasCoverPhoto() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .DayPhoto cover_photo = 3;</code>
       *
       * <pre>
       * The cover photo.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.DayPhoto getCoverPhoto() {
        if (coverPhotoBuilder_ == null) {
          return coverPhoto_;
        } else {
          return coverPhotoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .DayPhoto cover_photo = 3;</code>
       *
       * <pre>
       * The cover photo.
       * </pre>
       */
      public Builder setCoverPhoto(co.viewfinder.proto.DayMetadataPB.DayPhoto value) {
        if (coverPhotoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          coverPhoto_ = value;
          onChanged();
        } else {
          coverPhotoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .DayPhoto cover_photo = 3;</code>
       *
       * <pre>
       * The cover photo.
       * </pre>
       */
      public Builder setCoverPhoto(
          co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder builderForValue) {
        if (coverPhotoBuilder_ == null) {
          coverPhoto_ = builderForValue.build();
          onChanged();
        } else {
          coverPhotoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .DayPhoto cover_photo = 3;</code>
       *
       * <pre>
       * The cover photo.
       * </pre>
       */
      public Builder mergeCoverPhoto(co.viewfinder.proto.DayMetadataPB.DayPhoto value) {
        if (coverPhotoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              coverPhoto_ != co.viewfinder.proto.DayMetadataPB.DayPhoto.getDefaultInstance()) {
            coverPhoto_ =
              co.viewfinder.proto.DayMetadataPB.DayPhoto.newBuilder(coverPhoto_).mergeFrom(value).buildPartial();
          } else {
            coverPhoto_ = value;
          }
          onChanged();
        } else {
          coverPhotoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .DayPhoto cover_photo = 3;</code>
       *
       * <pre>
       * The cover photo.
       * </pre>
       */
      public Builder clearCoverPhoto() {
        if (coverPhotoBuilder_ == null) {
          coverPhoto_ = co.viewfinder.proto.DayMetadataPB.DayPhoto.getDefaultInstance();
          onChanged();
        } else {
          coverPhotoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .DayPhoto cover_photo = 3;</code>
       *
       * <pre>
       * The cover photo.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder getCoverPhotoBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getCoverPhotoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .DayPhoto cover_photo = 3;</code>
       *
       * <pre>
       * The cover photo.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder getCoverPhotoOrBuilder() {
        if (coverPhotoBuilder_ != null) {
          return coverPhotoBuilder_.getMessageOrBuilder();
        } else {
          return coverPhoto_;
        }
      }
      /**
       * <code>optional .DayPhoto cover_photo = 3;</code>
       *
       * <pre>
       * The cover photo.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.DayPhoto, co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder, co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder> 
          getCoverPhotoFieldBuilder() {
        if (coverPhotoBuilder_ == null) {
          coverPhotoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              co.viewfinder.proto.DayMetadataPB.DayPhoto, co.viewfinder.proto.DayMetadataPB.DayPhoto.Builder, co.viewfinder.proto.DayMetadataPB.DayPhotoOrBuilder>(
                  coverPhoto_,
                  getParentForChildren(),
                  isClean());
          coverPhoto_ = null;
        }
        return coverPhotoBuilder_;
      }

      // repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;
      private java.util.List<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow> activities_ =
        java.util.Collections.emptyList();
      private void ensureActivitiesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          activities_ = new java.util.ArrayList<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow>(activities_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Builder, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRowOrBuilder> activitiesBuilder_;

      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
       *
       * <pre>
       * Activity rows.
       * </pre>
       */
      public java.util.List<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow> getActivitiesList() {
        if (activitiesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(activities_);
        } else {
          return activitiesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
       *
       * <pre>
       * Activity rows.
       * </pre>
       */
      public int getActivitiesCount() {
        if (activitiesBuilder_ == null) {
          return activities_.size();
        } else {
          return activitiesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
       *
       * <pre>
       * Activity rows.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow getActivities(int index) {
        if (activitiesBuilder_ == null) {
          return activities_.get(index);
        } else {
          return activitiesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
       *
       * <pre>
       * Activity rows.
       * </pre>
       */
      public Builder setActivities(
          int index, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow value) {
        if (activitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActivitiesIsMutable();
          activities_.set(index, value);
          onChanged();
        } else {
          activitiesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
       *
       * <pre>
       * Activity rows.
       * </pre>
       */
      public Builder setActivities(
          int index, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Builder builderForValue) {
        if (activitiesBuilder_ == null) {
          ensureActivitiesIsMutable();
          activities_.set(index, builderForValue.build());
          onChanged();
        } else {
          activitiesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
       *
       * <pre>
       * Activity rows.
       * </pre>
       */
      public Builder addActivities(co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow value) {
        if (activitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActivitiesIsMutable();
          activities_.add(value);
          onChanged();
        } else {
          activitiesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
       *
       * <pre>
       * Activity rows.
       * </pre>
       */
      public Builder addActivities(
          int index, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow value) {
        if (activitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActivitiesIsMutable();
          activities_.add(index, value);
          onChanged();
        } else {
          activitiesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
       *
       * <pre>
       * Activity rows.
       * </pre>
       */
      public Builder addActivities(
          co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Builder builderForValue) {
        if (activitiesBuilder_ == null) {
          ensureActivitiesIsMutable();
          activities_.add(builderForValue.build());
          onChanged();
        } else {
          activitiesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
       *
       * <pre>
       * Activity rows.
       * </pre>
       */
      public Builder addActivities(
          int index, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Builder builderForValue) {
        if (activitiesBuilder_ == null) {
          ensureActivitiesIsMutable();
          activities_.add(index, builderForValue.build());
          onChanged();
        } else {
          activitiesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
       *
       * <pre>
       * Activity rows.
       * </pre>
       */
      public Builder addAllActivities(
          java.lang.Iterable<? extends co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow> values) {
        if (activitiesBuilder_ == null) {
          ensureActivitiesIsMutable();
          super.addAll(values, activities_);
          onChanged();
        } else {
          activitiesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
       *
       * <pre>
       * Activity rows.
       * </pre>
       */
      public Builder clearActivities() {
        if (activitiesBuilder_ == null) {
          activities_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          activitiesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
       *
       * <pre>
       * Activity rows.
       * </pre>
       */
      public Builder removeActivities(int index) {
        if (activitiesBuilder_ == null) {
          ensureActivitiesIsMutable();
          activities_.remove(index);
          onChanged();
        } else {
          activitiesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
       *
       * <pre>
       * Activity rows.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Builder getActivitiesBuilder(
          int index) {
        return getActivitiesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
       *
       * <pre>
       * Activity rows.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRowOrBuilder getActivitiesOrBuilder(
          int index) {
        if (activitiesBuilder_ == null) {
          return activities_.get(index);  } else {
          return activitiesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
       *
       * <pre>
       * Activity rows.
       * </pre>
       */
      public java.util.List<? extends co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRowOrBuilder> 
           getActivitiesOrBuilderList() {
        if (activitiesBuilder_ != null) {
          return activitiesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(activities_);
        }
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
       *
       * <pre>
       * Activity rows.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Builder addActivitiesBuilder() {
        return getActivitiesFieldBuilder().addBuilder(
            co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.getDefaultInstance());
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
       *
       * <pre>
       * Activity rows.
       * </pre>
       */
      public co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Builder addActivitiesBuilder(
          int index) {
        return getActivitiesFieldBuilder().addBuilder(
            index, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.getDefaultInstance());
      }
      /**
       * <code>repeated .ViewpointSummaryMetadata.ActivityRow activities = 4;</code>
       *
       * <pre>
       * Activity rows.
       * </pre>
       */
      public java.util.List<co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Builder> 
           getActivitiesBuilderList() {
        return getActivitiesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Builder, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRowOrBuilder> 
          getActivitiesFieldBuilder() {
        if (activitiesBuilder_ == null) {
          activitiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRow.Builder, co.viewfinder.proto.DayMetadataPB.ViewpointSummaryMetadata.ActivityRowOrBuilder>(
                  activities_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          activities_ = null;
        }
        return activitiesBuilder_;
      }

      // optional double earliest_timestamp = 5;
      private double earliestTimestamp_ ;
      /**
       * <code>optional double earliest_timestamp = 5;</code>
       *
       * <pre>
       * Initial activity timestamp.
       * </pre>
       */
      public boolean hasEarliestTimestamp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional double earliest_timestamp = 5;</code>
       *
       * <pre>
       * Initial activity timestamp.
       * </pre>
       */
      public double getEarliestTimestamp() {
        return earliestTimestamp_;
      }
      /**
       * <code>optional double earliest_timestamp = 5;</code>
       *
       * <pre>
       * Initial activity timestamp.
       * </pre>
       */
      public Builder setEarliestTimestamp(double value) {
        bitField0_ |= 0x00000010;
        earliestTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double earliest_timestamp = 5;</code>
       *
       * <pre>
       * Initial activity timestamp.
       * </pre>
       */
      public Builder clearEarliestTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        earliestTimestamp_ = 0D;
        onChanged();
        return this;
      }

      // optional double latest_timestamp = 6;
      private double latestTimestamp_ ;
      /**
       * <code>optional double latest_timestamp = 6;</code>
       *
       * <pre>
       * Latest activity timestamp.
       * </pre>
       */
      public boolean hasLatestTimestamp() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional double latest_timestamp = 6;</code>
       *
       * <pre>
       * Latest activity timestamp.
       * </pre>
       */
      public double getLatestTimestamp() {
        return latestTimestamp_;
      }
      /**
       * <code>optional double latest_timestamp = 6;</code>
       *
       * <pre>
       * Latest activity timestamp.
       * </pre>
       */
      public Builder setLatestTimestamp(double value) {
        bitField0_ |= 0x00000020;
        latestTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double latest_timestamp = 6;</code>
       *
       * <pre>
       * Latest activity timestamp.
       * </pre>
       */
      public Builder clearLatestTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000020);
        latestTimestamp_ = 0D;
        onChanged();
        return this;
      }

      // optional int32 photo_count = 7;
      private int photoCount_ ;
      /**
       * <code>optional int32 photo_count = 7;</code>
       *
       * <pre>
       * Total count of photos in viewpoint.
       * </pre>
       */
      public boolean hasPhotoCount() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 photo_count = 7;</code>
       *
       * <pre>
       * Total count of photos in viewpoint.
       * </pre>
       */
      public int getPhotoCount() {
        return photoCount_;
      }
      /**
       * <code>optional int32 photo_count = 7;</code>
       *
       * <pre>
       * Total count of photos in viewpoint.
       * </pre>
       */
      public Builder setPhotoCount(int value) {
        bitField0_ |= 0x00000040;
        photoCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 photo_count = 7;</code>
       *
       * <pre>
       * Total count of photos in viewpoint.
       * </pre>
       */
      public Builder clearPhotoCount() {
        bitField0_ = (bitField0_ & ~0x00000040);
        photoCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 comment_count = 8;
      private int commentCount_ ;
      /**
       * <code>optional int32 comment_count = 8;</code>
       *
       * <pre>
       * Total count of comments in viewpoint.
       * </pre>
       */
      public boolean hasCommentCount() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 comment_count = 8;</code>
       *
       * <pre>
       * Total count of comments in viewpoint.
       * </pre>
       */
      public int getCommentCount() {
        return commentCount_;
      }
      /**
       * <code>optional int32 comment_count = 8;</code>
       *
       * <pre>
       * Total count of comments in viewpoint.
       * </pre>
       */
      public Builder setCommentCount(int value) {
        bitField0_ |= 0x00000080;
        commentCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 comment_count = 8;</code>
       *
       * <pre>
       * Total count of comments in viewpoint.
       * </pre>
       */
      public Builder clearCommentCount() {
        bitField0_ = (bitField0_ & ~0x00000080);
        commentCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 new_photo_count = 9;
      private int newPhotoCount_ ;
      /**
       * <code>optional int32 new_photo_count = 9;</code>
       *
       * <pre>
       * Count of photos part of unviewed activities.
       * </pre>
       */
      public boolean hasNewPhotoCount() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 new_photo_count = 9;</code>
       *
       * <pre>
       * Count of photos part of unviewed activities.
       * </pre>
       */
      public int getNewPhotoCount() {
        return newPhotoCount_;
      }
      /**
       * <code>optional int32 new_photo_count = 9;</code>
       *
       * <pre>
       * Count of photos part of unviewed activities.
       * </pre>
       */
      public Builder setNewPhotoCount(int value) {
        bitField0_ |= 0x00000100;
        newPhotoCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 new_photo_count = 9;</code>
       *
       * <pre>
       * Count of photos part of unviewed activities.
       * </pre>
       */
      public Builder clearNewPhotoCount() {
        bitField0_ = (bitField0_ & ~0x00000100);
        newPhotoCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 new_comment_count = 10;
      private int newCommentCount_ ;
      /**
       * <code>optional int32 new_comment_count = 10;</code>
       *
       * <pre>
       * Count of comments part of unviewed activities.
       * </pre>
       */
      public boolean hasNewCommentCount() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 new_comment_count = 10;</code>
       *
       * <pre>
       * Count of comments part of unviewed activities.
       * </pre>
       */
      public int getNewCommentCount() {
        return newCommentCount_;
      }
      /**
       * <code>optional int32 new_comment_count = 10;</code>
       *
       * <pre>
       * Count of comments part of unviewed activities.
       * </pre>
       */
      public Builder setNewCommentCount(int value) {
        bitField0_ |= 0x00000200;
        newCommentCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 new_comment_count = 10;</code>
       *
       * <pre>
       * Count of comments part of unviewed activities.
       * </pre>
       */
      public Builder clearNewCommentCount() {
        bitField0_ = (bitField0_ & ~0x00000200);
        newCommentCount_ = 0;
        onChanged();
        return this;
      }

      // optional bool provisional = 11;
      private boolean provisional_ ;
      /**
       * <code>optional bool provisional = 11;</code>
       *
       * <pre>
       * True if the viewpoint is provisional.
       * </pre>
       */
      public boolean hasProvisional() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool provisional = 11;</code>
       *
       * <pre>
       * True if the viewpoint is provisional.
       * </pre>
       */
      public boolean getProvisional() {
        return provisional_;
      }
      /**
       * <code>optional bool provisional = 11;</code>
       *
       * <pre>
       * True if the viewpoint is provisional.
       * </pre>
       */
      public Builder setProvisional(boolean value) {
        bitField0_ |= 0x00000400;
        provisional_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool provisional = 11;</code>
       *
       * <pre>
       * True if the viewpoint is provisional.
       * </pre>
       */
      public Builder clearProvisional() {
        bitField0_ = (bitField0_ & ~0x00000400);
        provisional_ = false;
        onChanged();
        return this;
      }

      // optional float scroll_to_row = 12;
      private float scrollToRow_ ;
      /**
       * <code>optional float scroll_to_row = 12;</code>
       *
       * <pre>
       * Scroll to this row when viewpoint is viewed.
       * </pre>
       */
      public boolean hasScrollToRow() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float scroll_to_row = 12;</code>
       *
       * <pre>
       * Scroll to this row when viewpoint is viewed.
       * </pre>
       */
      public float getScrollToRow() {
        return scrollToRow_;
      }
      /**
       * <code>optional float scroll_to_row = 12;</code>
       *
       * <pre>
       * Scroll to this row when viewpoint is viewed.
       * </pre>
       */
      public Builder setScrollToRow(float value) {
        bitField0_ |= 0x00000800;
        scrollToRow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float scroll_to_row = 12;</code>
       *
       * <pre>
       * Scroll to this row when viewpoint is viewed.
       * </pre>
       */
      public Builder clearScrollToRow() {
        bitField0_ = (bitField0_ & ~0x00000800);
        scrollToRow_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ViewpointSummaryMetadata)
    }

    static {
      defaultInstance = new ViewpointSummaryMetadata(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ViewpointSummaryMetadata)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DayContributor_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DayContributor_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DayPhoto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DayPhoto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FilteredEpisode_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FilteredEpisode_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TrapdoorMetadata_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TrapdoorMetadata_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EventMetadata_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EventMetadata_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CachedEpisode_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CachedEpisode_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DayMetadata_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DayMetadata_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SummaryRow_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SummaryRow_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SummaryMetadata_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SummaryMetadata_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ViewpointSummaryMetadata_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ViewpointSummaryMetadata_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ViewpointSummaryMetadata_Contributor_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ViewpointSummaryMetadata_Contributor_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ViewpointSummaryMetadata_ActivityRow_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ViewpointSummaryMetadata_ActivityRow_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ViewpointSummaryMetadata_ActivityRow_Photo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ViewpointSummaryMetadata_ActivityRow_Photo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021DayMetadata.proto\032\020ContentIds.proto\032\016L" +
      "ocation.proto\032\017Placemark.proto\"\257\001\n\016DayCo" +
      "ntributor\022\017\n\007user_id\030\001 \001(\003\022-\n\004type\030\002 \001(\016" +
      "2\037.DayContributor.ContributorType\022\020\n\010ide" +
      "ntity\030\003 \001(\t\"K\n\017ContributorType\022\024\n\020UNVIEW" +
      "ED_CONTENT\020\001\022\022\n\016VIEWED_CONTENT\020\002\022\016\n\nNO_C" +
      "ONTENT\020\004\"Y\n\010DayPhoto\022\020\n\010photo_id\030\001 \001(\003\022\022" +
      "\n\nepisode_id\030\002 \001(\003\022\024\n\014aspect_ratio\030\003 \001(\001" +
      "\022\021\n\ttimestamp\030\004 \001(\001\"8\n\017FilteredEpisode\022\022" +
      "\n\nepisode_id\030\001 \001(\003\022\021\n\tphoto_ids\030\002 \003(\003\"\342\003",
      "\n\020TrapdoorMetadata\022\024\n\014viewpoint_id\030\001 \001(\003" +
      "\022$\n\004type\030\002 \001(\0162\026.TrapdoorMetadata.Type\022\036" +
      "\n\013cover_photo\030\003 \001(\0132\t.DayPhoto\022\032\n\022earlie" +
      "st_timestamp\030\004 \001(\001\022\030\n\020latest_timestamp\030\005" +
      " \001(\001\022\023\n\013event_index\030\006 \001(\005\022%\n\014contributor" +
      "s\030\007 \003(\0132\017.DayContributor\022\031\n\006photos\030\010 \003(\013" +
      "2\t.DayPhoto\022\023\n\013sub_sampled\030\t \001(\010\022\023\n\013phot" +
      "o_count\030\n \001(\005\022\025\n\rcomment_count\030\013 \001(\005\022\027\n\017" +
      "new_photo_count\030\014 \001(\005\022\031\n\021new_comment_cou" +
      "nt\030\r \001(\005\022\030\n\020unviewed_content\030\016 \001(\010\022\027\n\017pe",
      "nding_content\030\017 \001(\010\022\r\n\005muted\030\020 \001(\010\022\020\n\010au" +
      "tosave\030\021 \001(\010\"\034\n\004Type\022\t\n\005INBOX\020\001\022\t\n\005EVENT" +
      "\020\002\"\275\002\n\rEventMetadata\022\032\n\022earliest_timesta" +
      "mp\030\001 \001(\001\022\030\n\020latest_timestamp\030\002 \001(\001\022\023\n\013ph" +
      "oto_count\030\003 \001(\005\022\"\n\010episodes\030\004 \003(\0132\020.Filt" +
      "eredEpisode\022%\n\014contributors\030\005 \003(\0132\017.DayC" +
      "ontributor\022\033\n\010location\030\006 \001(\0132\t.Location\022" +
      "\035\n\tplacemark\030\007 \001(\0132\n.Placemark\022\020\n\010distan" +
      "ce\030\010 \001(\001\022$\n\ttrapdoors\030\t \003(\0132\021.TrapdoorMe" +
      "tadata\022\r\n\005title\030\n \001(\t\022\023\n\013short_title\030\013 \001",
      "(\t\"\273\002\n\rCachedEpisode\022\026\n\002id\030\001 \001(\0132\n.Episo" +
      "deId\022\035\n\tparent_id\030\002 \001(\0132\n.EpisodeId\022\"\n\014v" +
      "iewpoint_id\030\003 \001(\0132\014.ViewpointId\022\017\n\007user_" +
      "id\030\004 \001(\003\022\021\n\ttimestamp\030\005 \001(\001\022\033\n\010location\030" +
      "\006 \001(\0132\t.Location\022\035\n\tplacemark\030\007 \001(\0132\n.Pl" +
      "acemark\022 \n\030earliest_photo_timestamp\030\010 \001(" +
      "\001\022\036\n\026latest_photo_timestamp\030\t \001(\001\022\031\n\006pho" +
      "tos\030\n \003(\0132\t.DayPhoto\022\022\n\nin_library\030\013 \001(\010" +
      "\"B\n\013DayMetadata\022\021\n\ttimestamp\030\001 \001(\001\022 \n\010ep" +
      "isodes\030\002 \003(\0132\016.CachedEpisode\"\227\003\n\nSummary",
      "Row\022!\n\004type\030\001 \001(\0162\023.SummaryRow.RowType\022\021" +
      "\n\ttimestamp\030\002 \001(\001\022\025\n\rday_timestamp\030\003 \001(\001" +
      "\022\022\n\nidentifier\030\004 \001(\003\022\016\n\006height\030\005 \001(\002\022\020\n\010" +
      "unviewed\030\006 \001(\010\022\020\n\010position\030\007 \001(\002\022\016\n\006weig" +
      "ht\030\010 \001(\002\022\023\n\013photo_count\030\t \001(\005\022\025\n\rcomment" +
      "_count\030\n \001(\005\022\031\n\021contributor_count\030\013 \001(\005\022" +
      "\023\n\013share_count\030\014 \001(\005\022\020\n\010distance\030\r \001(\001\022\022" +
      "\n\nepisode_id\030\016 \001(\003\022\032\n\022original_row_index" +
      "\030\024 \001(\005\"F\n\007RowType\022\t\n\005EVENT\020\001\022\016\n\nFULL_EVE" +
      "NT\020\002\022\022\n\016EVENT_TRAPDOOR\020\004\022\014\n\010TRAPDOOR\020\005\"o",
      "\n\017SummaryMetadata\022\031\n\004rows\030\001 \003(\0132\013.Summar" +
      "yRow\022\026\n\016unviewed_count\030\006 \001(\005\022\023\n\013photo_co" +
      "unt\030\010 \001(\005\022\024\n\014total_height\030\t \001(\002\"\203\010\n\030View" +
      "pointSummaryMetadata\022\024\n\014viewpoint_id\030\001 \001" +
      "(\003\022;\n\014contributors\030\002 \003(\0132%.ViewpointSumm" +
      "aryMetadata.Contributor\022\036\n\013cover_photo\030\003" +
      " \001(\0132\t.DayPhoto\0229\n\nactivities\030\004 \003(\0132%.Vi" +
      "ewpointSummaryMetadata.ActivityRow\022\032\n\022ea" +
      "rliest_timestamp\030\005 \001(\001\022\030\n\020latest_timesta" +
      "mp\030\006 \001(\001\022\023\n\013photo_count\030\007 \001(\005\022\025\n\rcomment",
      "_count\030\010 \001(\005\022\027\n\017new_photo_count\030\t \001(\005\022\031\n" +
      "\021new_comment_count\030\n \001(\005\022\023\n\013provisional\030" +
      "\013 \001(\010\022\025\n\rscroll_to_row\030\014 \001(\002\032D\n\013Contribu" +
      "tor\022\017\n\007user_id\030\001 \001(\003\022\022\n\nupdate_seq\030\002 \001(\001" +
      "\022\020\n\010identity\030\003 \001(\t\032\300\003\n\013ActivityRow\022\023\n\013ac" +
      "tivity_id\030\001 \001(\003\022\020\n\010user_ids\030\002 \003(\003\022\027\n\017use" +
      "r_identities\030\016 \003(\t\022\021\n\ttimestamp\030\003 \001(\001\0227\n" +
      "\004type\030\004 \001(\0162).ViewpointSummaryMetadata.A" +
      "ctivityRowType\022\016\n\006height\030\005 \001(\002\022\020\n\010positi" +
      "on\030\006 \001(\002\022\021\n\trow_count\030\007 \001(\005\022\022\n\nupdate_se",
      "q\030\010 \001(\003\022\017\n\007pending\030\t \001(\010\022\023\n\013thread_type\030" +
      "\n \001(\005\022;\n\006photos\030\013 \003(\0132+.ViewpointSummary" +
      "Metadata.ActivityRow.Photo\022\022\n\nis_comment" +
      "\030\014 \001(\010\022\033\n\023is_provisional_hint\030\r \001(\010\032H\n\005P" +
      "hoto\022\020\n\010photo_id\030\001 \001(\003\022\022\n\nepisode_id\030\002 \001" +
      "(\003\022\031\n\021parent_episode_id\030\003 \001(\003\"n\n\017Activit" +
      "yRowType\022\n\n\006HEADER\020\001\022\014\n\010ACTIVITY\020\002\022\022\n\016RE" +
      "PLY_ACTIVITY\020\003\022\n\n\006PHOTOS\020\004\022\t\n\005TITLE\020\005\022\n\n" +
      "\006UPDATE\020\006\022\n\n\006FOOTER\020\007B$\n\023co.viewfinder.p" +
      "rotoB\rDayMetadataPB"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_DayContributor_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_DayContributor_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DayContributor_descriptor,
              new java.lang.String[] { "UserId", "Type", "Identity", });
          internal_static_DayPhoto_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_DayPhoto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DayPhoto_descriptor,
              new java.lang.String[] { "PhotoId", "EpisodeId", "AspectRatio", "Timestamp", });
          internal_static_FilteredEpisode_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_FilteredEpisode_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FilteredEpisode_descriptor,
              new java.lang.String[] { "EpisodeId", "PhotoIds", });
          internal_static_TrapdoorMetadata_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_TrapdoorMetadata_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TrapdoorMetadata_descriptor,
              new java.lang.String[] { "ViewpointId", "Type", "CoverPhoto", "EarliestTimestamp", "LatestTimestamp", "EventIndex", "Contributors", "Photos", "SubSampled", "PhotoCount", "CommentCount", "NewPhotoCount", "NewCommentCount", "UnviewedContent", "PendingContent", "Muted", "Autosave", });
          internal_static_EventMetadata_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_EventMetadata_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EventMetadata_descriptor,
              new java.lang.String[] { "EarliestTimestamp", "LatestTimestamp", "PhotoCount", "Episodes", "Contributors", "Location", "Placemark", "Distance", "Trapdoors", "Title", "ShortTitle", });
          internal_static_CachedEpisode_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_CachedEpisode_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CachedEpisode_descriptor,
              new java.lang.String[] { "Id", "ParentId", "ViewpointId", "UserId", "Timestamp", "Location", "Placemark", "EarliestPhotoTimestamp", "LatestPhotoTimestamp", "Photos", "InLibrary", });
          internal_static_DayMetadata_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_DayMetadata_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DayMetadata_descriptor,
              new java.lang.String[] { "Timestamp", "Episodes", });
          internal_static_SummaryRow_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_SummaryRow_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SummaryRow_descriptor,
              new java.lang.String[] { "Type", "Timestamp", "DayTimestamp", "Identifier", "Height", "Unviewed", "Position", "Weight", "PhotoCount", "CommentCount", "ContributorCount", "ShareCount", "Distance", "EpisodeId", "OriginalRowIndex", });
          internal_static_SummaryMetadata_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_SummaryMetadata_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SummaryMetadata_descriptor,
              new java.lang.String[] { "Rows", "UnviewedCount", "PhotoCount", "TotalHeight", });
          internal_static_ViewpointSummaryMetadata_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_ViewpointSummaryMetadata_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ViewpointSummaryMetadata_descriptor,
              new java.lang.String[] { "ViewpointId", "Contributors", "CoverPhoto", "Activities", "EarliestTimestamp", "LatestTimestamp", "PhotoCount", "CommentCount", "NewPhotoCount", "NewCommentCount", "Provisional", "ScrollToRow", });
          internal_static_ViewpointSummaryMetadata_Contributor_descriptor =
            internal_static_ViewpointSummaryMetadata_descriptor.getNestedTypes().get(0);
          internal_static_ViewpointSummaryMetadata_Contributor_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ViewpointSummaryMetadata_Contributor_descriptor,
              new java.lang.String[] { "UserId", "UpdateSeq", "Identity", });
          internal_static_ViewpointSummaryMetadata_ActivityRow_descriptor =
            internal_static_ViewpointSummaryMetadata_descriptor.getNestedTypes().get(1);
          internal_static_ViewpointSummaryMetadata_ActivityRow_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ViewpointSummaryMetadata_ActivityRow_descriptor,
              new java.lang.String[] { "ActivityId", "UserIds", "UserIdentities", "Timestamp", "Type", "Height", "Position", "RowCount", "UpdateSeq", "Pending", "ThreadType", "Photos", "IsComment", "IsProvisionalHint", });
          internal_static_ViewpointSummaryMetadata_ActivityRow_Photo_descriptor =
            internal_static_ViewpointSummaryMetadata_ActivityRow_descriptor.getNestedTypes().get(0);
          internal_static_ViewpointSummaryMetadata_ActivityRow_Photo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ViewpointSummaryMetadata_ActivityRow_Photo_descriptor,
              new java.lang.String[] { "PhotoId", "EpisodeId", "ParentEpisodeId", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          co.viewfinder.proto.ContentIdsPB.getDescriptor(),
          co.viewfinder.proto.LocationPB.getDescriptor(),
          co.viewfinder.proto.PlacemarkPB.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
